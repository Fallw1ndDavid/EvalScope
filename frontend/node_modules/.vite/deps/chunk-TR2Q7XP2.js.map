{
  "version": 3,
  "sources": ["../../echarts/lib/chart/helper/sectorHelper.js"],
  "sourcesContent": ["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { isArray, map } from 'zrender/lib/core/util.js';\nimport { parsePercent } from 'zrender/lib/contain/text.js';\nexport function getSectorCornerRadius(model, shape, zeroIfNull) {\n  var cornerRadius = model.get('borderRadius');\n  if (cornerRadius == null) {\n    return zeroIfNull ? {\n      cornerRadius: 0\n    } : null;\n  }\n  if (!isArray(cornerRadius)) {\n    cornerRadius = [cornerRadius, cornerRadius, cornerRadius, cornerRadius];\n  }\n  var dr = Math.abs(shape.r || 0 - shape.r0 || 0);\n  return {\n    cornerRadius: map(cornerRadius, function (cr) {\n      return parsePercent(cr, dr);\n    })\n  };\n}"],
  "mappings": ";;;;;;;AA6CO,SAAS,sBAAsB,OAAO,OAAO,YAAY;AAC9D,MAAI,eAAe,MAAM,IAAI,cAAc;AAC3C,MAAI,gBAAgB,MAAM;AACxB,WAAO,aAAa;AAAA,MAClB,cAAc;AAAA,IAChB,IAAI;AAAA,EACN;AACA,MAAI,CAAC,QAAQ,YAAY,GAAG;AAC1B,mBAAe,CAAC,cAAc,cAAc,cAAc,YAAY;AAAA,EACxE;AACA,MAAI,KAAK,KAAK,IAAI,MAAM,KAAK,IAAI,MAAM,MAAM,CAAC;AAC9C,SAAO;AAAA,IACL,cAAc,IAAI,cAAc,SAAU,IAAI;AAC5C,aAAO,aAAa,IAAI,EAAE;AAAA,IAC5B,CAAC;AAAA,EACH;AACF;",
  "names": []
}
