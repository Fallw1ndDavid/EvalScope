{
  "version": 3,
  "sources": ["../../echarts/lib/chart/bar/BaseBarSeries.js", "../../echarts/lib/chart/bar/BarSeries.js", "../../echarts/lib/util/shape/sausage.js", "../../echarts/lib/label/sectorLabel.js", "../../echarts/lib/chart/bar/BarView.js", "../../echarts/lib/chart/bar/install.js"],
  "sourcesContent": ["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport SeriesModel from '../../model/Series.js';\nimport createSeriesData from '../helper/createSeriesData.js';\nimport { each } from 'zrender/lib/core/util.js';\nvar BaseBarSeriesModel = /** @class */function (_super) {\n  __extends(BaseBarSeriesModel, _super);\n  function BaseBarSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = BaseBarSeriesModel.type;\n    return _this;\n  }\n  BaseBarSeriesModel.prototype.getInitialData = function (option, ecModel) {\n    return createSeriesData(null, this, {\n      useEncodeDefaulter: true\n    });\n  };\n  BaseBarSeriesModel.prototype.getMarkerPosition = function (value, dims, startingAtTick) {\n    var coordSys = this.coordinateSystem;\n    if (coordSys && coordSys.clampData) {\n      // PENDING if clamp ?\n      var clampData_1 = coordSys.clampData(value);\n      var pt_1 = coordSys.dataToPoint(clampData_1);\n      if (startingAtTick) {\n        each(coordSys.getAxes(), function (axis, idx) {\n          // If axis type is category, use tick coords instead\n          if (axis.type === 'category' && dims != null) {\n            var tickCoords = axis.getTicksCoords();\n            var alignTicksWithLabel = axis.getTickModel().get('alignWithLabel');\n            var targetTickId = clampData_1[idx];\n            // The index of rightmost tick of markArea is 1 larger than x1/y1 index\n            var isEnd = dims[idx] === 'x1' || dims[idx] === 'y1';\n            if (isEnd && !alignTicksWithLabel) {\n              targetTickId += 1;\n            }\n            // The only contains one tick, tickCoords is\n            // like [{coord: 0, tickValue: 0}, {coord: 0}]\n            // to the length should always be larger than 1\n            if (tickCoords.length < 2) {\n              return;\n            } else if (tickCoords.length === 2) {\n              // The left value and right value of the axis are\n              // the same. coord is 0 in both items. Use the max\n              // value of the axis as the coord\n              pt_1[idx] = axis.toGlobalCoord(axis.getExtent()[isEnd ? 1 : 0]);\n              return;\n            }\n            var leftCoord = void 0;\n            var coord = void 0;\n            var stepTickValue = 1;\n            for (var i = 0; i < tickCoords.length; i++) {\n              var tickCoord = tickCoords[i].coord;\n              // The last item of tickCoords doesn't contain\n              // tickValue\n              var tickValue = i === tickCoords.length - 1 ? tickCoords[i - 1].tickValue + stepTickValue : tickCoords[i].tickValue;\n              if (tickValue === targetTickId) {\n                coord = tickCoord;\n                break;\n              } else if (tickValue < targetTickId) {\n                leftCoord = tickCoord;\n              } else if (leftCoord != null && tickValue > targetTickId) {\n                coord = (tickCoord + leftCoord) / 2;\n                break;\n              }\n              if (i === 1) {\n                // Here we assume the step of category axes is\n                // the same\n                stepTickValue = tickValue - tickCoords[0].tickValue;\n              }\n            }\n            if (coord == null) {\n              if (!leftCoord) {\n                // targetTickId is smaller than all tick ids in the\n                // visible area, use the leftmost tick coord\n                coord = tickCoords[0].coord;\n              } else if (leftCoord) {\n                // targetTickId is larger than all tick ids in the\n                // visible area, use the rightmost tick coord\n                coord = tickCoords[tickCoords.length - 1].coord;\n              }\n            }\n            pt_1[idx] = axis.toGlobalCoord(coord);\n          }\n        });\n      } else {\n        var data = this.getData();\n        var offset = data.getLayout('offset');\n        var size = data.getLayout('size');\n        var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n        pt_1[offsetIndex] += offset + size / 2;\n      }\n      return pt_1;\n    }\n    return [NaN, NaN];\n  };\n  BaseBarSeriesModel.type = 'series.__base_bar__';\n  BaseBarSeriesModel.defaultOption = {\n    // zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    barMinHeight: 0,\n    barMinAngle: 0,\n    // cursor: null,\n    large: false,\n    largeThreshold: 400,\n    progressive: 3e3,\n    progressiveChunkMode: 'mod'\n  };\n  return BaseBarSeriesModel;\n}(SeriesModel);\nSeriesModel.registerClass(BaseBarSeriesModel);\nexport default BaseBarSeriesModel;", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport BaseBarSeriesModel from './BaseBarSeries.js';\nimport createSeriesData from '../helper/createSeriesData.js';\nimport { inheritDefaultOption } from '../../util/component.js';\nvar BarSeriesModel = /** @class */function (_super) {\n  __extends(BarSeriesModel, _super);\n  function BarSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = BarSeriesModel.type;\n    return _this;\n  }\n  BarSeriesModel.prototype.getInitialData = function () {\n    return createSeriesData(null, this, {\n      useEncodeDefaulter: true,\n      createInvertedIndices: !!this.get('realtimeSort', true) || null\n    });\n  };\n  /**\r\n   * @override\r\n   */\n  BarSeriesModel.prototype.getProgressive = function () {\n    // Do not support progressive in normal mode.\n    return this.get('large') ? this.get('progressive') : false;\n  };\n  /**\r\n   * @override\r\n   */\n  BarSeriesModel.prototype.getProgressiveThreshold = function () {\n    // Do not support progressive in normal mode.\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n    return progressiveThreshold;\n  };\n  BarSeriesModel.prototype.brushSelector = function (dataIndex, data, selectors) {\n    return selectors.rect(data.getItemLayout(dataIndex));\n  };\n  BarSeriesModel.type = 'series.bar';\n  BarSeriesModel.dependencies = ['grid', 'polar'];\n  BarSeriesModel.defaultOption = inheritDefaultOption(BaseBarSeriesModel.defaultOption, {\n    // If clipped\n    // Only available on cartesian2d\n    clip: true,\n    roundCap: false,\n    showBackground: false,\n    backgroundStyle: {\n      color: 'rgba(180, 180, 180, 0.2)',\n      borderColor: null,\n      borderWidth: 0,\n      borderType: 'solid',\n      borderRadius: 0,\n      shadowBlur: 0,\n      shadowColor: null,\n      shadowOffsetX: 0,\n      shadowOffsetY: 0,\n      opacity: 1\n    },\n    select: {\n      itemStyle: {\n        borderColor: '#212121'\n      }\n    },\n    realtimeSort: false\n  });\n  return BarSeriesModel;\n}(BaseBarSeriesModel);\nexport default BarSeriesModel;", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport { Path } from '../graphic.js';\n/**\r\n * Sausage: similar to sector, but have half circle on both sides\r\n */\nvar SausageShape = /** @class */function () {\n  function SausageShape() {\n    this.cx = 0;\n    this.cy = 0;\n    this.r0 = 0;\n    this.r = 0;\n    this.startAngle = 0;\n    this.endAngle = Math.PI * 2;\n    this.clockwise = true;\n  }\n  return SausageShape;\n}();\nvar SausagePath = /** @class */function (_super) {\n  __extends(SausagePath, _super);\n  function SausagePath(opts) {\n    var _this = _super.call(this, opts) || this;\n    _this.type = 'sausage';\n    return _this;\n  }\n  SausagePath.prototype.getDefaultShape = function () {\n    return new SausageShape();\n  };\n  SausagePath.prototype.buildPath = function (ctx, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var dr = (r - r0) * 0.5;\n    var rCenter = r0 + dr;\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var PI2 = Math.PI * 2;\n    var lessThanCircle = clockwise ? endAngle - startAngle < PI2 : startAngle - endAngle < PI2;\n    if (!lessThanCircle) {\n      // Normalize angles\n      startAngle = endAngle - (clockwise ? PI2 : -PI2);\n    }\n    var unitStartX = Math.cos(startAngle);\n    var unitStartY = Math.sin(startAngle);\n    var unitEndX = Math.cos(endAngle);\n    var unitEndY = Math.sin(endAngle);\n    if (lessThanCircle) {\n      ctx.moveTo(unitStartX * r0 + cx, unitStartY * r0 + cy);\n      ctx.arc(unitStartX * rCenter + cx, unitStartY * rCenter + cy, dr, -Math.PI + startAngle, startAngle, !clockwise);\n    } else {\n      ctx.moveTo(unitStartX * r + cx, unitStartY * r + cy);\n    }\n    ctx.arc(cx, cy, r, startAngle, endAngle, !clockwise);\n    ctx.arc(unitEndX * rCenter + cx, unitEndY * rCenter + cy, dr, endAngle - Math.PI * 2, endAngle - Math.PI, !clockwise);\n    if (r0 !== 0) {\n      ctx.arc(cx, cy, r0, endAngle, startAngle, clockwise);\n    }\n    // ctx.closePath();\n  };\n  return SausagePath;\n}(Path);\nexport default SausagePath;", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { calculateTextPosition } from 'zrender/lib/contain/text.js';\nimport { isArray, isNumber } from 'zrender/lib/core/util.js';\nexport function createSectorCalculateTextPosition(positionMapping, opts) {\n  opts = opts || {};\n  var isRoundCap = opts.isRoundCap;\n  return function (out, opts, boundingRect) {\n    var textPosition = opts.position;\n    if (!textPosition || textPosition instanceof Array) {\n      return calculateTextPosition(out, opts, boundingRect);\n    }\n    var mappedSectorPosition = positionMapping(textPosition);\n    var distance = opts.distance != null ? opts.distance : 5;\n    var sector = this.shape;\n    var cx = sector.cx;\n    var cy = sector.cy;\n    var r = sector.r;\n    var r0 = sector.r0;\n    var middleR = (r + r0) / 2;\n    var startAngle = sector.startAngle;\n    var endAngle = sector.endAngle;\n    var middleAngle = (startAngle + endAngle) / 2;\n    var extraDist = isRoundCap ? Math.abs(r - r0) / 2 : 0;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    // base position: top-left\n    var x = cx + r * mathCos(startAngle);\n    var y = cy + r * mathSin(startAngle);\n    var textAlign = 'left';\n    var textVerticalAlign = 'top';\n    switch (mappedSectorPosition) {\n      case 'startArc':\n        x = cx + (r0 - distance) * mathCos(middleAngle);\n        y = cy + (r0 - distance) * mathSin(middleAngle);\n        textAlign = 'center';\n        textVerticalAlign = 'top';\n        break;\n      case 'insideStartArc':\n        x = cx + (r0 + distance) * mathCos(middleAngle);\n        y = cy + (r0 + distance) * mathSin(middleAngle);\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        break;\n      case 'startAngle':\n        x = cx + middleR * mathCos(startAngle) + adjustAngleDistanceX(startAngle, distance + extraDist, false);\n        y = cy + middleR * mathSin(startAngle) + adjustAngleDistanceY(startAngle, distance + extraDist, false);\n        textAlign = 'right';\n        textVerticalAlign = 'middle';\n        break;\n      case 'insideStartAngle':\n        x = cx + middleR * mathCos(startAngle) + adjustAngleDistanceX(startAngle, -distance + extraDist, false);\n        y = cy + middleR * mathSin(startAngle) + adjustAngleDistanceY(startAngle, -distance + extraDist, false);\n        textAlign = 'left';\n        textVerticalAlign = 'middle';\n        break;\n      case 'middle':\n        x = cx + middleR * mathCos(middleAngle);\n        y = cy + middleR * mathSin(middleAngle);\n        textAlign = 'center';\n        textVerticalAlign = 'middle';\n        break;\n      case 'endArc':\n        x = cx + (r + distance) * mathCos(middleAngle);\n        y = cy + (r + distance) * mathSin(middleAngle);\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        break;\n      case 'insideEndArc':\n        x = cx + (r - distance) * mathCos(middleAngle);\n        y = cy + (r - distance) * mathSin(middleAngle);\n        textAlign = 'center';\n        textVerticalAlign = 'top';\n        break;\n      case 'endAngle':\n        x = cx + middleR * mathCos(endAngle) + adjustAngleDistanceX(endAngle, distance + extraDist, true);\n        y = cy + middleR * mathSin(endAngle) + adjustAngleDistanceY(endAngle, distance + extraDist, true);\n        textAlign = 'left';\n        textVerticalAlign = 'middle';\n        break;\n      case 'insideEndAngle':\n        x = cx + middleR * mathCos(endAngle) + adjustAngleDistanceX(endAngle, -distance + extraDist, true);\n        y = cy + middleR * mathSin(endAngle) + adjustAngleDistanceY(endAngle, -distance + extraDist, true);\n        textAlign = 'right';\n        textVerticalAlign = 'middle';\n        break;\n      default:\n        return calculateTextPosition(out, opts, boundingRect);\n    }\n    out = out || {};\n    out.x = x;\n    out.y = y;\n    out.align = textAlign;\n    out.verticalAlign = textVerticalAlign;\n    return out;\n  };\n}\nexport function setSectorTextRotation(sector, textPosition, positionMapping, rotateType) {\n  if (isNumber(rotateType)) {\n    // user-set rotation\n    sector.setTextConfig({\n      rotation: rotateType\n    });\n    return;\n  } else if (isArray(textPosition)) {\n    // user-set position, use 0 as auto rotation\n    sector.setTextConfig({\n      rotation: 0\n    });\n    return;\n  }\n  var shape = sector.shape;\n  var startAngle = shape.clockwise ? shape.startAngle : shape.endAngle;\n  var endAngle = shape.clockwise ? shape.endAngle : shape.startAngle;\n  var middleAngle = (startAngle + endAngle) / 2;\n  var anchorAngle;\n  var mappedSectorPosition = positionMapping(textPosition);\n  switch (mappedSectorPosition) {\n    case 'startArc':\n    case 'insideStartArc':\n    case 'middle':\n    case 'insideEndArc':\n    case 'endArc':\n      anchorAngle = middleAngle;\n      break;\n    case 'startAngle':\n    case 'insideStartAngle':\n      anchorAngle = startAngle;\n      break;\n    case 'endAngle':\n    case 'insideEndAngle':\n      anchorAngle = endAngle;\n      break;\n    default:\n      sector.setTextConfig({\n        rotation: 0\n      });\n      return;\n  }\n  var rotate = Math.PI * 1.5 - anchorAngle;\n  /**\r\n   * TODO: labels with rotate > Math.PI / 2 should be rotate another\r\n   * half round flipped to increase readability. However, only middle\r\n   * position supports this for now, because in other positions, the\r\n   * anchor point is not at the center of the text, so the positions\r\n   * after rotating is not as expected.\r\n   */\n  if (mappedSectorPosition === 'middle' && rotate > Math.PI / 2 && rotate < Math.PI * 1.5) {\n    rotate -= Math.PI;\n  }\n  sector.setTextConfig({\n    rotation: rotate\n  });\n}\nfunction adjustAngleDistanceX(angle, distance, isEnd) {\n  return distance * Math.sin(angle) * (isEnd ? -1 : 1);\n}\nfunction adjustAngleDistanceY(angle, distance, isEnd) {\n  return distance * Math.cos(angle) * (isEnd ? 1 : -1);\n}", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport Path from 'zrender/lib/graphic/Path.js';\nimport Group from 'zrender/lib/graphic/Group.js';\nimport { extend, each, map } from 'zrender/lib/core/util.js';\nimport { Rect, Sector, updateProps, initProps, removeElementWithFadeOut, traverseElements } from '../../util/graphic.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { setStatesStylesFromModel, toggleHoverEmphasis } from '../../util/states.js';\nimport { setLabelStyle, getLabelStatesModels, setLabelValueAnimation, labelInner } from '../../label/labelStyle.js';\nimport { throttle } from '../../util/throttle.js';\nimport { createClipPath } from '../helper/createClipPathFromCoordSys.js';\nimport Sausage from '../../util/shape/sausage.js';\nimport ChartView from '../../view/Chart.js';\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem.js';\nimport { getDefaultLabel, getDefaultInterpolatedLabel } from '../helper/labelHelper.js';\nimport { warn } from '../../util/log.js';\nimport { createSectorCalculateTextPosition, setSectorTextRotation } from '../../label/sectorLabel.js';\nimport { saveOldStyle } from '../../animation/basicTransition.js';\nimport { getSectorCornerRadius } from '../helper/sectorHelper.js';\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nfunction getClipArea(coord, data) {\n  var coordSysClipArea = coord.getArea && coord.getArea();\n  if (isCoordinateSystemType(coord, 'cartesian2d')) {\n    var baseAxis = coord.getBaseAxis();\n    // When boundaryGap is false or using time axis. bar may exceed the grid.\n    // We should not clip this part.\n    // See test/bar2.html\n    if (baseAxis.type !== 'category' || !baseAxis.onBand) {\n      var expandWidth = data.getLayout('bandWidth');\n      if (baseAxis.isHorizontal()) {\n        coordSysClipArea.x -= expandWidth;\n        coordSysClipArea.width += expandWidth * 2;\n      } else {\n        coordSysClipArea.y -= expandWidth;\n        coordSysClipArea.height += expandWidth * 2;\n      }\n    }\n  }\n  return coordSysClipArea;\n}\nvar BarView = /** @class */function (_super) {\n  __extends(BarView, _super);\n  function BarView() {\n    var _this = _super.call(this) || this;\n    _this.type = BarView.type;\n    _this._isFirstFrame = true;\n    return _this;\n  }\n  BarView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    this._model = seriesModel;\n    this._removeOnRenderedListener(api);\n    this._updateDrawMode(seriesModel);\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      // Clear previously rendered progressive elements.\n      this._progressiveEls = null;\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api, payload);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn('Only cartesian2d and polar supported for bar.');\n    }\n  };\n  BarView.prototype.incrementalPrepareRender = function (seriesModel) {\n    this._clear();\n    this._updateDrawMode(seriesModel);\n    // incremental also need to clip, otherwise might be overlow.\n    // But must not set clip in each frame, otherwise all of the children will be marked redraw.\n    this._updateLargeClip(seriesModel);\n  };\n  BarView.prototype.incrementalRender = function (params, seriesModel) {\n    // Reset\n    this._progressiveEls = [];\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  };\n  BarView.prototype.eachRendered = function (cb) {\n    traverseElements(this._progressiveEls || this.group, cb);\n  };\n  BarView.prototype._updateDrawMode = function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n    if (this._isLargeDraw == null || isLargeDraw !== this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n      this._clear();\n    }\n  };\n  BarView.prototype._renderNormal = function (seriesModel, ecModel, api, payload) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    var realtimeSortCfg = shouldRealtimeSort(seriesModel, coord);\n    if (realtimeSortCfg) {\n      this._enableRealtimeSort(realtimeSortCfg, data, api);\n    }\n    var needsClip = seriesModel.get('clip', true) || realtimeSortCfg;\n    var coordSysClipArea = getClipArea(coord, data);\n    // If there is clipPath created in large mode. Remove it.\n    group.removeClipPath();\n    // We don't use clipPath in normal mode because we needs a perfect animation\n    // And don't want the label are clipped.\n    var roundCap = seriesModel.get('roundCap', true);\n    var drawBackground = seriesModel.get('showBackground', true);\n    var backgroundModel = seriesModel.getModel('backgroundStyle');\n    var barBorderRadius = backgroundModel.get('borderRadius') || 0;\n    var bgEls = [];\n    var oldBgEls = this._backgroundEls;\n    var isInitSort = payload && payload.isInitSort;\n    var isChangeOrder = payload && payload.type === 'changeAxisOrder';\n    function createBackground(dataIndex) {\n      var bgLayout = getLayout[coord.type](data, dataIndex);\n      var bgEl = createBackgroundEl(coord, isHorizontalOrRadial, bgLayout);\n      bgEl.useStyle(backgroundModel.getItemStyle());\n      // Only cartesian2d support borderRadius.\n      if (coord.type === 'cartesian2d') {\n        bgEl.setShape('r', barBorderRadius);\n      } else {\n        bgEl.setShape('cornerRadius', barBorderRadius);\n      }\n      bgEls[dataIndex] = bgEl;\n      return bgEl;\n    }\n    ;\n    data.diff(oldData).add(function (dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      if (drawBackground) {\n        createBackground(dataIndex);\n      }\n      // If dataZoom in filteMode: 'empty', the baseValue can be set as NaN in \"axisProxy\".\n      if (!data.hasValue(dataIndex) || !isValidLayout[coord.type](layout)) {\n        return;\n      }\n      var isClipped = false;\n      if (needsClip) {\n        // Clip will modify the layout params.\n        // And return a boolean to determine if the shape are fully clipped.\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n      }\n      var el = elementCreator[coord.type](seriesModel, data, dataIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, false, roundCap);\n      if (realtimeSortCfg) {\n        /**\r\n         * Force label animation because even if the element is\r\n         * ignored because it's clipped, it may not be clipped after\r\n         * changing order. Then, if not using forceLabelAnimation,\r\n         * the label animation was never started, in which case,\r\n         * the label will be the final value and doesn't have label\r\n         * animation.\r\n         */\n        el.forceLabelAnimation = true;\n      }\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSortCfg) {\n        updateRealtimeAnimation(realtimeSortCfg, animationModel, el, layout, dataIndex, isHorizontalOrRadial, false, false);\n      } else {\n        initProps(el, {\n          shape: layout\n        }, seriesModel, dataIndex);\n      }\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      el.ignore = isClipped;\n    }).update(function (newIndex, oldIndex) {\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n      if (drawBackground) {\n        var bgEl = void 0;\n        if (oldBgEls.length === 0) {\n          bgEl = createBackground(oldIndex);\n        } else {\n          bgEl = oldBgEls[oldIndex];\n          bgEl.useStyle(backgroundModel.getItemStyle());\n          // Only cartesian2d support borderRadius.\n          if (coord.type === 'cartesian2d') {\n            bgEl.setShape('r', barBorderRadius);\n          } else {\n            bgEl.setShape('cornerRadius', barBorderRadius);\n          }\n          bgEls[newIndex] = bgEl;\n        }\n        var bgLayout = getLayout[coord.type](data, newIndex);\n        var shape = createBackgroundShape(isHorizontalOrRadial, bgLayout, coord);\n        updateProps(bgEl, {\n          shape: shape\n        }, animationModel, newIndex);\n      }\n      var el = oldData.getItemGraphicEl(oldIndex);\n      if (!data.hasValue(newIndex) || !isValidLayout[coord.type](layout)) {\n        group.remove(el);\n        return;\n      }\n      var isClipped = false;\n      if (needsClip) {\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n        if (isClipped) {\n          group.remove(el);\n        }\n      }\n      if (!el) {\n        el = elementCreator[coord.type](seriesModel, data, newIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, !!el, roundCap);\n      } else {\n        saveOldStyle(el);\n      }\n      if (realtimeSortCfg) {\n        el.forceLabelAnimation = true;\n      }\n      if (isChangeOrder) {\n        var textEl = el.getTextContent();\n        if (textEl) {\n          var labelInnerStore = labelInner(textEl);\n          if (labelInnerStore.prevValue != null) {\n            /**\r\n             * Set preValue to be value so that no new label\r\n             * should be started, otherwise, it will take a full\r\n             * `animationDurationUpdate` time to finish the\r\n             * animation, which is not expected.\r\n             */\n            labelInnerStore.prevValue = labelInnerStore.value;\n          }\n        }\n      }\n      // Not change anything if only order changed.\n      // Especially not change label.\n      else {\n        updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n      }\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSortCfg) {\n        updateRealtimeAnimation(realtimeSortCfg, animationModel, el, layout, newIndex, isHorizontalOrRadial, true, isChangeOrder);\n      } else {\n        updateProps(el, {\n          shape: layout\n        }, seriesModel, newIndex, null);\n      }\n      data.setItemGraphicEl(newIndex, el);\n      el.ignore = isClipped;\n      group.add(el);\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n      el && removeElementWithFadeOut(el, seriesModel, dataIndex);\n    }).execute();\n    var bgGroup = this._backgroundGroup || (this._backgroundGroup = new Group());\n    bgGroup.removeAll();\n    for (var i = 0; i < bgEls.length; ++i) {\n      bgGroup.add(bgEls[i]);\n    }\n    group.add(bgGroup);\n    this._backgroundEls = bgEls;\n    this._data = data;\n  };\n  BarView.prototype._renderLarge = function (seriesModel, ecModel, api) {\n    this._clear();\n    createLarge(seriesModel, this.group);\n    this._updateLargeClip(seriesModel);\n  };\n  BarView.prototype._incrementalRenderLarge = function (params, seriesModel) {\n    this._removeBackground();\n    createLarge(seriesModel, this.group, this._progressiveEls, true);\n  };\n  BarView.prototype._updateLargeClip = function (seriesModel) {\n    // Use clipPath in large mode.\n    var clipPath = seriesModel.get('clip', true) && createClipPath(seriesModel.coordinateSystem, false, seriesModel);\n    var group = this.group;\n    if (clipPath) {\n      group.setClipPath(clipPath);\n    } else {\n      group.removeClipPath();\n    }\n  };\n  BarView.prototype._enableRealtimeSort = function (realtimeSortCfg, data, api) {\n    var _this = this;\n    // If no data in the first frame, wait for data to initSort\n    if (!data.count()) {\n      return;\n    }\n    var baseAxis = realtimeSortCfg.baseAxis;\n    if (this._isFirstFrame) {\n      this._dispatchInitSort(data, realtimeSortCfg, api);\n      this._isFirstFrame = false;\n    } else {\n      var orderMapping_1 = function (idx) {\n        var el = data.getItemGraphicEl(idx);\n        var shape = el && el.shape;\n        return shape &&\n        // The result should be consistent with the initial sort by data value.\n        // Do not support the case that both positive and negative exist.\n        Math.abs(baseAxis.isHorizontal() ? shape.height : shape.width)\n        // If data is NaN, shape.xxx may be NaN, so use || 0 here in case\n        || 0;\n      };\n      this._onRendered = function () {\n        _this._updateSortWithinSameData(data, orderMapping_1, baseAxis, api);\n      };\n      api.getZr().on('rendered', this._onRendered);\n    }\n  };\n  BarView.prototype._dataSort = function (data, baseAxis, orderMapping) {\n    var info = [];\n    data.each(data.mapDimension(baseAxis.dim), function (ordinalNumber, dataIdx) {\n      var mappedValue = orderMapping(dataIdx);\n      mappedValue = mappedValue == null ? NaN : mappedValue;\n      info.push({\n        dataIndex: dataIdx,\n        mappedValue: mappedValue,\n        ordinalNumber: ordinalNumber\n      });\n    });\n    info.sort(function (a, b) {\n      // If NaN, it will be treated as min val.\n      return b.mappedValue - a.mappedValue;\n    });\n    return {\n      ordinalNumbers: map(info, function (item) {\n        return item.ordinalNumber;\n      })\n    };\n  };\n  BarView.prototype._isOrderChangedWithinSameData = function (data, orderMapping, baseAxis) {\n    var scale = baseAxis.scale;\n    var ordinalDataDim = data.mapDimension(baseAxis.dim);\n    var lastValue = Number.MAX_VALUE;\n    for (var tickNum = 0, len = scale.getOrdinalMeta().categories.length; tickNum < len; ++tickNum) {\n      var rawIdx = data.rawIndexOf(ordinalDataDim, scale.getRawOrdinalNumber(tickNum));\n      var value = rawIdx < 0\n      // If some tick have no bar, the tick will be treated as min.\n      ? Number.MIN_VALUE\n      // PENDING: if dataZoom on baseAxis exits, is it a performance issue?\n      : orderMapping(data.indexOfRawIndex(rawIdx));\n      if (value > lastValue) {\n        return true;\n      }\n      lastValue = value;\n    }\n    return false;\n  };\n  /*\r\n   * Consider the case when A and B changed order, whose representing\r\n   * bars are both out of sight, we don't wish to trigger reorder action\r\n   * as long as the order in the view doesn't change.\r\n   */\n  BarView.prototype._isOrderDifferentInView = function (orderInfo, baseAxis) {\n    var scale = baseAxis.scale;\n    var extent = scale.getExtent();\n    var tickNum = Math.max(0, extent[0]);\n    var tickMax = Math.min(extent[1], scale.getOrdinalMeta().categories.length - 1);\n    for (; tickNum <= tickMax; ++tickNum) {\n      if (orderInfo.ordinalNumbers[tickNum] !== scale.getRawOrdinalNumber(tickNum)) {\n        return true;\n      }\n    }\n  };\n  BarView.prototype._updateSortWithinSameData = function (data, orderMapping, baseAxis, api) {\n    if (!this._isOrderChangedWithinSameData(data, orderMapping, baseAxis)) {\n      return;\n    }\n    var sortInfo = this._dataSort(data, baseAxis, orderMapping);\n    if (this._isOrderDifferentInView(sortInfo, baseAxis)) {\n      this._removeOnRenderedListener(api);\n      api.dispatchAction({\n        type: 'changeAxisOrder',\n        componentType: baseAxis.dim + 'Axis',\n        axisId: baseAxis.index,\n        sortInfo: sortInfo\n      });\n    }\n  };\n  BarView.prototype._dispatchInitSort = function (data, realtimeSortCfg, api) {\n    var baseAxis = realtimeSortCfg.baseAxis;\n    var sortResult = this._dataSort(data, baseAxis, function (dataIdx) {\n      return data.get(data.mapDimension(realtimeSortCfg.otherAxis.dim), dataIdx);\n    });\n    api.dispatchAction({\n      type: 'changeAxisOrder',\n      componentType: baseAxis.dim + 'Axis',\n      isInitSort: true,\n      axisId: baseAxis.index,\n      sortInfo: sortResult\n    });\n  };\n  BarView.prototype.remove = function (ecModel, api) {\n    this._clear(this._model);\n    this._removeOnRenderedListener(api);\n  };\n  BarView.prototype.dispose = function (ecModel, api) {\n    this._removeOnRenderedListener(api);\n  };\n  BarView.prototype._removeOnRenderedListener = function (api) {\n    if (this._onRendered) {\n      api.getZr().off('rendered', this._onRendered);\n      this._onRendered = null;\n    }\n  };\n  BarView.prototype._clear = function (model) {\n    var group = this.group;\n    var data = this._data;\n    if (model && model.isAnimationEnabled() && data && !this._isLargeDraw) {\n      this._removeBackground();\n      this._backgroundEls = [];\n      data.eachItemGraphicEl(function (el) {\n        removeElementWithFadeOut(el, model, getECData(el).dataIndex);\n      });\n    } else {\n      group.removeAll();\n    }\n    this._data = null;\n    this._isFirstFrame = true;\n  };\n  BarView.prototype._removeBackground = function () {\n    this.group.remove(this._backgroundGroup);\n    this._backgroundGroup = null;\n  };\n  BarView.type = 'bar';\n  return BarView;\n}(ChartView);\nvar clip = {\n  cartesian2d: function (coordSysBoundingRect, layout) {\n    var signWidth = layout.width < 0 ? -1 : 1;\n    var signHeight = layout.height < 0 ? -1 : 1;\n    // Needs positive width and height\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n    var coordSysX2 = coordSysBoundingRect.x + coordSysBoundingRect.width;\n    var coordSysY2 = coordSysBoundingRect.y + coordSysBoundingRect.height;\n    var x = mathMax(layout.x, coordSysBoundingRect.x);\n    var x2 = mathMin(layout.x + layout.width, coordSysX2);\n    var y = mathMax(layout.y, coordSysBoundingRect.y);\n    var y2 = mathMin(layout.y + layout.height, coordSysY2);\n    var xClipped = x2 < x;\n    var yClipped = y2 < y;\n    // When xClipped or yClipped, the element will be marked as `ignore`.\n    // But we should also place the element at the edge of the coord sys bounding rect.\n    // Because if data changed and the bar shows again, its transition animation\n    // will begin at this place.\n    layout.x = xClipped && x > coordSysX2 ? x2 : x;\n    layout.y = yClipped && y > coordSysY2 ? y2 : y;\n    layout.width = xClipped ? 0 : x2 - x;\n    layout.height = yClipped ? 0 : y2 - y;\n    // Reverse back\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n    return xClipped || yClipped;\n  },\n  polar: function (coordSysClipArea, layout) {\n    var signR = layout.r0 <= layout.r ? 1 : -1;\n    // Make sure r is larger than r0\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n    var r = mathMin(layout.r, coordSysClipArea.r);\n    var r0 = mathMax(layout.r0, coordSysClipArea.r0);\n    layout.r = r;\n    layout.r0 = r0;\n    var clipped = r - r0 < 0;\n    // Reverse back\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n    return clipped;\n  }\n};\nvar elementCreator = {\n  cartesian2d: function (seriesModel, data, newIndex, layout, isHorizontal, animationModel, axisModel, isUpdate, roundCap) {\n    var rect = new Rect({\n      shape: extend({}, layout),\n      z2: 1\n    });\n    rect.__dataIndex = newIndex;\n    rect.name = 'item';\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      rectShape[animateProperty] = 0;\n    }\n    return rect;\n  },\n  polar: function (seriesModel, data, newIndex, layout, isRadial, animationModel, axisModel, isUpdate, roundCap) {\n    var ShapeClass = !isRadial && roundCap ? Sausage : Sector;\n    var sector = new ShapeClass({\n      shape: layout,\n      z2: 1\n    });\n    sector.name = 'item';\n    var positionMap = createPolarPositionMapping(isRadial);\n    sector.calculateTextPosition = createSectorCalculateTextPosition(positionMap, {\n      isRoundCap: ShapeClass === Sausage\n    });\n    // Animation\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? layout.r0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      (isUpdate ? updateProps : initProps)(sector, {\n        shape: animateTarget\n        // __value: typeof dataValue === 'string' ? parseInt(dataValue, 10) : dataValue\n      }, animationModel);\n    }\n    return sector;\n  }\n};\nfunction shouldRealtimeSort(seriesModel, coordSys) {\n  var realtimeSortOption = seriesModel.get('realtimeSort', true);\n  var baseAxis = coordSys.getBaseAxis();\n  if (process.env.NODE_ENV !== 'production') {\n    if (realtimeSortOption) {\n      if (baseAxis.type !== 'category') {\n        warn('`realtimeSort` will not work because this bar series is not based on a category axis.');\n      }\n      if (coordSys.type !== 'cartesian2d') {\n        warn('`realtimeSort` will not work because this bar series is not on cartesian2d.');\n      }\n    }\n  }\n  if (realtimeSortOption && baseAxis.type === 'category' && coordSys.type === 'cartesian2d') {\n    return {\n      baseAxis: baseAxis,\n      otherAxis: coordSys.getOtherAxis(baseAxis)\n    };\n  }\n}\nfunction updateRealtimeAnimation(realtimeSortCfg, seriesAnimationModel, el, layout, newIndex, isHorizontal, isUpdate, isChangeOrder) {\n  var seriesTarget;\n  var axisTarget;\n  if (isHorizontal) {\n    axisTarget = {\n      x: layout.x,\n      width: layout.width\n    };\n    seriesTarget = {\n      y: layout.y,\n      height: layout.height\n    };\n  } else {\n    axisTarget = {\n      y: layout.y,\n      height: layout.height\n    };\n    seriesTarget = {\n      x: layout.x,\n      width: layout.width\n    };\n  }\n  if (!isChangeOrder) {\n    // Keep the original growth animation if only axis order changed.\n    // Not start a new animation.\n    (isUpdate ? updateProps : initProps)(el, {\n      shape: seriesTarget\n    }, seriesAnimationModel, newIndex, null);\n  }\n  var axisAnimationModel = seriesAnimationModel ? realtimeSortCfg.baseAxis.model : null;\n  (isUpdate ? updateProps : initProps)(el, {\n    shape: axisTarget\n  }, axisAnimationModel, newIndex);\n}\nfunction checkPropertiesNotValid(obj, props) {\n  for (var i = 0; i < props.length; i++) {\n    if (!isFinite(obj[props[i]])) {\n      return true;\n    }\n  }\n  return false;\n}\nvar rectPropties = ['x', 'y', 'width', 'height'];\nvar polarPropties = ['cx', 'cy', 'r', 'startAngle', 'endAngle'];\nvar isValidLayout = {\n  cartesian2d: function (layout) {\n    return !checkPropertiesNotValid(layout, rectPropties);\n  },\n  polar: function (layout) {\n    return !checkPropertiesNotValid(layout, polarPropties);\n  }\n};\nvar getLayout = {\n  // itemModel is only used to get borderWidth, which is not needed\n  // when calculating bar background layout.\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = itemModel ? getLineWidth(itemModel, layout) : 0;\n    // fix layout with lineWidth\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle,\n      clockwise: layout.clockwise\n    };\n  }\n};\nfunction isZeroOnPolar(layout) {\n  return layout.startAngle != null && layout.endAngle != null && layout.startAngle === layout.endAngle;\n}\nfunction createPolarPositionMapping(isRadial) {\n  return function (isRadial) {\n    var arcOrAngle = isRadial ? 'Arc' : 'Angle';\n    return function (position) {\n      switch (position) {\n        case 'start':\n        case 'insideStart':\n        case 'end':\n        case 'insideEnd':\n          return position + arcOrAngle;\n        default:\n          return position;\n      }\n    };\n  }(isRadial);\n}\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, isPolar) {\n  var style = data.getItemVisual(dataIndex, 'style');\n  if (!isPolar) {\n    var borderRadius = itemModel.get(['itemStyle', 'borderRadius']) || 0;\n    el.setShape('r', borderRadius);\n  } else if (!seriesModel.get('roundCap')) {\n    var sectorShape = el.shape;\n    var cornerRadius = getSectorCornerRadius(itemModel.getModel('itemStyle'), sectorShape, true);\n    extend(sectorShape, cornerRadius);\n    el.setShape(sectorShape);\n  }\n  el.useStyle(style);\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isPolar ? isHorizontalOrRadial ? layout.r >= layout.r0 ? 'endArc' : 'startArc' : layout.endAngle >= layout.startAngle ? 'endAngle' : 'startAngle' : isHorizontalOrRadial ? layout.height >= 0 ? 'bottom' : 'top' : layout.width >= 0 ? 'right' : 'left';\n  var labelStatesModels = getLabelStatesModels(itemModel);\n  setLabelStyle(el, labelStatesModels, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    inheritColor: style.fill,\n    defaultOpacity: style.opacity,\n    defaultOutsidePosition: labelPositionOutside\n  });\n  var label = el.getTextContent();\n  if (isPolar && label) {\n    var position = itemModel.get(['label', 'position']);\n    el.textConfig.inside = position === 'middle' ? true : null;\n    setSectorTextRotation(el, position === 'outside' ? labelPositionOutside : position, createPolarPositionMapping(isHorizontalOrRadial), itemModel.get(['label', 'rotate']));\n  }\n  setLabelValueAnimation(label, labelStatesModels, seriesModel.getRawValue(dataIndex), function (value) {\n    return getDefaultInterpolatedLabel(data, value);\n  });\n  var emphasisModel = itemModel.getModel(['emphasis']);\n  toggleHoverEmphasis(el, emphasisModel.get('focus'), emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n  setStatesStylesFromModel(el, itemModel);\n  if (isZeroOnPolar(layout)) {\n    el.style.fill = 'none';\n    el.style.stroke = 'none';\n    each(el.states, function (state) {\n      if (state.style) {\n        state.style.fill = state.style.stroke = 'none';\n      }\n    });\n  }\n}\n// In case width or height are too small.\nfunction getLineWidth(itemModel, rawLayout) {\n  // Has no border.\n  var borderColor = itemModel.get(['itemStyle', 'borderColor']);\n  if (!borderColor || borderColor === 'none') {\n    return 0;\n  }\n  var lineWidth = itemModel.get(['itemStyle', 'borderWidth']) || 0;\n  // width or height may be NaN for empty data\n  var width = isNaN(rawLayout.width) ? Number.MAX_VALUE : Math.abs(rawLayout.width);\n  var height = isNaN(rawLayout.height) ? Number.MAX_VALUE : Math.abs(rawLayout.height);\n  return Math.min(lineWidth, width, height);\n}\nvar LagePathShape = /** @class */function () {\n  function LagePathShape() {}\n  return LagePathShape;\n}();\nvar LargePath = /** @class */function (_super) {\n  __extends(LargePath, _super);\n  function LargePath(opts) {\n    var _this = _super.call(this, opts) || this;\n    _this.type = 'largeBar';\n    return _this;\n  }\n  LargePath.prototype.getDefaultShape = function () {\n    return new LagePathShape();\n  };\n  LargePath.prototype.buildPath = function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var baseDimIdx = this.baseDimIdx;\n    var valueDimIdx = 1 - this.baseDimIdx;\n    var startPoint = [];\n    var size = [];\n    var barWidth = this.barWidth;\n    for (var i = 0; i < points.length; i += 3) {\n      size[baseDimIdx] = barWidth;\n      size[valueDimIdx] = points[i + 2];\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\n      startPoint[valueDimIdx] = points[i + valueDimIdx];\n      ctx.rect(startPoint[0], startPoint[1], size[0], size[1]);\n    }\n  };\n  return LargePath;\n}(Path);\nfunction createLarge(seriesModel, group, progressiveEls, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  var largeDataIndices = data.getLayout('largeDataIndices');\n  var barWidth = data.getLayout('size');\n  var backgroundModel = seriesModel.getModel('backgroundStyle');\n  var bgPoints = data.getLayout('largeBackgroundPoints');\n  if (bgPoints) {\n    var bgEl = new LargePath({\n      shape: {\n        points: bgPoints\n      },\n      incremental: !!incremental,\n      silent: true,\n      z2: 0\n    });\n    bgEl.baseDimIdx = baseDimIdx;\n    bgEl.largeDataIndices = largeDataIndices;\n    bgEl.barWidth = barWidth;\n    bgEl.useStyle(backgroundModel.getItemStyle());\n    group.add(bgEl);\n    progressiveEls && progressiveEls.push(bgEl);\n  }\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental,\n    ignoreCoarsePointer: true,\n    z2: 1\n  });\n  el.baseDimIdx = baseDimIdx;\n  el.largeDataIndices = largeDataIndices;\n  el.barWidth = barWidth;\n  group.add(el);\n  el.useStyle(data.getVisual('style'));\n  // Stroke is rendered first to avoid overlapping with fill\n  el.style.stroke = null;\n  // Enable tooltip and user mouse/touch event handlers.\n  getECData(el).seriesIndex = seriesModel.seriesIndex;\n  if (!seriesModel.get('silent')) {\n    el.on('mousedown', largePathUpdateDataIndex);\n    el.on('mousemove', largePathUpdateDataIndex);\n  }\n  progressiveEls && progressiveEls.push(el);\n}\n// Use throttle to avoid frequently traverse to find dataIndex.\nvar largePathUpdateDataIndex = throttle(function (event) {\n  var largePath = this;\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\n  getECData(largePath).dataIndex = dataIndex >= 0 ? dataIndex : null;\n}, 30, false);\nfunction largePathFindDataIndex(largePath, x, y) {\n  var baseDimIdx = largePath.baseDimIdx;\n  var valueDimIdx = 1 - baseDimIdx;\n  var points = largePath.shape.points;\n  var largeDataIndices = largePath.largeDataIndices;\n  var startPoint = [];\n  var size = [];\n  var barWidth = largePath.barWidth;\n  for (var i = 0, len = points.length / 3; i < len; i++) {\n    var ii = i * 3;\n    size[baseDimIdx] = barWidth;\n    size[valueDimIdx] = points[ii + 2];\n    startPoint[baseDimIdx] = points[ii + baseDimIdx];\n    startPoint[valueDimIdx] = points[ii + valueDimIdx];\n    if (size[valueDimIdx] < 0) {\n      startPoint[valueDimIdx] += size[valueDimIdx];\n      size[valueDimIdx] = -size[valueDimIdx];\n    }\n    if (x >= startPoint[0] && x <= startPoint[0] + size[0] && y >= startPoint[1] && y <= startPoint[1] + size[1]) {\n      return largeDataIndices[i];\n    }\n  }\n  return -1;\n}\nfunction createBackgroundShape(isHorizontalOrRadial, layout, coord) {\n  if (isCoordinateSystemType(coord, 'cartesian2d')) {\n    var rectShape = layout;\n    var coordLayout = coord.getArea();\n    return {\n      x: isHorizontalOrRadial ? rectShape.x : coordLayout.x,\n      y: isHorizontalOrRadial ? coordLayout.y : rectShape.y,\n      width: isHorizontalOrRadial ? rectShape.width : coordLayout.width,\n      height: isHorizontalOrRadial ? coordLayout.height : rectShape.height\n    };\n  } else {\n    var coordLayout = coord.getArea();\n    var sectorShape = layout;\n    return {\n      cx: coordLayout.cx,\n      cy: coordLayout.cy,\n      r0: isHorizontalOrRadial ? coordLayout.r0 : sectorShape.r0,\n      r: isHorizontalOrRadial ? coordLayout.r : sectorShape.r,\n      startAngle: isHorizontalOrRadial ? sectorShape.startAngle : 0,\n      endAngle: isHorizontalOrRadial ? sectorShape.endAngle : Math.PI * 2\n    };\n  }\n}\nfunction createBackgroundEl(coord, isHorizontalOrRadial, layout) {\n  var ElementClz = coord.type === 'polar' ? Sector : Rect;\n  return new ElementClz({\n    shape: createBackgroundShape(isHorizontalOrRadial, layout, coord),\n    silent: true,\n    z2: 0\n  });\n}\nexport default BarView;", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport { layout, createProgressiveLayout } from '../../layout/barGrid.js';\nimport dataSample from '../../processor/dataSample.js';\nimport BarSeries from './BarSeries.js';\nimport BarView from './BarView.js';\nexport function install(registers) {\n  registers.registerChartView(BarView);\n  registers.registerSeriesModel(BarSeries);\n  registers.registerLayout(registers.PRIORITY.VISUAL.LAYOUT, zrUtil.curry(layout, 'bar'));\n  // Do layout after other overall layout, which can prepare some information.\n  registers.registerLayout(registers.PRIORITY.VISUAL.PROGRESSIVE_LAYOUT, createProgressiveLayout('bar'));\n  // Down sample after filter\n  registers.registerProcessor(registers.PRIORITY.PROCESSOR.STATISTIC, dataSample('bar'));\n  /**\r\n   * @payload\r\n   * @property {string} [componentType=series]\r\n   * @property {number} [dx]\r\n   * @property {number} [dy]\r\n   * @property {number} [zoom]\r\n   * @property {number} [originX]\r\n   * @property {number} [originY]\r\n   */\n  registers.registerAction({\n    type: 'changeAxisOrder',\n    event: 'changeAxisOrder',\n    update: 'update'\n  }, function (payload, ecModel) {\n    var componentType = payload.componentType || 'series';\n    ecModel.eachComponent({\n      mainType: componentType,\n      query: payload\n    }, function (componentModel) {\n      if (payload.sortInfo) {\n        componentModel.axis.setCategorySortInfo(payload.sortInfo);\n      }\n    });\n  });\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA,IAAI,qBAAkC,SAAU,QAAQ;AACtD,YAAUA,qBAAoB,MAAM;AACpC,WAASA,sBAAqB;AAC5B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,SAAS,KAAK;AAChE,UAAM,OAAOA,oBAAmB;AAChC,WAAO;AAAA,EACT;AACA,EAAAA,oBAAmB,UAAU,iBAAiB,SAAU,QAAQ,SAAS;AACvE,WAAO,yBAAiB,MAAM,MAAM;AAAA,MAClC,oBAAoB;AAAA,IACtB,CAAC;AAAA,EACH;AACA,EAAAA,oBAAmB,UAAU,oBAAoB,SAAU,OAAO,MAAM,gBAAgB;AACtF,QAAI,WAAW,KAAK;AACpB,QAAI,YAAY,SAAS,WAAW;AAElC,UAAI,cAAc,SAAS,UAAU,KAAK;AAC1C,UAAI,OAAO,SAAS,YAAY,WAAW;AAC3C,UAAI,gBAAgB;AAClB,aAAK,SAAS,QAAQ,GAAG,SAAU,MAAM,KAAK;AAE5C,cAAI,KAAK,SAAS,cAAc,QAAQ,MAAM;AAC5C,gBAAI,aAAa,KAAK,eAAe;AACrC,gBAAI,sBAAsB,KAAK,aAAa,EAAE,IAAI,gBAAgB;AAClE,gBAAI,eAAe,YAAY;AAE/B,gBAAI,QAAQ,KAAK,SAAS,QAAQ,KAAK,SAAS;AAChD,gBAAI,SAAS,CAAC,qBAAqB;AACjC,8BAAgB;AAAA,YAClB;AAIA,gBAAI,WAAW,SAAS,GAAG;AACzB;AAAA,YACF,WAAW,WAAW,WAAW,GAAG;AAIlC,mBAAK,OAAO,KAAK,cAAc,KAAK,UAAU,EAAE,QAAQ,IAAI,EAAE;AAC9D;AAAA,YACF;AACA,gBAAI,YAAY;AAChB,gBAAI,QAAQ;AACZ,gBAAI,gBAAgB;AACpB,qBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,kBAAI,YAAY,WAAW,GAAG;AAG9B,kBAAI,YAAY,MAAM,WAAW,SAAS,IAAI,WAAW,IAAI,GAAG,YAAY,gBAAgB,WAAW,GAAG;AAC1G,kBAAI,cAAc,cAAc;AAC9B,wBAAQ;AACR;AAAA,cACF,WAAW,YAAY,cAAc;AACnC,4BAAY;AAAA,cACd,WAAW,aAAa,QAAQ,YAAY,cAAc;AACxD,yBAAS,YAAY,aAAa;AAClC;AAAA,cACF;AACA,kBAAI,MAAM,GAAG;AAGX,gCAAgB,YAAY,WAAW,GAAG;AAAA,cAC5C;AAAA,YACF;AACA,gBAAI,SAAS,MAAM;AACjB,kBAAI,CAAC,WAAW;AAGd,wBAAQ,WAAW,GAAG;AAAA,cACxB,WAAW,WAAW;AAGpB,wBAAQ,WAAW,WAAW,SAAS,GAAG;AAAA,cAC5C;AAAA,YACF;AACA,iBAAK,OAAO,KAAK,cAAc,KAAK;AAAA,UACtC;AAAA,QACF,CAAC;AAAA,MACH,OAAO;AACL,YAAI,OAAO,KAAK,QAAQ;AACxB,YAAI,SAAS,KAAK,UAAU,QAAQ;AACpC,YAAI,OAAO,KAAK,UAAU,MAAM;AAChC,YAAI,cAAc,SAAS,YAAY,EAAE,aAAa,IAAI,IAAI;AAC9D,aAAK,gBAAgB,SAAS,OAAO;AAAA,MACvC;AACA,aAAO;AAAA,IACT;AACA,WAAO,CAAC,KAAK,GAAG;AAAA,EAClB;AACA,EAAAA,oBAAmB,OAAO;AAC1B,EAAAA,oBAAmB,gBAAgB;AAAA,IAEjC,GAAG;AAAA,IACH,kBAAkB;AAAA,IAClB,iBAAiB;AAAA,IAKjB,cAAc;AAAA,IACd,aAAa;AAAA,IAEb,OAAO;AAAA,IACP,gBAAgB;AAAA,IAChB,aAAa;AAAA,IACb,sBAAsB;AAAA,EACxB;AACA,SAAOA;AACT,EAAE,cAAW;AACb,eAAY,cAAc,kBAAkB;AAC5C,IAAO,wBAAQ;;;AC/Gf,IAAI,iBAA8B,SAAU,QAAQ;AAClD,YAAUC,iBAAgB,MAAM;AAChC,WAASA,kBAAiB;AACxB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,SAAS,KAAK;AAChE,UAAM,OAAOA,gBAAe;AAC5B,WAAO;AAAA,EACT;AACA,EAAAA,gBAAe,UAAU,iBAAiB,WAAY;AACpD,WAAO,yBAAiB,MAAM,MAAM;AAAA,MAClC,oBAAoB;AAAA,MACpB,uBAAuB,CAAC,CAAC,KAAK,IAAI,gBAAgB,IAAI,KAAK;AAAA,IAC7D,CAAC;AAAA,EACH;AAIA,EAAAA,gBAAe,UAAU,iBAAiB,WAAY;AAEpD,WAAO,KAAK,IAAI,OAAO,IAAI,KAAK,IAAI,aAAa,IAAI;AAAA,EACvD;AAIA,EAAAA,gBAAe,UAAU,0BAA0B,WAAY;AAE7D,QAAI,uBAAuB,KAAK,IAAI,sBAAsB;AAC1D,QAAI,iBAAiB,KAAK,IAAI,gBAAgB;AAC9C,QAAI,iBAAiB,sBAAsB;AACzC,6BAAuB;AAAA,IACzB;AACA,WAAO;AAAA,EACT;AACA,EAAAA,gBAAe,UAAU,gBAAgB,SAAU,WAAW,MAAM,WAAW;AAC7E,WAAO,UAAU,KAAK,KAAK,cAAc,SAAS,CAAC;AAAA,EACrD;AACA,EAAAA,gBAAe,OAAO;AACtB,EAAAA,gBAAe,eAAe,CAAC,QAAQ,OAAO;AAC9C,EAAAA,gBAAe,gBAAgB,qBAAqB,sBAAmB,eAAe;AAAA,IAGpF,MAAM;AAAA,IACN,UAAU;AAAA,IACV,gBAAgB;AAAA,IAChB,iBAAiB;AAAA,MACf,OAAO;AAAA,MACP,aAAa;AAAA,MACb,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,YAAY;AAAA,MACZ,aAAa;AAAA,MACb,eAAe;AAAA,MACf,eAAe;AAAA,MACf,SAAS;AAAA,IACX;AAAA,IACA,QAAQ;AAAA,MACN,WAAW;AAAA,QACT,aAAa;AAAA,MACf;AAAA,IACF;AAAA,IACA,cAAc;AAAA,EAChB,CAAC;AACD,SAAOA;AACT,EAAE,qBAAkB;AACpB,IAAO,oBAAQ;;;AC/Df,IAAI,eAA4B,WAAY;AAC1C,WAASC,gBAAe;AACtB,SAAK,KAAK;AACV,SAAK,KAAK;AACV,SAAK,KAAK;AACV,SAAK,IAAI;AACT,SAAK,aAAa;AAClB,SAAK,WAAW,KAAK,KAAK;AAC1B,SAAK,YAAY;AAAA,EACnB;AACA,SAAOA;AACT,EAAE;AACF,IAAI,cAA2B,SAAU,QAAQ;AAC/C,YAAUC,cAAa,MAAM;AAC7B,WAASA,aAAY,MAAM;AACzB,QAAI,QAAQ,OAAO,KAAK,MAAM,IAAI,KAAK;AACvC,UAAM,OAAO;AACb,WAAO;AAAA,EACT;AACA,EAAAA,aAAY,UAAU,kBAAkB,WAAY;AAClD,WAAO,IAAI,aAAa;AAAA,EAC1B;AACA,EAAAA,aAAY,UAAU,YAAY,SAAU,KAAK,OAAO;AACtD,QAAI,KAAK,MAAM;AACf,QAAI,KAAK,MAAM;AACf,QAAI,KAAK,KAAK,IAAI,MAAM,MAAM,GAAG,CAAC;AAClC,QAAI,IAAI,KAAK,IAAI,MAAM,GAAG,CAAC;AAC3B,QAAI,MAAM,IAAI,MAAM;AACpB,QAAI,UAAU,KAAK;AACnB,QAAI,aAAa,MAAM;AACvB,QAAI,WAAW,MAAM;AACrB,QAAI,YAAY,MAAM;AACtB,QAAI,MAAM,KAAK,KAAK;AACpB,QAAI,iBAAiB,YAAY,WAAW,aAAa,MAAM,aAAa,WAAW;AACvF,QAAI,CAAC,gBAAgB;AAEnB,mBAAa,YAAY,YAAY,MAAM,CAAC;AAAA,IAC9C;AACA,QAAI,aAAa,KAAK,IAAI,UAAU;AACpC,QAAI,aAAa,KAAK,IAAI,UAAU;AACpC,QAAI,WAAW,KAAK,IAAI,QAAQ;AAChC,QAAI,WAAW,KAAK,IAAI,QAAQ;AAChC,QAAI,gBAAgB;AAClB,UAAI,OAAO,aAAa,KAAK,IAAI,aAAa,KAAK,EAAE;AACrD,UAAI,IAAI,aAAa,UAAU,IAAI,aAAa,UAAU,IAAI,IAAI,CAAC,KAAK,KAAK,YAAY,YAAY,CAAC,SAAS;AAAA,IACjH,OAAO;AACL,UAAI,OAAO,aAAa,IAAI,IAAI,aAAa,IAAI,EAAE;AAAA,IACrD;AACA,QAAI,IAAI,IAAI,IAAI,GAAG,YAAY,UAAU,CAAC,SAAS;AACnD,QAAI,IAAI,WAAW,UAAU,IAAI,WAAW,UAAU,IAAI,IAAI,WAAW,KAAK,KAAK,GAAG,WAAW,KAAK,IAAI,CAAC,SAAS;AACpH,QAAI,OAAO,GAAG;AACZ,UAAI,IAAI,IAAI,IAAI,IAAI,UAAU,YAAY,SAAS;AAAA,IACrD;AAAA,EAEF;AACA,SAAOA;AACT,EAAE,YAAI;AACN,IAAO,kBAAQ;;;AC5DR,SAAS,kCAAkC,iBAAiB,MAAM;AACvE,SAAO,QAAQ,CAAC;AAChB,MAAI,aAAa,KAAK;AACtB,SAAO,SAAU,KAAKC,OAAM,cAAc;AACxC,QAAI,eAAeA,MAAK;AACxB,QAAI,CAAC,gBAAgB,wBAAwB,OAAO;AAClD,aAAO,sBAAsB,KAAKA,OAAM,YAAY;AAAA,IACtD;AACA,QAAI,uBAAuB,gBAAgB,YAAY;AACvD,QAAI,WAAWA,MAAK,YAAY,OAAOA,MAAK,WAAW;AACvD,QAAI,SAAS,KAAK;AAClB,QAAI,KAAK,OAAO;AAChB,QAAI,KAAK,OAAO;AAChB,QAAI,IAAI,OAAO;AACf,QAAI,KAAK,OAAO;AAChB,QAAI,WAAW,IAAI,MAAM;AACzB,QAAI,aAAa,OAAO;AACxB,QAAI,WAAW,OAAO;AACtB,QAAI,eAAe,aAAa,YAAY;AAC5C,QAAI,YAAY,aAAa,KAAK,IAAI,IAAI,EAAE,IAAI,IAAI;AACpD,QAAI,UAAU,KAAK;AACnB,QAAI,UAAU,KAAK;AAEnB,QAAI,IAAI,KAAK,IAAI,QAAQ,UAAU;AACnC,QAAI,IAAI,KAAK,IAAI,QAAQ,UAAU;AACnC,QAAI,YAAY;AAChB,QAAI,oBAAoB;AACxB,YAAQ,sBAAsB;AAAA,MAC5B,KAAK;AACH,YAAI,MAAM,KAAK,YAAY,QAAQ,WAAW;AAC9C,YAAI,MAAM,KAAK,YAAY,QAAQ,WAAW;AAC9C,oBAAY;AACZ,4BAAoB;AACpB;AAAA,MACF,KAAK;AACH,YAAI,MAAM,KAAK,YAAY,QAAQ,WAAW;AAC9C,YAAI,MAAM,KAAK,YAAY,QAAQ,WAAW;AAC9C,oBAAY;AACZ,4BAAoB;AACpB;AAAA,MACF,KAAK;AACH,YAAI,KAAK,UAAU,QAAQ,UAAU,IAAI,qBAAqB,YAAY,WAAW,WAAW,KAAK;AACrG,YAAI,KAAK,UAAU,QAAQ,UAAU,IAAI,qBAAqB,YAAY,WAAW,WAAW,KAAK;AACrG,oBAAY;AACZ,4BAAoB;AACpB;AAAA,MACF,KAAK;AACH,YAAI,KAAK,UAAU,QAAQ,UAAU,IAAI,qBAAqB,YAAY,CAAC,WAAW,WAAW,KAAK;AACtG,YAAI,KAAK,UAAU,QAAQ,UAAU,IAAI,qBAAqB,YAAY,CAAC,WAAW,WAAW,KAAK;AACtG,oBAAY;AACZ,4BAAoB;AACpB;AAAA,MACF,KAAK;AACH,YAAI,KAAK,UAAU,QAAQ,WAAW;AACtC,YAAI,KAAK,UAAU,QAAQ,WAAW;AACtC,oBAAY;AACZ,4BAAoB;AACpB;AAAA,MACF,KAAK;AACH,YAAI,MAAM,IAAI,YAAY,QAAQ,WAAW;AAC7C,YAAI,MAAM,IAAI,YAAY,QAAQ,WAAW;AAC7C,oBAAY;AACZ,4BAAoB;AACpB;AAAA,MACF,KAAK;AACH,YAAI,MAAM,IAAI,YAAY,QAAQ,WAAW;AAC7C,YAAI,MAAM,IAAI,YAAY,QAAQ,WAAW;AAC7C,oBAAY;AACZ,4BAAoB;AACpB;AAAA,MACF,KAAK;AACH,YAAI,KAAK,UAAU,QAAQ,QAAQ,IAAI,qBAAqB,UAAU,WAAW,WAAW,IAAI;AAChG,YAAI,KAAK,UAAU,QAAQ,QAAQ,IAAI,qBAAqB,UAAU,WAAW,WAAW,IAAI;AAChG,oBAAY;AACZ,4BAAoB;AACpB;AAAA,MACF,KAAK;AACH,YAAI,KAAK,UAAU,QAAQ,QAAQ,IAAI,qBAAqB,UAAU,CAAC,WAAW,WAAW,IAAI;AACjG,YAAI,KAAK,UAAU,QAAQ,QAAQ,IAAI,qBAAqB,UAAU,CAAC,WAAW,WAAW,IAAI;AACjG,oBAAY;AACZ,4BAAoB;AACpB;AAAA,MACF;AACE,eAAO,sBAAsB,KAAKA,OAAM,YAAY;AAAA,IACxD;AACA,UAAM,OAAO,CAAC;AACd,QAAI,IAAI;AACR,QAAI,IAAI;AACR,QAAI,QAAQ;AACZ,QAAI,gBAAgB;AACpB,WAAO;AAAA,EACT;AACF;AACO,SAAS,sBAAsB,QAAQ,cAAc,iBAAiB,YAAY;AACvF,MAAI,SAAS,UAAU,GAAG;AAExB,WAAO,cAAc;AAAA,MACnB,UAAU;AAAA,IACZ,CAAC;AACD;AAAA,EACF,WAAW,QAAQ,YAAY,GAAG;AAEhC,WAAO,cAAc;AAAA,MACnB,UAAU;AAAA,IACZ,CAAC;AACD;AAAA,EACF;AACA,MAAI,QAAQ,OAAO;AACnB,MAAI,aAAa,MAAM,YAAY,MAAM,aAAa,MAAM;AAC5D,MAAI,WAAW,MAAM,YAAY,MAAM,WAAW,MAAM;AACxD,MAAI,eAAe,aAAa,YAAY;AAC5C,MAAI;AACJ,MAAI,uBAAuB,gBAAgB,YAAY;AACvD,UAAQ,sBAAsB;AAAA,IAC5B,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AACH,oBAAc;AACd;AAAA,IACF,KAAK;AAAA,IACL,KAAK;AACH,oBAAc;AACd;AAAA,IACF,KAAK;AAAA,IACL,KAAK;AACH,oBAAc;AACd;AAAA,IACF;AACE,aAAO,cAAc;AAAA,QACnB,UAAU;AAAA,MACZ,CAAC;AACD;AAAA,EACJ;AACA,MAAI,SAAS,KAAK,KAAK,MAAM;AAQ7B,MAAI,yBAAyB,YAAY,SAAS,KAAK,KAAK,KAAK,SAAS,KAAK,KAAK,KAAK;AACvF,cAAU,KAAK;AAAA,EACjB;AACA,SAAO,cAAc;AAAA,IACnB,UAAU;AAAA,EACZ,CAAC;AACH;AACA,SAAS,qBAAqB,OAAO,UAAU,OAAO;AACpD,SAAO,WAAW,KAAK,IAAI,KAAK,KAAK,QAAQ,KAAK;AACpD;AACA,SAAS,qBAAqB,OAAO,UAAU,OAAO;AACpD,SAAO,WAAW,KAAK,IAAI,KAAK,KAAK,QAAQ,IAAI;AACnD;;;AC3IA,IAAI,UAAU,KAAK;AACnB,IAAI,UAAU,KAAK;AACnB,SAAS,YAAY,OAAO,MAAM;AAChC,MAAI,mBAAmB,MAAM,WAAW,MAAM,QAAQ;AACtD,MAAI,uBAAuB,OAAO,aAAa,GAAG;AAChD,QAAI,WAAW,MAAM,YAAY;AAIjC,QAAI,SAAS,SAAS,cAAc,CAAC,SAAS,QAAQ;AACpD,UAAI,cAAc,KAAK,UAAU,WAAW;AAC5C,UAAI,SAAS,aAAa,GAAG;AAC3B,yBAAiB,KAAK;AACtB,yBAAiB,SAAS,cAAc;AAAA,MAC1C,OAAO;AACL,yBAAiB,KAAK;AACtB,yBAAiB,UAAU,cAAc;AAAA,MAC3C;AAAA,IACF;AAAA,EACF;AACA,SAAO;AACT;AACA,IAAI,UAAuB,SAAU,QAAQ;AAC3C,YAAUC,UAAS,MAAM;AACzB,WAASA,WAAU;AACjB,QAAI,QAAQ,OAAO,KAAK,IAAI,KAAK;AACjC,UAAM,OAAOA,SAAQ;AACrB,UAAM,gBAAgB;AACtB,WAAO;AAAA,EACT;AACA,EAAAA,SAAQ,UAAU,SAAS,SAAU,aAAa,SAAS,KAAK,SAAS;AACvE,SAAK,SAAS;AACd,SAAK,0BAA0B,GAAG;AAClC,SAAK,gBAAgB,WAAW;AAChC,QAAI,uBAAuB,YAAY,IAAI,kBAAkB;AAC7D,QAAI,yBAAyB,iBAAiB,yBAAyB,SAAS;AAE9E,WAAK,kBAAkB;AACvB,WAAK,eAAe,KAAK,aAAa,aAAa,SAAS,GAAG,IAAI,KAAK,cAAc,aAAa,SAAS,KAAK,OAAO;AAAA,IAC1H,WAAW,MAAuC;AAChD,WAAK,+CAA+C;AAAA,IACtD;AAAA,EACF;AACA,EAAAA,SAAQ,UAAU,2BAA2B,SAAU,aAAa;AAClE,SAAK,OAAO;AACZ,SAAK,gBAAgB,WAAW;AAGhC,SAAK,iBAAiB,WAAW;AAAA,EACnC;AACA,EAAAA,SAAQ,UAAU,oBAAoB,SAAU,QAAQ,aAAa;AAEnE,SAAK,kBAAkB,CAAC;AAExB,SAAK,wBAAwB,QAAQ,WAAW;AAAA,EAClD;AACA,EAAAA,SAAQ,UAAU,eAAe,SAAU,IAAI;AAC7C,qBAAiB,KAAK,mBAAmB,KAAK,OAAO,EAAE;AAAA,EACzD;AACA,EAAAA,SAAQ,UAAU,kBAAkB,SAAU,aAAa;AACzD,QAAI,cAAc,YAAY,gBAAgB;AAC9C,QAAI,KAAK,gBAAgB,QAAQ,gBAAgB,KAAK,cAAc;AAClE,WAAK,eAAe;AACpB,WAAK,OAAO;AAAA,IACd;AAAA,EACF;AACA,EAAAA,SAAQ,UAAU,gBAAgB,SAAU,aAAa,SAAS,KAAK,SAAS;AAC9E,QAAI,QAAQ,KAAK;AACjB,QAAI,OAAO,YAAY,QAAQ;AAC/B,QAAI,UAAU,KAAK;AACnB,QAAI,QAAQ,YAAY;AACxB,QAAI,WAAW,MAAM,YAAY;AACjC,QAAI;AACJ,QAAI,MAAM,SAAS,eAAe;AAChC,6BAAuB,SAAS,aAAa;AAAA,IAC/C,WAAW,MAAM,SAAS,SAAS;AACjC,6BAAuB,SAAS,QAAQ;AAAA,IAC1C;AACA,QAAI,iBAAiB,YAAY,mBAAmB,IAAI,cAAc;AACtE,QAAI,kBAAkB,mBAAmB,aAAa,KAAK;AAC3D,QAAI,iBAAiB;AACnB,WAAK,oBAAoB,iBAAiB,MAAM,GAAG;AAAA,IACrD;AACA,QAAI,YAAY,YAAY,IAAI,QAAQ,IAAI,KAAK;AACjD,QAAI,mBAAmB,YAAY,OAAO,IAAI;AAE9C,UAAM,eAAe;AAGrB,QAAI,WAAW,YAAY,IAAI,YAAY,IAAI;AAC/C,QAAI,iBAAiB,YAAY,IAAI,kBAAkB,IAAI;AAC3D,QAAI,kBAAkB,YAAY,SAAS,iBAAiB;AAC5D,QAAI,kBAAkB,gBAAgB,IAAI,cAAc,KAAK;AAC7D,QAAI,QAAQ,CAAC;AACb,QAAI,WAAW,KAAK;AACpB,QAAI,aAAa,WAAW,QAAQ;AACpC,QAAI,gBAAgB,WAAW,QAAQ,SAAS;AAChD,aAAS,iBAAiB,WAAW;AACnC,UAAI,WAAW,UAAU,MAAM,MAAM,MAAM,SAAS;AACpD,UAAI,OAAO,mBAAmB,OAAO,sBAAsB,QAAQ;AACnE,WAAK,SAAS,gBAAgB,aAAa,CAAC;AAE5C,UAAI,MAAM,SAAS,eAAe;AAChC,aAAK,SAAS,KAAK,eAAe;AAAA,MACpC,OAAO;AACL,aAAK,SAAS,gBAAgB,eAAe;AAAA,MAC/C;AACA,YAAM,aAAa;AACnB,aAAO;AAAA,IACT;AACA;AACA,SAAK,KAAK,OAAO,EAAE,IAAI,SAAU,WAAW;AAC1C,UAAI,YAAY,KAAK,aAAa,SAAS;AAC3C,UAAIC,UAAS,UAAU,MAAM,MAAM,MAAM,WAAW,SAAS;AAC7D,UAAI,gBAAgB;AAClB,yBAAiB,SAAS;AAAA,MAC5B;AAEA,UAAI,CAAC,KAAK,SAAS,SAAS,KAAK,CAAC,cAAc,MAAM,MAAMA,OAAM,GAAG;AACnE;AAAA,MACF;AACA,UAAI,YAAY;AAChB,UAAI,WAAW;AAGb,oBAAY,KAAK,MAAM,MAAM,kBAAkBA,OAAM;AAAA,MACvD;AACA,UAAI,KAAK,eAAe,MAAM,MAAM,aAAa,MAAM,WAAWA,SAAQ,sBAAsB,gBAAgB,SAAS,OAAO,OAAO,QAAQ;AAC/I,UAAI,iBAAiB;AASnB,WAAG,sBAAsB;AAAA,MAC3B;AACA,kBAAY,IAAI,MAAM,WAAW,WAAWA,SAAQ,aAAa,sBAAsB,MAAM,SAAS,OAAO;AAC7G,UAAI,YAAY;AACd,WAAG,KAAK;AAAA,UACN,OAAOA;AAAA,QACT,CAAC;AAAA,MACH,WAAW,iBAAiB;AAC1B,gCAAwB,iBAAiB,gBAAgB,IAAIA,SAAQ,WAAW,sBAAsB,OAAO,KAAK;AAAA,MACpH,OAAO;AACL,kBAAU,IAAI;AAAA,UACZ,OAAOA;AAAA,QACT,GAAG,aAAa,SAAS;AAAA,MAC3B;AACA,WAAK,iBAAiB,WAAW,EAAE;AACnC,YAAM,IAAI,EAAE;AACZ,SAAG,SAAS;AAAA,IACd,CAAC,EAAE,OAAO,SAAU,UAAU,UAAU;AACtC,UAAI,YAAY,KAAK,aAAa,QAAQ;AAC1C,UAAIA,UAAS,UAAU,MAAM,MAAM,MAAM,UAAU,SAAS;AAC5D,UAAI,gBAAgB;AAClB,YAAI,OAAO;AACX,YAAI,SAAS,WAAW,GAAG;AACzB,iBAAO,iBAAiB,QAAQ;AAAA,QAClC,OAAO;AACL,iBAAO,SAAS;AAChB,eAAK,SAAS,gBAAgB,aAAa,CAAC;AAE5C,cAAI,MAAM,SAAS,eAAe;AAChC,iBAAK,SAAS,KAAK,eAAe;AAAA,UACpC,OAAO;AACL,iBAAK,SAAS,gBAAgB,eAAe;AAAA,UAC/C;AACA,gBAAM,YAAY;AAAA,QACpB;AACA,YAAI,WAAW,UAAU,MAAM,MAAM,MAAM,QAAQ;AACnD,YAAI,QAAQ,sBAAsB,sBAAsB,UAAU,KAAK;AACvE,oBAAY,MAAM;AAAA,UAChB;AAAA,QACF,GAAG,gBAAgB,QAAQ;AAAA,MAC7B;AACA,UAAI,KAAK,QAAQ,iBAAiB,QAAQ;AAC1C,UAAI,CAAC,KAAK,SAAS,QAAQ,KAAK,CAAC,cAAc,MAAM,MAAMA,OAAM,GAAG;AAClE,cAAM,OAAO,EAAE;AACf;AAAA,MACF;AACA,UAAI,YAAY;AAChB,UAAI,WAAW;AACb,oBAAY,KAAK,MAAM,MAAM,kBAAkBA,OAAM;AACrD,YAAI,WAAW;AACb,gBAAM,OAAO,EAAE;AAAA,QACjB;AAAA,MACF;AACA,UAAI,CAAC,IAAI;AACP,aAAK,eAAe,MAAM,MAAM,aAAa,MAAM,UAAUA,SAAQ,sBAAsB,gBAAgB,SAAS,OAAO,CAAC,CAAC,IAAI,QAAQ;AAAA,MAC3I,OAAO;AACL,qBAAa,EAAE;AAAA,MACjB;AACA,UAAI,iBAAiB;AACnB,WAAG,sBAAsB;AAAA,MAC3B;AACA,UAAI,eAAe;AACjB,YAAI,SAAS,GAAG,eAAe;AAC/B,YAAI,QAAQ;AACV,cAAI,kBAAkB,WAAW,MAAM;AACvC,cAAI,gBAAgB,aAAa,MAAM;AAOrC,4BAAgB,YAAY,gBAAgB;AAAA,UAC9C;AAAA,QACF;AAAA,MACF,OAGK;AACH,oBAAY,IAAI,MAAM,UAAU,WAAWA,SAAQ,aAAa,sBAAsB,MAAM,SAAS,OAAO;AAAA,MAC9G;AACA,UAAI,YAAY;AACd,WAAG,KAAK;AAAA,UACN,OAAOA;AAAA,QACT,CAAC;AAAA,MACH,WAAW,iBAAiB;AAC1B,gCAAwB,iBAAiB,gBAAgB,IAAIA,SAAQ,UAAU,sBAAsB,MAAM,aAAa;AAAA,MAC1H,OAAO;AACL,oBAAY,IAAI;AAAA,UACd,OAAOA;AAAA,QACT,GAAG,aAAa,UAAU,IAAI;AAAA,MAChC;AACA,WAAK,iBAAiB,UAAU,EAAE;AAClC,SAAG,SAAS;AACZ,YAAM,IAAI,EAAE;AAAA,IACd,CAAC,EAAE,OAAO,SAAU,WAAW;AAC7B,UAAI,KAAK,QAAQ,iBAAiB,SAAS;AAC3C,YAAM,yBAAyB,IAAI,aAAa,SAAS;AAAA,IAC3D,CAAC,EAAE,QAAQ;AACX,QAAI,UAAU,KAAK,qBAAqB,KAAK,mBAAmB,IAAI,cAAM;AAC1E,YAAQ,UAAU;AAClB,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,EAAE,GAAG;AACrC,cAAQ,IAAI,MAAM,EAAE;AAAA,IACtB;AACA,UAAM,IAAI,OAAO;AACjB,SAAK,iBAAiB;AACtB,SAAK,QAAQ;AAAA,EACf;AACA,EAAAD,SAAQ,UAAU,eAAe,SAAU,aAAa,SAAS,KAAK;AACpE,SAAK,OAAO;AACZ,gBAAY,aAAa,KAAK,KAAK;AACnC,SAAK,iBAAiB,WAAW;AAAA,EACnC;AACA,EAAAA,SAAQ,UAAU,0BAA0B,SAAU,QAAQ,aAAa;AACzE,SAAK,kBAAkB;AACvB,gBAAY,aAAa,KAAK,OAAO,KAAK,iBAAiB,IAAI;AAAA,EACjE;AACA,EAAAA,SAAQ,UAAU,mBAAmB,SAAU,aAAa;AAE1D,QAAI,WAAW,YAAY,IAAI,QAAQ,IAAI,KAAK,eAAe,YAAY,kBAAkB,OAAO,WAAW;AAC/G,QAAI,QAAQ,KAAK;AACjB,QAAI,UAAU;AACZ,YAAM,YAAY,QAAQ;AAAA,IAC5B,OAAO;AACL,YAAM,eAAe;AAAA,IACvB;AAAA,EACF;AACA,EAAAA,SAAQ,UAAU,sBAAsB,SAAU,iBAAiB,MAAM,KAAK;AAC5E,QAAI,QAAQ;AAEZ,QAAI,CAAC,KAAK,MAAM,GAAG;AACjB;AAAA,IACF;AACA,QAAI,WAAW,gBAAgB;AAC/B,QAAI,KAAK,eAAe;AACtB,WAAK,kBAAkB,MAAM,iBAAiB,GAAG;AACjD,WAAK,gBAAgB;AAAA,IACvB,OAAO;AACL,UAAI,iBAAiB,SAAU,KAAK;AAClC,YAAI,KAAK,KAAK,iBAAiB,GAAG;AAClC,YAAI,QAAQ,MAAM,GAAG;AACrB,eAAO,SAGP,KAAK,IAAI,SAAS,aAAa,IAAI,MAAM,SAAS,MAAM,KAAK,KAE1D;AAAA,MACL;AACA,WAAK,cAAc,WAAY;AAC7B,cAAM,0BAA0B,MAAM,gBAAgB,UAAU,GAAG;AAAA,MACrE;AACA,UAAI,MAAM,EAAE,GAAG,YAAY,KAAK,WAAW;AAAA,IAC7C;AAAA,EACF;AACA,EAAAA,SAAQ,UAAU,YAAY,SAAU,MAAM,UAAU,cAAc;AACpE,QAAI,OAAO,CAAC;AACZ,SAAK,KAAK,KAAK,aAAa,SAAS,GAAG,GAAG,SAAU,eAAe,SAAS;AAC3E,UAAI,cAAc,aAAa,OAAO;AACtC,oBAAc,eAAe,OAAO,MAAM;AAC1C,WAAK,KAAK;AAAA,QACR,WAAW;AAAA,QACX;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AACD,SAAK,KAAK,SAAU,GAAG,GAAG;AAExB,aAAO,EAAE,cAAc,EAAE;AAAA,IAC3B,CAAC;AACD,WAAO;AAAA,MACL,gBAAgB,IAAI,MAAM,SAAU,MAAM;AACxC,eAAO,KAAK;AAAA,MACd,CAAC;AAAA,IACH;AAAA,EACF;AACA,EAAAA,SAAQ,UAAU,gCAAgC,SAAU,MAAM,cAAc,UAAU;AACxF,QAAI,QAAQ,SAAS;AACrB,QAAI,iBAAiB,KAAK,aAAa,SAAS,GAAG;AACnD,QAAI,YAAY,OAAO;AACvB,aAAS,UAAU,GAAG,MAAM,MAAM,eAAe,EAAE,WAAW,QAAQ,UAAU,KAAK,EAAE,SAAS;AAC9F,UAAI,SAAS,KAAK,WAAW,gBAAgB,MAAM,oBAAoB,OAAO,CAAC;AAC/E,UAAI,QAAQ,SAAS,IAEnB,OAAO,YAEP,aAAa,KAAK,gBAAgB,MAAM,CAAC;AAC3C,UAAI,QAAQ,WAAW;AACrB,eAAO;AAAA,MACT;AACA,kBAAY;AAAA,IACd;AACA,WAAO;AAAA,EACT;AAMA,EAAAA,SAAQ,UAAU,0BAA0B,SAAU,WAAW,UAAU;AACzE,QAAI,QAAQ,SAAS;AACrB,QAAI,SAAS,MAAM,UAAU;AAC7B,QAAI,UAAU,KAAK,IAAI,GAAG,OAAO,EAAE;AACnC,QAAI,UAAU,KAAK,IAAI,OAAO,IAAI,MAAM,eAAe,EAAE,WAAW,SAAS,CAAC;AAC9E,WAAO,WAAW,SAAS,EAAE,SAAS;AACpC,UAAI,UAAU,eAAe,aAAa,MAAM,oBAAoB,OAAO,GAAG;AAC5E,eAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AACA,EAAAA,SAAQ,UAAU,4BAA4B,SAAU,MAAM,cAAc,UAAU,KAAK;AACzF,QAAI,CAAC,KAAK,8BAA8B,MAAM,cAAc,QAAQ,GAAG;AACrE;AAAA,IACF;AACA,QAAI,WAAW,KAAK,UAAU,MAAM,UAAU,YAAY;AAC1D,QAAI,KAAK,wBAAwB,UAAU,QAAQ,GAAG;AACpD,WAAK,0BAA0B,GAAG;AAClC,UAAI,eAAe;AAAA,QACjB,MAAM;AAAA,QACN,eAAe,SAAS,MAAM;AAAA,QAC9B,QAAQ,SAAS;AAAA,QACjB;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AACA,EAAAA,SAAQ,UAAU,oBAAoB,SAAU,MAAM,iBAAiB,KAAK;AAC1E,QAAI,WAAW,gBAAgB;AAC/B,QAAI,aAAa,KAAK,UAAU,MAAM,UAAU,SAAU,SAAS;AACjE,aAAO,KAAK,IAAI,KAAK,aAAa,gBAAgB,UAAU,GAAG,GAAG,OAAO;AAAA,IAC3E,CAAC;AACD,QAAI,eAAe;AAAA,MACjB,MAAM;AAAA,MACN,eAAe,SAAS,MAAM;AAAA,MAC9B,YAAY;AAAA,MACZ,QAAQ,SAAS;AAAA,MACjB,UAAU;AAAA,IACZ,CAAC;AAAA,EACH;AACA,EAAAA,SAAQ,UAAU,SAAS,SAAU,SAAS,KAAK;AACjD,SAAK,OAAO,KAAK,MAAM;AACvB,SAAK,0BAA0B,GAAG;AAAA,EACpC;AACA,EAAAA,SAAQ,UAAU,UAAU,SAAU,SAAS,KAAK;AAClD,SAAK,0BAA0B,GAAG;AAAA,EACpC;AACA,EAAAA,SAAQ,UAAU,4BAA4B,SAAU,KAAK;AAC3D,QAAI,KAAK,aAAa;AACpB,UAAI,MAAM,EAAE,IAAI,YAAY,KAAK,WAAW;AAC5C,WAAK,cAAc;AAAA,IACrB;AAAA,EACF;AACA,EAAAA,SAAQ,UAAU,SAAS,SAAU,OAAO;AAC1C,QAAI,QAAQ,KAAK;AACjB,QAAI,OAAO,KAAK;AAChB,QAAI,SAAS,MAAM,mBAAmB,KAAK,QAAQ,CAAC,KAAK,cAAc;AACrE,WAAK,kBAAkB;AACvB,WAAK,iBAAiB,CAAC;AACvB,WAAK,kBAAkB,SAAU,IAAI;AACnC,iCAAyB,IAAI,OAAO,UAAU,EAAE,EAAE,SAAS;AAAA,MAC7D,CAAC;AAAA,IACH,OAAO;AACL,YAAM,UAAU;AAAA,IAClB;AACA,SAAK,QAAQ;AACb,SAAK,gBAAgB;AAAA,EACvB;AACA,EAAAA,SAAQ,UAAU,oBAAoB,WAAY;AAChD,SAAK,MAAM,OAAO,KAAK,gBAAgB;AACvC,SAAK,mBAAmB;AAAA,EAC1B;AACA,EAAAA,SAAQ,OAAO;AACf,SAAOA;AACT,EAAE,aAAS;AACX,IAAI,OAAO;AAAA,EACT,aAAa,SAAU,sBAAsBC,SAAQ;AACnD,QAAI,YAAYA,QAAO,QAAQ,IAAI,KAAK;AACxC,QAAI,aAAaA,QAAO,SAAS,IAAI,KAAK;AAE1C,QAAI,YAAY,GAAG;AACjB,MAAAA,QAAO,KAAKA,QAAO;AACnB,MAAAA,QAAO,QAAQ,CAACA,QAAO;AAAA,IACzB;AACA,QAAI,aAAa,GAAG;AAClB,MAAAA,QAAO,KAAKA,QAAO;AACnB,MAAAA,QAAO,SAAS,CAACA,QAAO;AAAA,IAC1B;AACA,QAAI,aAAa,qBAAqB,IAAI,qBAAqB;AAC/D,QAAI,aAAa,qBAAqB,IAAI,qBAAqB;AAC/D,QAAI,IAAI,QAAQA,QAAO,GAAG,qBAAqB,CAAC;AAChD,QAAI,KAAK,QAAQA,QAAO,IAAIA,QAAO,OAAO,UAAU;AACpD,QAAI,IAAI,QAAQA,QAAO,GAAG,qBAAqB,CAAC;AAChD,QAAI,KAAK,QAAQA,QAAO,IAAIA,QAAO,QAAQ,UAAU;AACrD,QAAI,WAAW,KAAK;AACpB,QAAI,WAAW,KAAK;AAKpB,IAAAA,QAAO,IAAI,YAAY,IAAI,aAAa,KAAK;AAC7C,IAAAA,QAAO,IAAI,YAAY,IAAI,aAAa,KAAK;AAC7C,IAAAA,QAAO,QAAQ,WAAW,IAAI,KAAK;AACnC,IAAAA,QAAO,SAAS,WAAW,IAAI,KAAK;AAEpC,QAAI,YAAY,GAAG;AACjB,MAAAA,QAAO,KAAKA,QAAO;AACnB,MAAAA,QAAO,QAAQ,CAACA,QAAO;AAAA,IACzB;AACA,QAAI,aAAa,GAAG;AAClB,MAAAA,QAAO,KAAKA,QAAO;AACnB,MAAAA,QAAO,SAAS,CAACA,QAAO;AAAA,IAC1B;AACA,WAAO,YAAY;AAAA,EACrB;AAAA,EACA,OAAO,SAAU,kBAAkBA,SAAQ;AACzC,QAAI,QAAQA,QAAO,MAAMA,QAAO,IAAI,IAAI;AAExC,QAAI,QAAQ,GAAG;AACb,UAAI,MAAMA,QAAO;AACjB,MAAAA,QAAO,IAAIA,QAAO;AAClB,MAAAA,QAAO,KAAK;AAAA,IACd;AACA,QAAI,IAAI,QAAQA,QAAO,GAAG,iBAAiB,CAAC;AAC5C,QAAI,KAAK,QAAQA,QAAO,IAAI,iBAAiB,EAAE;AAC/C,IAAAA,QAAO,IAAI;AACX,IAAAA,QAAO,KAAK;AACZ,QAAI,UAAU,IAAI,KAAK;AAEvB,QAAI,QAAQ,GAAG;AACb,UAAI,MAAMA,QAAO;AACjB,MAAAA,QAAO,IAAIA,QAAO;AAClB,MAAAA,QAAO,KAAK;AAAA,IACd;AACA,WAAO;AAAA,EACT;AACF;AACA,IAAI,iBAAiB;AAAA,EACnB,aAAa,SAAU,aAAa,MAAM,UAAUA,SAAQ,cAAc,gBAAgB,WAAW,UAAU,UAAU;AACvH,QAAI,OAAO,IAAI,aAAK;AAAA,MAClB,OAAO,OAAO,CAAC,GAAGA,OAAM;AAAA,MACxB,IAAI;AAAA,IACN,CAAC;AACD,SAAK,cAAc;AACnB,SAAK,OAAO;AACZ,QAAI,gBAAgB;AAClB,UAAI,YAAY,KAAK;AACrB,UAAI,kBAAkB,eAAe,WAAW;AAChD,gBAAU,mBAAmB;AAAA,IAC/B;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,SAAU,aAAa,MAAM,UAAUA,SAAQ,UAAU,gBAAgB,WAAW,UAAU,UAAU;AAC7G,QAAI,aAAa,CAAC,YAAY,WAAW,kBAAU;AACnD,QAAI,SAAS,IAAI,WAAW;AAAA,MAC1B,OAAOA;AAAA,MACP,IAAI;AAAA,IACN,CAAC;AACD,WAAO,OAAO;AACd,QAAI,cAAc,2BAA2B,QAAQ;AACrD,WAAO,wBAAwB,kCAAkC,aAAa;AAAA,MAC5E,YAAY,eAAe;AAAA,IAC7B,CAAC;AAED,QAAI,gBAAgB;AAClB,UAAI,cAAc,OAAO;AACzB,UAAI,kBAAkB,WAAW,MAAM;AACvC,UAAI,gBAAgB,CAAC;AACrB,kBAAY,mBAAmB,WAAWA,QAAO,KAAKA,QAAO;AAC7D,oBAAc,mBAAmBA,QAAO;AACxC,OAAC,WAAW,cAAc,WAAW,QAAQ;AAAA,QAC3C,OAAO;AAAA,MAET,GAAG,cAAc;AAAA,IACnB;AACA,WAAO;AAAA,EACT;AACF;AACA,SAAS,mBAAmB,aAAa,UAAU;AACjD,MAAI,qBAAqB,YAAY,IAAI,gBAAgB,IAAI;AAC7D,MAAI,WAAW,SAAS,YAAY;AACpC,MAAI,MAAuC;AACzC,QAAI,oBAAoB;AACtB,UAAI,SAAS,SAAS,YAAY;AAChC,aAAK,uFAAuF;AAAA,MAC9F;AACA,UAAI,SAAS,SAAS,eAAe;AACnC,aAAK,6EAA6E;AAAA,MACpF;AAAA,IACF;AAAA,EACF;AACA,MAAI,sBAAsB,SAAS,SAAS,cAAc,SAAS,SAAS,eAAe;AACzF,WAAO;AAAA,MACL;AAAA,MACA,WAAW,SAAS,aAAa,QAAQ;AAAA,IAC3C;AAAA,EACF;AACF;AACA,SAAS,wBAAwB,iBAAiB,sBAAsB,IAAIA,SAAQ,UAAU,cAAc,UAAU,eAAe;AACnI,MAAI;AACJ,MAAI;AACJ,MAAI,cAAc;AAChB,iBAAa;AAAA,MACX,GAAGA,QAAO;AAAA,MACV,OAAOA,QAAO;AAAA,IAChB;AACA,mBAAe;AAAA,MACb,GAAGA,QAAO;AAAA,MACV,QAAQA,QAAO;AAAA,IACjB;AAAA,EACF,OAAO;AACL,iBAAa;AAAA,MACX,GAAGA,QAAO;AAAA,MACV,QAAQA,QAAO;AAAA,IACjB;AACA,mBAAe;AAAA,MACb,GAAGA,QAAO;AAAA,MACV,OAAOA,QAAO;AAAA,IAChB;AAAA,EACF;AACA,MAAI,CAAC,eAAe;AAGlB,KAAC,WAAW,cAAc,WAAW,IAAI;AAAA,MACvC,OAAO;AAAA,IACT,GAAG,sBAAsB,UAAU,IAAI;AAAA,EACzC;AACA,MAAI,qBAAqB,uBAAuB,gBAAgB,SAAS,QAAQ;AACjF,GAAC,WAAW,cAAc,WAAW,IAAI;AAAA,IACvC,OAAO;AAAA,EACT,GAAG,oBAAoB,QAAQ;AACjC;AACA,SAAS,wBAAwB,KAAK,OAAO;AAC3C,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,QAAI,CAAC,SAAS,IAAI,MAAM,GAAG,GAAG;AAC5B,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT;AACA,IAAI,eAAe,CAAC,KAAK,KAAK,SAAS,QAAQ;AAC/C,IAAI,gBAAgB,CAAC,MAAM,MAAM,KAAK,cAAc,UAAU;AAC9D,IAAI,gBAAgB;AAAA,EAClB,aAAa,SAAUA,SAAQ;AAC7B,WAAO,CAAC,wBAAwBA,SAAQ,YAAY;AAAA,EACtD;AAAA,EACA,OAAO,SAAUA,SAAQ;AACvB,WAAO,CAAC,wBAAwBA,SAAQ,aAAa;AAAA,EACvD;AACF;AACA,IAAI,YAAY;AAAA,EAGd,aAAa,SAAU,MAAM,WAAW,WAAW;AACjD,QAAIA,UAAS,KAAK,cAAc,SAAS;AACzC,QAAI,iBAAiB,YAAY,aAAa,WAAWA,OAAM,IAAI;AAEnE,QAAI,QAAQA,QAAO,QAAQ,IAAI,IAAI;AACnC,QAAI,QAAQA,QAAO,SAAS,IAAI,IAAI;AACpC,WAAO;AAAA,MACL,GAAGA,QAAO,IAAI,QAAQ,iBAAiB;AAAA,MACvC,GAAGA,QAAO,IAAI,QAAQ,iBAAiB;AAAA,MACvC,OAAOA,QAAO,QAAQ,QAAQ;AAAA,MAC9B,QAAQA,QAAO,SAAS,QAAQ;AAAA,IAClC;AAAA,EACF;AAAA,EACA,OAAO,SAAU,MAAM,WAAW,WAAW;AAC3C,QAAIA,UAAS,KAAK,cAAc,SAAS;AACzC,WAAO;AAAA,MACL,IAAIA,QAAO;AAAA,MACX,IAAIA,QAAO;AAAA,MACX,IAAIA,QAAO;AAAA,MACX,GAAGA,QAAO;AAAA,MACV,YAAYA,QAAO;AAAA,MACnB,UAAUA,QAAO;AAAA,MACjB,WAAWA,QAAO;AAAA,IACpB;AAAA,EACF;AACF;AACA,SAAS,cAAcA,SAAQ;AAC7B,SAAOA,QAAO,cAAc,QAAQA,QAAO,YAAY,QAAQA,QAAO,eAAeA,QAAO;AAC9F;AACA,SAAS,2BAA2B,UAAU;AAC5C,SAAO,SAAUC,WAAU;AACzB,QAAI,aAAaA,YAAW,QAAQ;AACpC,WAAO,SAAU,UAAU;AACzB,cAAQ,UAAU;AAAA,QAChB,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO,WAAW;AAAA,QACpB;AACE,iBAAO;AAAA,MACX;AAAA,IACF;AAAA,EACF,EAAE,QAAQ;AACZ;AACA,SAAS,YAAY,IAAI,MAAM,WAAW,WAAWD,SAAQ,aAAa,sBAAsB,SAAS;AACvG,MAAI,QAAQ,KAAK,cAAc,WAAW,OAAO;AACjD,MAAI,CAAC,SAAS;AACZ,QAAI,eAAe,UAAU,IAAI,CAAC,aAAa,cAAc,CAAC,KAAK;AACnE,OAAG,SAAS,KAAK,YAAY;AAAA,EAC/B,WAAW,CAAC,YAAY,IAAI,UAAU,GAAG;AACvC,QAAI,cAAc,GAAG;AACrB,QAAI,eAAe,sBAAsB,UAAU,SAAS,WAAW,GAAG,aAAa,IAAI;AAC3F,WAAO,aAAa,YAAY;AAChC,OAAG,SAAS,WAAW;AAAA,EACzB;AACA,KAAG,SAAS,KAAK;AACjB,MAAI,cAAc,UAAU,WAAW,QAAQ;AAC/C,iBAAe,GAAG,KAAK,UAAU,WAAW;AAC5C,MAAI,uBAAuB,UAAU,uBAAuBA,QAAO,KAAKA,QAAO,KAAK,WAAW,aAAaA,QAAO,YAAYA,QAAO,aAAa,aAAa,eAAe,uBAAuBA,QAAO,UAAU,IAAI,WAAW,QAAQA,QAAO,SAAS,IAAI,UAAU;AAC5Q,MAAI,oBAAoB,qBAAqB,SAAS;AACtD,gBAAc,IAAI,mBAAmB;AAAA,IACnC,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,aAAa,gBAAgB,YAAY,QAAQ,GAAG,SAAS;AAAA,IAC7D,cAAc,MAAM;AAAA,IACpB,gBAAgB,MAAM;AAAA,IACtB,wBAAwB;AAAA,EAC1B,CAAC;AACD,MAAI,QAAQ,GAAG,eAAe;AAC9B,MAAI,WAAW,OAAO;AACpB,QAAI,WAAW,UAAU,IAAI,CAAC,SAAS,UAAU,CAAC;AAClD,OAAG,WAAW,SAAS,aAAa,WAAW,OAAO;AACtD,0BAAsB,IAAI,aAAa,YAAY,uBAAuB,UAAU,2BAA2B,oBAAoB,GAAG,UAAU,IAAI,CAAC,SAAS,QAAQ,CAAC,CAAC;AAAA,EAC1K;AACA,yBAAuB,OAAO,mBAAmB,YAAY,YAAY,SAAS,GAAG,SAAU,OAAO;AACpG,WAAO,4BAA4B,MAAM,KAAK;AAAA,EAChD,CAAC;AACD,MAAI,gBAAgB,UAAU,SAAS,CAAC,UAAU,CAAC;AACnD,sBAAoB,IAAI,cAAc,IAAI,OAAO,GAAG,cAAc,IAAI,WAAW,GAAG,cAAc,IAAI,UAAU,CAAC;AACjH,2BAAyB,IAAI,SAAS;AACtC,MAAI,cAAcA,OAAM,GAAG;AACzB,OAAG,MAAM,OAAO;AAChB,OAAG,MAAM,SAAS;AAClB,SAAK,GAAG,QAAQ,SAAU,OAAO;AAC/B,UAAI,MAAM,OAAO;AACf,cAAM,MAAM,OAAO,MAAM,MAAM,SAAS;AAAA,MAC1C;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAEA,SAAS,aAAa,WAAW,WAAW;AAE1C,MAAI,cAAc,UAAU,IAAI,CAAC,aAAa,aAAa,CAAC;AAC5D,MAAI,CAAC,eAAe,gBAAgB,QAAQ;AAC1C,WAAO;AAAA,EACT;AACA,MAAI,YAAY,UAAU,IAAI,CAAC,aAAa,aAAa,CAAC,KAAK;AAE/D,MAAI,QAAQ,MAAM,UAAU,KAAK,IAAI,OAAO,YAAY,KAAK,IAAI,UAAU,KAAK;AAChF,MAAI,SAAS,MAAM,UAAU,MAAM,IAAI,OAAO,YAAY,KAAK,IAAI,UAAU,MAAM;AACnF,SAAO,KAAK,IAAI,WAAW,OAAO,MAAM;AAC1C;AACA,IAAI,gBAA6B,WAAY;AAC3C,WAASE,iBAAgB;AAAA,EAAC;AAC1B,SAAOA;AACT,EAAE;AACF,IAAI,YAAyB,SAAU,QAAQ;AAC7C,YAAUC,YAAW,MAAM;AAC3B,WAASA,WAAU,MAAM;AACvB,QAAI,QAAQ,OAAO,KAAK,MAAM,IAAI,KAAK;AACvC,UAAM,OAAO;AACb,WAAO;AAAA,EACT;AACA,EAAAA,WAAU,UAAU,kBAAkB,WAAY;AAChD,WAAO,IAAI,cAAc;AAAA,EAC3B;AACA,EAAAA,WAAU,UAAU,YAAY,SAAU,KAAK,OAAO;AAGpD,QAAI,SAAS,MAAM;AACnB,QAAI,aAAa,KAAK;AACtB,QAAI,cAAc,IAAI,KAAK;AAC3B,QAAI,aAAa,CAAC;AAClB,QAAI,OAAO,CAAC;AACZ,QAAI,WAAW,KAAK;AACpB,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK,GAAG;AACzC,WAAK,cAAc;AACnB,WAAK,eAAe,OAAO,IAAI;AAC/B,iBAAW,cAAc,OAAO,IAAI;AACpC,iBAAW,eAAe,OAAO,IAAI;AACrC,UAAI,KAAK,WAAW,IAAI,WAAW,IAAI,KAAK,IAAI,KAAK,EAAE;AAAA,IACzD;AAAA,EACF;AACA,SAAOA;AACT,EAAE,YAAI;AACN,SAAS,YAAY,aAAa,OAAO,gBAAgB,aAAa;AAEpE,MAAI,OAAO,YAAY,QAAQ;AAC/B,MAAI,aAAa,KAAK,UAAU,qBAAqB,IAAI,IAAI;AAC7D,MAAI,mBAAmB,KAAK,UAAU,kBAAkB;AACxD,MAAI,WAAW,KAAK,UAAU,MAAM;AACpC,MAAI,kBAAkB,YAAY,SAAS,iBAAiB;AAC5D,MAAI,WAAW,KAAK,UAAU,uBAAuB;AACrD,MAAI,UAAU;AACZ,QAAI,OAAO,IAAI,UAAU;AAAA,MACvB,OAAO;AAAA,QACL,QAAQ;AAAA,MACV;AAAA,MACA,aAAa,CAAC,CAAC;AAAA,MACf,QAAQ;AAAA,MACR,IAAI;AAAA,IACN,CAAC;AACD,SAAK,aAAa;AAClB,SAAK,mBAAmB;AACxB,SAAK,WAAW;AAChB,SAAK,SAAS,gBAAgB,aAAa,CAAC;AAC5C,UAAM,IAAI,IAAI;AACd,sBAAkB,eAAe,KAAK,IAAI;AAAA,EAC5C;AACA,MAAI,KAAK,IAAI,UAAU;AAAA,IACrB,OAAO;AAAA,MACL,QAAQ,KAAK,UAAU,aAAa;AAAA,IACtC;AAAA,IACA,aAAa,CAAC,CAAC;AAAA,IACf,qBAAqB;AAAA,IACrB,IAAI;AAAA,EACN,CAAC;AACD,KAAG,aAAa;AAChB,KAAG,mBAAmB;AACtB,KAAG,WAAW;AACd,QAAM,IAAI,EAAE;AACZ,KAAG,SAAS,KAAK,UAAU,OAAO,CAAC;AAEnC,KAAG,MAAM,SAAS;AAElB,YAAU,EAAE,EAAE,cAAc,YAAY;AACxC,MAAI,CAAC,YAAY,IAAI,QAAQ,GAAG;AAC9B,OAAG,GAAG,aAAa,wBAAwB;AAC3C,OAAG,GAAG,aAAa,wBAAwB;AAAA,EAC7C;AACA,oBAAkB,eAAe,KAAK,EAAE;AAC1C;AAEA,IAAI,2BAA2B,SAAS,SAAU,OAAO;AACvD,MAAI,YAAY;AAChB,MAAI,YAAY,uBAAuB,WAAW,MAAM,SAAS,MAAM,OAAO;AAC9E,YAAU,SAAS,EAAE,YAAY,aAAa,IAAI,YAAY;AAChE,GAAG,IAAI,KAAK;AACZ,SAAS,uBAAuB,WAAW,GAAG,GAAG;AAC/C,MAAI,aAAa,UAAU;AAC3B,MAAI,cAAc,IAAI;AACtB,MAAI,SAAS,UAAU,MAAM;AAC7B,MAAI,mBAAmB,UAAU;AACjC,MAAI,aAAa,CAAC;AAClB,MAAI,OAAO,CAAC;AACZ,MAAI,WAAW,UAAU;AACzB,WAAS,IAAI,GAAG,MAAM,OAAO,SAAS,GAAG,IAAI,KAAK,KAAK;AACrD,QAAI,KAAK,IAAI;AACb,SAAK,cAAc;AACnB,SAAK,eAAe,OAAO,KAAK;AAChC,eAAW,cAAc,OAAO,KAAK;AACrC,eAAW,eAAe,OAAO,KAAK;AACtC,QAAI,KAAK,eAAe,GAAG;AACzB,iBAAW,gBAAgB,KAAK;AAChC,WAAK,eAAe,CAAC,KAAK;AAAA,IAC5B;AACA,QAAI,KAAK,WAAW,MAAM,KAAK,WAAW,KAAK,KAAK,MAAM,KAAK,WAAW,MAAM,KAAK,WAAW,KAAK,KAAK,IAAI;AAC5G,aAAO,iBAAiB;AAAA,IAC1B;AAAA,EACF;AACA,SAAO;AACT;AACA,SAAS,sBAAsB,sBAAsBH,SAAQ,OAAO;AAClE,MAAI,uBAAuB,OAAO,aAAa,GAAG;AAChD,QAAI,YAAYA;AAChB,QAAI,cAAc,MAAM,QAAQ;AAChC,WAAO;AAAA,MACL,GAAG,uBAAuB,UAAU,IAAI,YAAY;AAAA,MACpD,GAAG,uBAAuB,YAAY,IAAI,UAAU;AAAA,MACpD,OAAO,uBAAuB,UAAU,QAAQ,YAAY;AAAA,MAC5D,QAAQ,uBAAuB,YAAY,SAAS,UAAU;AAAA,IAChE;AAAA,EACF,OAAO;AACL,QAAI,cAAc,MAAM,QAAQ;AAChC,QAAI,cAAcA;AAClB,WAAO;AAAA,MACL,IAAI,YAAY;AAAA,MAChB,IAAI,YAAY;AAAA,MAChB,IAAI,uBAAuB,YAAY,KAAK,YAAY;AAAA,MACxD,GAAG,uBAAuB,YAAY,IAAI,YAAY;AAAA,MACtD,YAAY,uBAAuB,YAAY,aAAa;AAAA,MAC5D,UAAU,uBAAuB,YAAY,WAAW,KAAK,KAAK;AAAA,IACpE;AAAA,EACF;AACF;AACA,SAAS,mBAAmB,OAAO,sBAAsBA,SAAQ;AAC/D,MAAI,aAAa,MAAM,SAAS,UAAU,iBAAS;AACnD,SAAO,IAAI,WAAW;AAAA,IACpB,OAAO,sBAAsB,sBAAsBA,SAAQ,KAAK;AAAA,IAChE,QAAQ;AAAA,IACR,IAAI;AAAA,EACN,CAAC;AACH;AACA,IAAO,kBAAQ;;;AC70BR,SAAS,QAAQ,WAAW;AACjC,YAAU,kBAAkB,eAAO;AACnC,YAAU,oBAAoB,iBAAS;AACvC,YAAU,eAAe,UAAU,SAAS,OAAO,QAAe,MAAM,QAAQ,KAAK,CAAC;AAEtF,YAAU,eAAe,UAAU,SAAS,OAAO,oBAAoB,wBAAwB,KAAK,CAAC;AAErG,YAAU,kBAAkB,UAAU,SAAS,UAAU,WAAW,WAAW,KAAK,CAAC;AAUrF,YAAU,eAAe;AAAA,IACvB,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,EACV,GAAG,SAAU,SAAS,SAAS;AAC7B,QAAI,gBAAgB,QAAQ,iBAAiB;AAC7C,YAAQ,cAAc;AAAA,MACpB,UAAU;AAAA,MACV,OAAO;AAAA,IACT,GAAG,SAAU,gBAAgB;AAC3B,UAAI,QAAQ,UAAU;AACpB,uBAAe,KAAK,oBAAoB,QAAQ,QAAQ;AAAA,MAC1D;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AACH;",
  "names": ["BaseBarSeriesModel", "BarSeriesModel", "SausageShape", "SausagePath", "opts", "BarView", "layout", "isRadial", "LagePathShape", "LargePath"]
}
