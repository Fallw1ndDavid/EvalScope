{
  "version": 3,
  "sources": ["../../echarts/lib/component/legend/LegendModel.js", "../../echarts/lib/component/helper/listComponent.js", "../../echarts/lib/component/legend/LegendView.js", "../../echarts/lib/component/legend/legendFilter.js", "../../echarts/lib/component/legend/legendAction.js", "../../echarts/lib/component/legend/installLegendPlain.js", "../../echarts/lib/component/legend/ScrollableLegendModel.js", "../../echarts/lib/component/legend/ScrollableLegendView.js", "../../echarts/lib/component/legend/scrollableLegendAction.js", "../../echarts/lib/component/legend/installLegendScroll.js", "../../echarts/lib/component/legend/install.js"],
  "sourcesContent": ["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport Model from '../../model/Model.js';\nimport { isNameSpecified } from '../../util/model.js';\nimport ComponentModel from '../../model/Component.js';\nvar getDefaultSelectorOptions = function (ecModel, type) {\n  if (type === 'all') {\n    return {\n      type: 'all',\n      title: ecModel.getLocaleModel().get(['legend', 'selector', 'all'])\n    };\n  } else if (type === 'inverse') {\n    return {\n      type: 'inverse',\n      title: ecModel.getLocaleModel().get(['legend', 'selector', 'inverse'])\n    };\n  }\n};\nvar LegendModel = /** @class */function (_super) {\n  __extends(LegendModel, _super);\n  function LegendModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = LegendModel.type;\n    _this.layoutMode = {\n      type: 'box',\n      // legend.width/height are maxWidth/maxHeight actually,\n      // whereas real width/height is calculated by its content.\n      // (Setting {left: 10, right: 10} does not make sense).\n      // So consider the case:\n      // `setOption({legend: {left: 10});`\n      // then `setOption({legend: {right: 10});`\n      // The previous `left` should be cleared by setting `ignoreSize`.\n      ignoreSize: true\n    };\n    return _this;\n  }\n  LegendModel.prototype.init = function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n    this._updateSelector(option);\n  };\n  LegendModel.prototype.mergeOption = function (option, ecModel) {\n    _super.prototype.mergeOption.call(this, option, ecModel);\n    this._updateSelector(option);\n  };\n  LegendModel.prototype._updateSelector = function (option) {\n    var selector = option.selector;\n    var ecModel = this.ecModel;\n    if (selector === true) {\n      selector = option.selector = ['all', 'inverse'];\n    }\n    if (zrUtil.isArray(selector)) {\n      zrUtil.each(selector, function (item, index) {\n        zrUtil.isString(item) && (item = {\n          type: item\n        });\n        selector[index] = zrUtil.merge(item, getDefaultSelectorOptions(ecModel, item.type));\n      });\n    }\n  };\n  LegendModel.prototype.optionUpdated = function () {\n    this._updateData(this.ecModel);\n    var legendData = this._data;\n    // If selectedMode is single, try to select one\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false;\n      // If has any selected in option.selected\n      for (var i = 0; i < legendData.length; i++) {\n        var name_1 = legendData[i].get('name');\n        if (this.isSelected(name_1)) {\n          // Force to unselect others\n          this.select(name_1);\n          hasSelected = true;\n          break;\n        }\n      }\n      // Try select the first if selectedMode is single\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  };\n  LegendModel.prototype._updateData = function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n      if (seriesModel.legendVisualProvider) {\n        var provider = seriesModel.legendVisualProvider;\n        var names = provider.getAllNames();\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\r\n     * @type {Array.<string>}\r\n     * @private\r\n     */\n    this._availableNames = availableNames;\n    // If legend.data is not specified in option, use availableNames as data,\n    // which is convenient for user preparing option.\n    var rawData = this.get('data') || potentialData;\n    var legendNameMap = zrUtil.createHashMap();\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (zrUtil.isString(dataItem) || zrUtil.isNumber(dataItem)) {\n        dataItem = {\n          name: dataItem\n        };\n      }\n      if (legendNameMap.get(dataItem.name)) {\n        // remove legend name duplicate\n        return null;\n      }\n      legendNameMap.set(dataItem.name, true);\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\r\n     * @type {Array.<module:echarts/model/Model>}\r\n     * @private\r\n     */\n    this._data = zrUtil.filter(legendData, function (item) {\n      return !!item;\n    });\n  };\n  LegendModel.prototype.getData = function () {\n    return this._data;\n  };\n  LegendModel.prototype.select = function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n    selected[name] = true;\n  };\n  LegendModel.prototype.unSelect = function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  };\n  LegendModel.prototype.toggleSelected = function (name) {\n    var selected = this.option.selected;\n    // Default is true\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  };\n  LegendModel.prototype.allSelect = function () {\n    var data = this._data;\n    var selected = this.option.selected;\n    zrUtil.each(data, function (dataItem) {\n      selected[dataItem.get('name', true)] = true;\n    });\n  };\n  LegendModel.prototype.inverseSelect = function () {\n    var data = this._data;\n    var selected = this.option.selected;\n    zrUtil.each(data, function (dataItem) {\n      var name = dataItem.get('name', true);\n      // Initially, default value is true\n      if (!selected.hasOwnProperty(name)) {\n        selected[name] = true;\n      }\n      selected[name] = !selected[name];\n    });\n  };\n  LegendModel.prototype.isSelected = function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  };\n  LegendModel.prototype.getOrient = function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  };\n  LegendModel.type = 'legend.plain';\n  LegendModel.dependencies = ['series'];\n  LegendModel.defaultOption = {\n    // zlevel: 0,\n    z: 4,\n    show: true,\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemGap: 10,\n    itemWidth: 25,\n    itemHeight: 14,\n    symbolRotate: 'inherit',\n    symbolKeepAspect: true,\n    inactiveColor: '#ccc',\n    inactiveBorderColor: '#ccc',\n    inactiveBorderWidth: 'auto',\n    itemStyle: {\n      color: 'inherit',\n      opacity: 'inherit',\n      borderColor: 'inherit',\n      borderWidth: 'auto',\n      borderCap: 'inherit',\n      borderJoin: 'inherit',\n      borderDashOffset: 'inherit',\n      borderMiterLimit: 'inherit'\n    },\n    lineStyle: {\n      width: 'auto',\n      color: 'inherit',\n      inactiveColor: '#ccc',\n      inactiveWidth: 2,\n      opacity: 'inherit',\n      type: 'inherit',\n      cap: 'inherit',\n      join: 'inherit',\n      dashOffset: 'inherit',\n      miterLimit: 'inherit'\n    },\n    textStyle: {\n      color: '#333'\n    },\n    selectedMode: true,\n    selector: false,\n    selectorLabel: {\n      show: true,\n      borderRadius: 10,\n      padding: [3, 5, 3, 5],\n      fontSize: 12,\n      fontFamily: 'sans-serif',\n      color: '#666',\n      borderWidth: 1,\n      borderColor: '#666'\n    },\n    emphasis: {\n      selectorLabel: {\n        show: true,\n        color: '#eee',\n        backgroundColor: '#666'\n      }\n    },\n    selectorPosition: 'auto',\n    selectorItemGap: 7,\n    selectorButtonGap: 10,\n    tooltip: {\n      show: false\n    }\n  };\n  return LegendModel;\n}(ComponentModel);\nexport default LegendModel;", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n// @ts-nocheck\nimport { getLayoutRect, box as layoutBox, positionElement } from '../../util/layout.js';\nimport * as formatUtil from '../../util/format.js';\nimport * as graphic from '../../util/graphic.js';\n/**\r\n * Layout list like component.\r\n * It will box layout each items in group of component and then position the whole group in the viewport\r\n * @param {module:zrender/group/Group} group\r\n * @param {module:echarts/model/Component} componentModel\r\n * @param {module:echarts/ExtensionAPI}\r\n */\nexport function layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\nexport function makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  });\n  // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n  return rect;\n}", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport { parse, stringify } from 'zrender/lib/tool/color.js';\nimport * as graphic from '../../util/graphic.js';\nimport { enableHoverEmphasis } from '../../util/states.js';\nimport { setLabelStyle, createTextStyle } from '../../label/labelStyle.js';\nimport { makeBackground } from '../helper/listComponent.js';\nimport * as layoutUtil from '../../util/layout.js';\nimport ComponentView from '../../view/Component.js';\nimport { createSymbol } from '../../util/symbol.js';\nimport { createOrUpdatePatternFromDecal } from '../../util/decal.js';\nimport { getECData } from '../../util/innerStore.js';\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\nvar LegendView = /** @class */function (_super) {\n  __extends(LegendView, _super);\n  function LegendView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = LegendView.type;\n    _this.newlineDisabled = false;\n    return _this;\n  }\n  LegendView.prototype.init = function () {\n    this.group.add(this._contentGroup = new Group());\n    this.group.add(this._selectorGroup = new Group());\n    this._isFirstRender = true;\n  };\n  /**\r\n   * @protected\r\n   */\n  LegendView.prototype.getContentGroup = function () {\n    return this._contentGroup;\n  };\n  /**\r\n   * @protected\r\n   */\n  LegendView.prototype.getSelectorGroup = function () {\n    return this._selectorGroup;\n  };\n  /**\r\n   * @override\r\n   */\n  LegendView.prototype.render = function (legendModel, ecModel, api) {\n    var isFirstRender = this._isFirstRender;\n    this._isFirstRender = false;\n    this.resetInner();\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n    var itemAlign = legendModel.get('align');\n    var orient = legendModel.get('orient');\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && orient === 'vertical' ? 'right' : 'left';\n    }\n    // selector has been normalized to an array in model\n    var selector = legendModel.get('selector', true);\n    var selectorPosition = legendModel.get('selectorPosition', true);\n    if (selector && (!selectorPosition || selectorPosition === 'auto')) {\n      selectorPosition = orient === 'horizontal' ? 'end' : 'start';\n    }\n    this.renderInner(itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition);\n    // Perform layout.\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition);\n    // Place mainGroup, based on the calculated `mainRect`.\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.x = layoutRect.x - mainRect.x;\n    this.group.y = layoutRect.y - mainRect.y;\n    this.group.markRedraw();\n    // Render background after group is layout.\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  };\n  LegendView.prototype.resetInner = function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n    this.getSelectorGroup().removeAll();\n  };\n  LegendView.prototype.renderInner = function (itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (legendItemModel, dataIndex) {\n      var name = legendItemModel.get('name');\n      // Use empty string or \\n as a newline string\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        var g = new Group();\n        // @ts-ignore\n        g.newline = true;\n        contentGroup.add(g);\n        return;\n      }\n      // Representitive series.\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n      if (legendDrawnMap.get(name)) {\n        // Have been drawn\n        return;\n      }\n      // Legend to control series.\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var lineVisualStyle = data.getVisual('legendLineStyle') || {};\n        var legendIcon = data.getVisual('legendIcon');\n        /**\r\n         * `data.getVisual('style')` may be the color from the register\r\n         * in series. For example, for line series,\r\n         */\n        var style = data.getVisual('style');\n        var itemGroup = this._createItem(seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, lineVisualStyle, style, legendIcon, selectMode, api);\n        itemGroup.on('click', curry(dispatchSelectAction, name, null, api, excludeSeriesId)).on('mouseover', curry(dispatchHighlightAction, seriesModel.name, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel.name, null, api, excludeSeriesId));\n        if (ecModel.ssr) {\n          itemGroup.eachChild(function (child) {\n            var ecData = getECData(child);\n            ecData.seriesIndex = seriesModel.seriesIndex;\n            ecData.dataIndex = dataIndex;\n            ecData.ssrType = 'legend';\n          });\n        }\n        legendDrawnMap.set(name, true);\n      } else {\n        // Legend to control data. In pie and funnel.\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n          if (seriesModel.legendVisualProvider) {\n            var provider = seriesModel.legendVisualProvider;\n            if (!provider.containName(name)) {\n              return;\n            }\n            var idx = provider.indexOfName(name);\n            var style = provider.getItemVisual(idx, 'style');\n            var legendIcon = provider.getItemVisual(idx, 'legendIcon');\n            var colorArr = parse(style.fill);\n            // Color may be set to transparent in visualMap when data is out of range.\n            // Do not show nothing.\n            if (colorArr && colorArr[3] === 0) {\n              colorArr[3] = 0.2;\n              // TODO color is set to 0, 0, 0, 0. Should show correct RGBA\n              style = zrUtil.extend(zrUtil.extend({}, style), {\n                fill: stringify(colorArr, 'rgba')\n              });\n            }\n            var itemGroup = this._createItem(seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, {}, style, legendIcon, selectMode, api);\n            // FIXME: consider different series has items with the same name.\n            itemGroup.on('click', curry(dispatchSelectAction, null, name, api, excludeSeriesId))\n            // Should not specify the series name, consider legend controls\n            // more than one pie series.\n            .on('mouseover', curry(dispatchHighlightAction, null, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, null, name, api, excludeSeriesId));\n            if (ecModel.ssr) {\n              itemGroup.eachChild(function (child) {\n                var ecData = getECData(child);\n                ecData.seriesIndex = seriesModel.seriesIndex;\n                ecData.dataIndex = dataIndex;\n                ecData.ssrType = 'legend';\n              });\n            }\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (!legendDrawnMap.get(name)) {\n          console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n        }\n      }\n    }, this);\n    if (selector) {\n      this._createSelector(selector, legendModel, api, orient, selectorPosition);\n    }\n  };\n  LegendView.prototype._createSelector = function (selector, legendModel, api, orient, selectorPosition) {\n    var selectorGroup = this.getSelectorGroup();\n    each(selector, function createSelectorButton(selectorItem) {\n      var type = selectorItem.type;\n      var labelText = new graphic.Text({\n        style: {\n          x: 0,\n          y: 0,\n          align: 'center',\n          verticalAlign: 'middle'\n        },\n        onclick: function () {\n          api.dispatchAction({\n            type: type === 'all' ? 'legendAllSelect' : 'legendInverseSelect',\n            legendId: legendModel.id\n          });\n        }\n      });\n      selectorGroup.add(labelText);\n      var labelModel = legendModel.getModel('selectorLabel');\n      var emphasisLabelModel = legendModel.getModel(['emphasis', 'selectorLabel']);\n      setLabelStyle(labelText, {\n        normal: labelModel,\n        emphasis: emphasisLabelModel\n      }, {\n        defaultText: selectorItem.title\n      });\n      enableHoverEmphasis(labelText);\n    });\n  };\n  LegendView.prototype._createItem = function (seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, lineVisualStyle, itemVisualStyle, legendIcon, selectMode, api) {\n    var drawType = seriesModel.visualDrawType;\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var isSelected = legendModel.isSelected(name);\n    var iconRotate = legendItemModel.get('symbolRotate');\n    var symbolKeepAspect = legendItemModel.get('symbolKeepAspect');\n    var legendIconType = legendItemModel.get('icon');\n    legendIcon = legendIconType || legendIcon || 'roundRect';\n    var style = getLegendStyle(legendIcon, legendItemModel, lineVisualStyle, itemVisualStyle, drawType, isSelected, api);\n    var itemGroup = new Group();\n    var textStyleModel = legendItemModel.getModel('textStyle');\n    if (zrUtil.isFunction(seriesModel.getLegendIcon) && (!legendIconType || legendIconType === 'inherit')) {\n      // Series has specific way to define legend icon\n      itemGroup.add(seriesModel.getLegendIcon({\n        itemWidth: itemWidth,\n        itemHeight: itemHeight,\n        icon: legendIcon,\n        iconRotate: iconRotate,\n        itemStyle: style.itemStyle,\n        lineStyle: style.lineStyle,\n        symbolKeepAspect: symbolKeepAspect\n      }));\n    } else {\n      // Use default legend icon policy for most series\n      var rotate = legendIconType === 'inherit' && seriesModel.getData().getVisual('symbol') ? iconRotate === 'inherit' ? seriesModel.getData().getVisual('symbolRotate') : iconRotate : 0; // No rotation for no icon\n      itemGroup.add(getDefaultLegendIcon({\n        itemWidth: itemWidth,\n        itemHeight: itemHeight,\n        icon: legendIcon,\n        iconRotate: rotate,\n        itemStyle: style.itemStyle,\n        lineStyle: style.lineStyle,\n        symbolKeepAspect: symbolKeepAspect\n      }));\n    }\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n    if (zrUtil.isString(formatter) && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (zrUtil.isFunction(formatter)) {\n      content = formatter(name);\n    }\n    var textColor = isSelected ? textStyleModel.getTextColor() : legendItemModel.get('inactiveColor');\n    itemGroup.add(new graphic.Text({\n      style: createTextStyle(textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        fill: textColor,\n        align: textAlign,\n        verticalAlign: 'middle'\n      }, {\n        inheritColor: textColor\n      })\n    }));\n    // Add a invisible rect to increase the area of mouse hover\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      style: {\n        // Cannot use 'invisible' because SVG SSR will miss the node\n        fill: 'transparent'\n      }\n    });\n    var tooltipModel = legendItemModel.getModel('tooltip');\n    if (tooltipModel.get('show')) {\n      graphic.setTooltipConfig({\n        el: hitRect,\n        componentModel: legendModel,\n        itemName: name,\n        itemTooltipOption: tooltipModel.option\n      });\n    }\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    enableHoverEmphasis(itemGroup);\n    // @ts-ignore\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  };\n  LegendView.prototype.layoutInner = function (legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var selectorGroup = this.getSelectorGroup();\n    // Place items in contentGroup.\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    var contentPos = [-contentRect.x, -contentRect.y];\n    selectorGroup.markRedraw();\n    contentGroup.markRedraw();\n    if (selector) {\n      // Place buttons in selectorGroup\n      layoutUtil.box(\n      // Buttons in selectorGroup always layout horizontally\n      'horizontal', selectorGroup, legendModel.get('selectorItemGap', true));\n      var selectorRect = selectorGroup.getBoundingRect();\n      var selectorPos = [-selectorRect.x, -selectorRect.y];\n      var selectorButtonGap = legendModel.get('selectorButtonGap', true);\n      var orientIdx = legendModel.getOrient().index;\n      var wh = orientIdx === 0 ? 'width' : 'height';\n      var hw = orientIdx === 0 ? 'height' : 'width';\n      var yx = orientIdx === 0 ? 'y' : 'x';\n      if (selectorPosition === 'end') {\n        selectorPos[orientIdx] += contentRect[wh] + selectorButtonGap;\n      } else {\n        contentPos[orientIdx] += selectorRect[wh] + selectorButtonGap;\n      }\n      // Always align selector to content as 'middle'\n      selectorPos[1 - orientIdx] += contentRect[hw] / 2 - selectorRect[hw] / 2;\n      selectorGroup.x = selectorPos[0];\n      selectorGroup.y = selectorPos[1];\n      contentGroup.x = contentPos[0];\n      contentGroup.y = contentPos[1];\n      var mainRect = {\n        x: 0,\n        y: 0\n      };\n      mainRect[wh] = contentRect[wh] + selectorButtonGap + selectorRect[wh];\n      mainRect[hw] = Math.max(contentRect[hw], selectorRect[hw]);\n      mainRect[yx] = Math.min(0, selectorRect[yx] + selectorPos[1 - orientIdx]);\n      return mainRect;\n    } else {\n      contentGroup.x = contentPos[0];\n      contentGroup.y = contentPos[1];\n      return this.group.getBoundingRect();\n    }\n  };\n  /**\r\n   * @protected\r\n   */\n  LegendView.prototype.remove = function () {\n    this.getContentGroup().removeAll();\n    this._isFirstRender = true;\n  };\n  LegendView.type = 'legend.plain';\n  return LegendView;\n}(ComponentView);\nfunction getLegendStyle(iconType, legendItemModel, lineVisualStyle, itemVisualStyle, drawType, isSelected, api) {\n  /**\r\n   * Use series style if is inherit;\r\n   * elsewise, use legend style\r\n   */\n  function handleCommonProps(style, visualStyle) {\n    // If lineStyle.width is 'auto', it is set to be 2 if series has border\n    if (style.lineWidth === 'auto') {\n      style.lineWidth = visualStyle.lineWidth > 0 ? 2 : 0;\n    }\n    each(style, function (propVal, propName) {\n      style[propName] === 'inherit' && (style[propName] = visualStyle[propName]);\n    });\n  }\n  // itemStyle\n  var itemStyleModel = legendItemModel.getModel('itemStyle');\n  var itemStyle = itemStyleModel.getItemStyle();\n  var iconBrushType = iconType.lastIndexOf('empty', 0) === 0 ? 'fill' : 'stroke';\n  var decalStyle = itemStyleModel.getShallow('decal');\n  itemStyle.decal = !decalStyle || decalStyle === 'inherit' ? itemVisualStyle.decal : createOrUpdatePatternFromDecal(decalStyle, api);\n  if (itemStyle.fill === 'inherit') {\n    /**\r\n     * Series with visualDrawType as 'stroke' should have\r\n     * series stroke as legend fill\r\n     */\n    itemStyle.fill = itemVisualStyle[drawType];\n  }\n  if (itemStyle.stroke === 'inherit') {\n    /**\r\n     * icon type with \"emptyXXX\" should use fill color\r\n     * in visual style\r\n     */\n    itemStyle.stroke = itemVisualStyle[iconBrushType];\n  }\n  if (itemStyle.opacity === 'inherit') {\n    /**\r\n     * Use lineStyle.opacity if drawType is stroke\r\n     */\n    itemStyle.opacity = (drawType === 'fill' ? itemVisualStyle : lineVisualStyle).opacity;\n  }\n  handleCommonProps(itemStyle, itemVisualStyle);\n  // lineStyle\n  var legendLineModel = legendItemModel.getModel('lineStyle');\n  var lineStyle = legendLineModel.getLineStyle();\n  handleCommonProps(lineStyle, lineVisualStyle);\n  // Fix auto color to real color\n  itemStyle.fill === 'auto' && (itemStyle.fill = itemVisualStyle.fill);\n  itemStyle.stroke === 'auto' && (itemStyle.stroke = itemVisualStyle.fill);\n  lineStyle.stroke === 'auto' && (lineStyle.stroke = itemVisualStyle.fill);\n  if (!isSelected) {\n    var borderWidth = legendItemModel.get('inactiveBorderWidth');\n    /**\r\n     * Since stroke is set to be inactiveBorderColor, it may occur that\r\n     * there is no border in series but border in legend, so we need to\r\n     * use border only when series has border if is set to be auto\r\n     */\n    var visualHasBorder = itemStyle[iconBrushType];\n    itemStyle.lineWidth = borderWidth === 'auto' ? itemVisualStyle.lineWidth > 0 && visualHasBorder ? 2 : 0 : itemStyle.lineWidth;\n    itemStyle.fill = legendItemModel.get('inactiveColor');\n    itemStyle.stroke = legendItemModel.get('inactiveBorderColor');\n    lineStyle.stroke = legendLineModel.get('inactiveColor');\n    lineStyle.lineWidth = legendLineModel.get('inactiveWidth');\n  }\n  return {\n    itemStyle: itemStyle,\n    lineStyle: lineStyle\n  };\n}\nfunction getDefaultLegendIcon(opt) {\n  var symboType = opt.icon || 'roundRect';\n  var icon = createSymbol(symboType, 0, 0, opt.itemWidth, opt.itemHeight, opt.itemStyle.fill, opt.symbolKeepAspect);\n  icon.setStyle(opt.itemStyle);\n  icon.rotation = (opt.iconRotate || 0) * Math.PI / 180;\n  icon.setOrigin([opt.itemWidth / 2, opt.itemHeight / 2]);\n  if (symboType.indexOf('empty') > -1) {\n    icon.style.stroke = icon.style.fill;\n    icon.style.fill = '#fff';\n    icon.style.lineWidth = 2;\n  }\n  return icon;\n}\nfunction dispatchSelectAction(seriesName, dataName, api, excludeSeriesId) {\n  // downplay before unselect\n  dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId);\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: seriesName != null ? seriesName : dataName\n  });\n  // highlight after select\n  // TODO highlight immediately may cause animation loss.\n  dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId);\n}\nfunction isUseHoverLayer(api) {\n  var list = api.getZr().storage.getDisplayList();\n  var emphasisState;\n  var i = 0;\n  var len = list.length;\n  while (i < len && !(emphasisState = list[i].states.emphasis)) {\n    i++;\n  }\n  return emphasisState && emphasisState.hoverLayer;\n}\nfunction dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  if (!isUseHoverLayer(api)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\nfunction dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  if (!isUseHoverLayer(api)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\nexport default LegendView;", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nexport default function legendFilter(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n      return true;\n    });\n  }\n}", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { curry, each, hasOwn } from 'zrender/lib/core/util.js';\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var isAllSelect = methodName === 'allSelect' || methodName === 'inverseSelect';\n  var selectedMap = {};\n  var actionLegendIndices = [];\n  ecModel.eachComponent({\n    mainType: 'legend',\n    query: payload\n  }, function (legendModel) {\n    if (isAllSelect) {\n      legendModel[methodName]();\n    } else {\n      legendModel[methodName](payload.name);\n    }\n    makeSelectedMap(legendModel, selectedMap);\n    actionLegendIndices.push(legendModel.componentIndex);\n  });\n  var allSelectedMap = {};\n  // make selectedMap from all legend components\n  ecModel.eachComponent('legend', function (legendModel) {\n    each(selectedMap, function (isSelected, name) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](name);\n    });\n    makeSelectedMap(legendModel, allSelectedMap);\n  });\n  // Return the event explicitly\n  return isAllSelect ? {\n    selected: allSelectedMap,\n    // return legendIndex array to tell the developers which legends are allSelect / inverseSelect\n    legendIndex: actionLegendIndices\n  } : {\n    name: payload.name,\n    selected: allSelectedMap\n  };\n}\nfunction makeSelectedMap(legendModel, out) {\n  var selectedMap = out || {};\n  each(legendModel.getData(), function (model) {\n    var name = model.get('name');\n    // Wrap element\n    if (name === '\\n' || name === '') {\n      return;\n    }\n    var isItemSelected = legendModel.isSelected(name);\n    if (hasOwn(selectedMap, name)) {\n      // Unselected if any legend is unselected\n      selectedMap[name] = selectedMap[name] && isItemSelected;\n    } else {\n      selectedMap[name] = isItemSelected;\n    }\n  });\n  return selectedMap;\n}\nexport function installLegendAction(registers) {\n  /**\r\n   * @event legendToggleSelect\r\n   * @type {Object}\r\n   * @property {string} type 'legendToggleSelect'\r\n   * @property {string} [from]\r\n   * @property {string} name Series name or data item name\r\n   */\n  registers.registerAction('legendToggleSelect', 'legendselectchanged', curry(legendSelectActionHandler, 'toggleSelected'));\n  registers.registerAction('legendAllSelect', 'legendselectall', curry(legendSelectActionHandler, 'allSelect'));\n  registers.registerAction('legendInverseSelect', 'legendinverseselect', curry(legendSelectActionHandler, 'inverseSelect'));\n  /**\r\n   * @event legendSelect\r\n   * @type {Object}\r\n   * @property {string} type 'legendSelect'\r\n   * @property {string} name Series name or data item name\r\n   */\n  registers.registerAction('legendSelect', 'legendselected', curry(legendSelectActionHandler, 'select'));\n  /**\r\n   * @event legendUnSelect\r\n   * @type {Object}\r\n   * @property {string} type 'legendUnSelect'\r\n   * @property {string} name Series name or data item name\r\n   */\n  registers.registerAction('legendUnSelect', 'legendunselected', curry(legendSelectActionHandler, 'unSelect'));\n}", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport LegendModel from './LegendModel.js';\nimport LegendView from './LegendView.js';\nimport legendFilter from './legendFilter.js';\nimport { installLegendAction } from './legendAction.js';\nexport function install(registers) {\n  registers.registerComponentModel(LegendModel);\n  registers.registerComponentView(LegendView);\n  registers.registerProcessor(registers.PRIORITY.PROCESSOR.SERIES_FILTER, legendFilter);\n  registers.registerSubTypeDefaulter('legend', function () {\n    return 'plain';\n  });\n  installLegendAction(registers);\n}", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport LegendModel from './LegendModel.js';\nimport { mergeLayoutParam, getLayoutParams } from '../../util/layout.js';\nimport { inheritDefaultOption } from '../../util/component.js';\nvar ScrollableLegendModel = /** @class */function (_super) {\n  __extends(ScrollableLegendModel, _super);\n  function ScrollableLegendModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = ScrollableLegendModel.type;\n    return _this;\n  }\n  /**\r\n   * @param {number} scrollDataIndex\r\n   */\n  ScrollableLegendModel.prototype.setScrollDataIndex = function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  };\n  ScrollableLegendModel.prototype.init = function (option, parentModel, ecModel) {\n    var inputPositionParams = getLayoutParams(option);\n    _super.prototype.init.call(this, option, parentModel, ecModel);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  };\n  /**\r\n   * @override\r\n   */\n  ScrollableLegendModel.prototype.mergeOption = function (option, ecModel) {\n    _super.prototype.mergeOption.call(this, option, ecModel);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  };\n  ScrollableLegendModel.type = 'legend.scroll';\n  ScrollableLegendModel.defaultOption = inheritDefaultOption(LegendModel.defaultOption, {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    pageFormatter: '{current}/{total}',\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  });\n  return ScrollableLegendModel;\n}(LegendModel);\n;\n// Do not `ignoreSize` to enable setting {left: 10, right: 10}.\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: !!ignoreSize\n  });\n}\nexport default ScrollableLegendModel;", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\n/**\r\n * Separate legend and scrollable legend to reduce package size.\r\n */\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport * as layoutUtil from '../../util/layout.js';\nimport LegendView from './LegendView.js';\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = /** @class */function (_super) {\n  __extends(ScrollableLegendView, _super);\n  function ScrollableLegendView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = ScrollableLegendView.type;\n    _this.newlineDisabled = true;\n    _this._currentIndex = 0;\n    return _this;\n  }\n  ScrollableLegendView.prototype.init = function () {\n    _super.prototype.init.call(this);\n    this.group.add(this._containerGroup = new Group());\n    this._containerGroup.add(this.getContentGroup());\n    this.group.add(this._controllerGroup = new Group());\n  };\n  /**\r\n   * @override\r\n   */\n  ScrollableLegendView.prototype.resetInner = function () {\n    _super.prototype.resetInner.call(this);\n    this._controllerGroup.removeAll();\n    this._containerGroup.removeClipPath();\n    this._containerGroup.__rectSize = null;\n  };\n  /**\r\n   * @override\r\n   */\n  ScrollableLegendView.prototype.renderInner = function (itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition) {\n    var self = this;\n    // Render content items.\n    _super.prototype.renderInner.call(this, itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition);\n    var controllerGroup = this._controllerGroup;\n    // FIXME: support be 'auto' adapt to size number text length,\n    // e.g., '3/12345' should not overlap with the control arrow button.\n    var pageIconSize = legendModel.get('pageIconSize', true);\n    var pageIconSizeArr = zrUtil.isArray(pageIconSize) ? pageIconSize : [pageIconSize, pageIconSize];\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        // Placeholder to calculate a proper layout.\n        text: 'xx/xx',\n        fill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        verticalAlign: 'middle',\n        align: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(self._pageGo, self, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSizeArr[0] / 2,\n        y: -pageIconSizeArr[1] / 2,\n        width: pageIconSizeArr[0],\n        height: pageIconSizeArr[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  };\n  /**\r\n   * @override\r\n   */\n  ScrollableLegendView.prototype.layoutInner = function (legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition) {\n    var selectorGroup = this.getSelectorGroup();\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var xy = XY[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx];\n    selector && layoutUtil.box(\n    // Buttons in selectorGroup always layout horizontally\n    'horizontal', selectorGroup, legendModel.get('selectorItemGap', true));\n    var selectorButtonGap = legendModel.get('selectorButtonGap', true);\n    var selectorRect = selectorGroup.getBoundingRect();\n    var selectorPos = [-selectorRect.x, -selectorRect.y];\n    var processMaxSize = zrUtil.clone(maxSize);\n    selector && (processMaxSize[wh] = maxSize[wh] - selectorRect[wh] - selectorButtonGap);\n    var mainRect = this._layoutContentAndController(legendModel, isFirstRender, processMaxSize, orientIdx, wh, hw, yx, xy);\n    if (selector) {\n      if (selectorPosition === 'end') {\n        selectorPos[orientIdx] += mainRect[wh] + selectorButtonGap;\n      } else {\n        var offset = selectorRect[wh] + selectorButtonGap;\n        selectorPos[orientIdx] -= offset;\n        mainRect[xy] -= offset;\n      }\n      mainRect[wh] += selectorRect[wh] + selectorButtonGap;\n      selectorPos[1 - orientIdx] += mainRect[yx] + mainRect[hw] / 2 - selectorRect[hw] / 2;\n      mainRect[hw] = Math.max(mainRect[hw], selectorRect[hw]);\n      mainRect[yx] = Math.min(mainRect[yx], selectorRect[yx] + selectorPos[1 - orientIdx]);\n      selectorGroup.x = selectorPos[0];\n      selectorGroup.y = selectorPos[1];\n      selectorGroup.markRedraw();\n    }\n    return mainRect;\n  };\n  ScrollableLegendView.prototype._layoutContentAndController = function (legendModel, isFirstRender, maxSize, orientIdx, wh, hw, yx, xy) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    // Place items in contentGroup.\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box(\n    // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    // In case that the inner elements of contentGroup layout do not based on [0, 0]\n    var contentPos = [-contentRect.x, -contentRect.y];\n    // Remain contentPos when scroll animation perfroming.\n    // If first rendering, `contentGroup.position` is [0, 0], which\n    // does not make sense and may cause unexepcted animation if adopted.\n    if (!isFirstRender) {\n      contentPos[orientIdx] = contentGroup[xy];\n    }\n    // Layout container group based on 0.\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true));\n    // Place containerGroup and controllerGroup and contentGroup.\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true);\n      // controller is on the right / bottom.\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      }\n      // controller is on the left / top.\n      else {\n        containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n      }\n    }\n    // Always align controller to content as 'middle'.\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.setPosition(contentPos);\n    containerGroup.setPosition(containerPos);\n    controllerGroup.setPosition(controllerPos);\n    // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n    var mainRect = {\n      x: 0,\n      y: 0\n    };\n    // Consider content may be overflow (should be clipped).\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]);\n    // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      }));\n      // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as placeholders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    }\n    // Content translate animation.\n    var pageInfo = this._getPageInfo(legendModel);\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      x: pageInfo.contentPosition[0],\n      y: pageInfo.contentPosition[1]\n    },\n    // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird effect.\n    showController ? legendModel : null);\n    this._updatePageInfoView(legendModel, pageInfo);\n    return mainRect;\n  };\n  ScrollableLegendView.prototype._pageGo = function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  };\n  ScrollableLegendView.prototype._updatePageInfoView = function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var key = name + 'DataIndex';\n      var canJump = pageInfo[key] != null;\n      var icon = controllerGroup.childOfName(name);\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current == null ? '' : current + '').replace('{total}', total == null ? '' : total + '') : pageFormatter({\n      current: current,\n      total: total\n    }));\n  };\n  /**\r\n   *  contentPosition: Array.<number>, null when data item not found.\r\n   *  pageIndex: number, null when data item not found.\r\n   *  pageCount: number, always be a number, can be 0.\r\n   *  pagePrevDataIndex: number, null when no previous page.\r\n   *  pageNextDataIndex: number, null when no next page.\r\n   * }\r\n   */\n  ScrollableLegendView.prototype._getPageInfo = function (legendModel) {\n    var scrollDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var xy = XY[orientIdx];\n    var targetItemIndex = this._findTargetItemIndex(scrollDataIndex);\n    var children = contentGroup.children();\n    var targetItem = children[targetItemIndex];\n    var itemCount = children.length;\n    var pCount = !itemCount ? 0 : 1;\n    var result = {\n      contentPosition: [contentGroup.x, contentGroup.y],\n      pageCount: pCount,\n      pageIndex: pCount - 1,\n      pagePrevDataIndex: null,\n      pageNextDataIndex: null\n    };\n    if (!targetItem) {\n      return result;\n    }\n    var targetItemInfo = getItemInfo(targetItem);\n    result.contentPosition[orientIdx] = -targetItemInfo.s;\n    // Strategy:\n    // (1) Always align based on the left/top most item.\n    // (2) It is user-friendly that the last item shown in the\n    // current window is shown at the begining of next window.\n    // Otherwise if half of the last item is cut by the window,\n    // it will have no chance to display entirely.\n    // (3) Consider that item size probably be different, we\n    // have calculate pageIndex by size rather than item index,\n    // and we can not get page index directly by division.\n    // (4) The window is to narrow to contain more than\n    // one item, we should make sure that the page can be fliped.\n    for (var i = targetItemIndex + 1, winStartItemInfo = targetItemInfo, winEndItemInfo = targetItemInfo, currItemInfo = null; i <= itemCount; ++i) {\n      currItemInfo = getItemInfo(children[i]);\n      if (\n      // Half of the last item is out of the window.\n      !currItemInfo && winEndItemInfo.e > winStartItemInfo.s + containerRectSize\n      // If the current item does not intersect with the window, the new page\n      // can be started at the current item or the last item.\n      || currItemInfo && !intersect(currItemInfo, winStartItemInfo.s)) {\n        if (winEndItemInfo.i > winStartItemInfo.i) {\n          winStartItemInfo = winEndItemInfo;\n        } else {\n          // e.g., when page size is smaller than item size.\n          winStartItemInfo = currItemInfo;\n        }\n        if (winStartItemInfo) {\n          if (result.pageNextDataIndex == null) {\n            result.pageNextDataIndex = winStartItemInfo.i;\n          }\n          ++result.pageCount;\n        }\n      }\n      winEndItemInfo = currItemInfo;\n    }\n    for (var i = targetItemIndex - 1, winStartItemInfo = targetItemInfo, winEndItemInfo = targetItemInfo, currItemInfo = null; i >= -1; --i) {\n      currItemInfo = getItemInfo(children[i]);\n      if (\n      // If the the end item does not intersect with the window started\n      // from the current item, a page can be settled.\n      (!currItemInfo || !intersect(winEndItemInfo, currItemInfo.s)\n      // e.g., when page size is smaller than item size.\n      ) && winStartItemInfo.i < winEndItemInfo.i) {\n        winEndItemInfo = winStartItemInfo;\n        if (result.pagePrevDataIndex == null) {\n          result.pagePrevDataIndex = winStartItemInfo.i;\n        }\n        ++result.pageCount;\n        ++result.pageIndex;\n      }\n      winStartItemInfo = currItemInfo;\n    }\n    return result;\n    function getItemInfo(el) {\n      if (el) {\n        var itemRect = el.getBoundingRect();\n        var start = itemRect[xy] + el[xy];\n        return {\n          s: start,\n          e: start + itemRect[wh],\n          i: el.__legendDataIndex\n        };\n      }\n    }\n    function intersect(itemInfo, winStart) {\n      return itemInfo.e >= winStart && itemInfo.s <= winStart + containerRectSize;\n    }\n  };\n  ScrollableLegendView.prototype._findTargetItemIndex = function (targetDataIndex) {\n    if (!this._showController) {\n      return 0;\n    }\n    var index;\n    var contentGroup = this.getContentGroup();\n    var defaultIndex;\n    contentGroup.eachChild(function (child, idx) {\n      var legendDataIdx = child.__legendDataIndex;\n      // FIXME\n      // If the given targetDataIndex (from model) is illegal,\n      // we use defaultIndex. But the index on the legend model and\n      // action payload is still illegal. That case will not be\n      // changed until some scenario requires.\n      if (defaultIndex == null && legendDataIdx != null) {\n        defaultIndex = idx;\n      }\n      if (legendDataIdx === targetDataIndex) {\n        index = idx;\n      }\n    });\n    return index != null ? index : defaultIndex;\n  };\n  ScrollableLegendView.type = 'legend.scroll';\n  return ScrollableLegendView;\n}(LegendView);\nexport default ScrollableLegendView;", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nexport default function installScrollableLegendAction(registers) {\n  /**\r\n   * @event legendScroll\r\n   * @type {Object}\r\n   * @property {string} type 'legendScroll'\r\n   * @property {string} scrollDataIndex\r\n   */\n  registers.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n    var scrollDataIndex = payload.scrollDataIndex;\n    scrollDataIndex != null && ecModel.eachComponent({\n      mainType: 'legend',\n      subType: 'scroll',\n      query: payload\n    }, function (legendModel) {\n      legendModel.setScrollDataIndex(scrollDataIndex);\n    });\n  });\n}", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { use } from '../../extension.js';\nimport { install as installLegendPlain } from './installLegendPlain.js';\nimport ScrollableLegendModel from './ScrollableLegendModel.js';\nimport ScrollableLegendView from './ScrollableLegendView.js';\nimport installScrollableLegendAction from './scrollableLegendAction.js';\nexport function install(registers) {\n  use(installLegendPlain);\n  registers.registerComponentModel(ScrollableLegendModel);\n  registers.registerComponentView(ScrollableLegendView);\n  installScrollableLegendAction(registers);\n}", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { use } from '../../extension.js';\nimport { install as installLegendPlain } from './installLegendPlain.js';\nimport { install as installLegendScroll } from './installLegendScroll.js';\nexport function install(registers) {\n  use(installLegendPlain);\n  use(installLegendScroll);\n}"],
  "mappings": "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",
  "names": ["LegendModel", "curry", "each", "LegendView", "seriesModel", "style", "legendIcon", "itemGroup", "Component_default", "ScrollableLegendModel", "Group", "ScrollableLegendView", "install", "install"]
}
