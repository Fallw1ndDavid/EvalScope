{
  "version": 3,
  "sources": ["../../echarts/lib/chart/line/LineSeries.js", "../../echarts/lib/chart/helper/Symbol.js", "../../echarts/lib/chart/helper/SymbolDraw.js", "../../echarts/lib/chart/line/helper.js", "../../echarts/lib/chart/line/lineAnimationDiff.js", "../../echarts/lib/chart/line/poly.js", "../../echarts/lib/chart/line/LineView.js", "../../echarts/lib/layout/points.js", "../../echarts/lib/chart/line/install.js"],
  "sourcesContent": ["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport createSeriesData from '../helper/createSeriesData.js';\nimport SeriesModel from '../../model/Series.js';\nimport { createSymbol } from '../../util/symbol.js';\nimport { Group } from '../../util/graphic.js';\nvar LineSeriesModel = /** @class */function (_super) {\n  __extends(LineSeriesModel, _super);\n  function LineSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = LineSeriesModel.type;\n    _this.hasSymbolVisual = true;\n    return _this;\n  }\n  LineSeriesModel.prototype.getInitialData = function (option) {\n    if (process.env.NODE_ENV !== 'production') {\n      var coordSys = option.coordinateSystem;\n      if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n        throw new Error('Line not support coordinateSystem besides cartesian and polar');\n      }\n    }\n    return createSeriesData(null, this, {\n      useEncodeDefaulter: true\n    });\n  };\n  LineSeriesModel.prototype.getLegendIcon = function (opt) {\n    var group = new Group();\n    var line = createSymbol('line', 0, opt.itemHeight / 2, opt.itemWidth, 0, opt.lineStyle.stroke, false);\n    group.add(line);\n    line.setStyle(opt.lineStyle);\n    var visualType = this.getData().getVisual('symbol');\n    var visualRotate = this.getData().getVisual('symbolRotate');\n    var symbolType = visualType === 'none' ? 'circle' : visualType;\n    // Symbol size is 80% when there is a line\n    var size = opt.itemHeight * 0.8;\n    var symbol = createSymbol(symbolType, (opt.itemWidth - size) / 2, (opt.itemHeight - size) / 2, size, size, opt.itemStyle.fill);\n    group.add(symbol);\n    symbol.setStyle(opt.itemStyle);\n    var symbolRotate = opt.iconRotate === 'inherit' ? visualRotate : opt.iconRotate || 0;\n    symbol.rotation = symbolRotate * Math.PI / 180;\n    symbol.setOrigin([opt.itemWidth / 2, opt.itemHeight / 2]);\n    if (symbolType.indexOf('empty') > -1) {\n      symbol.style.stroke = symbol.style.fill;\n      symbol.style.fill = '#fff';\n      symbol.style.lineWidth = 2;\n    }\n    return group;\n  };\n  LineSeriesModel.type = 'series.line';\n  LineSeriesModel.dependencies = ['grid', 'polar'];\n  LineSeriesModel.defaultOption = {\n    // zlevel: 0,\n    z: 3,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    clip: true,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    endLabel: {\n      show: false,\n      valueAnimation: true,\n      distance: 8\n    },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    emphasis: {\n      scale: true\n    },\n    // areaStyle: {\n    // origin of areaStyle. Valid values:\n    // `'auto'/null/undefined`: from axisLine to data\n    // `'start'`: from min to data\n    // `'end'`: from data to max\n    // origin: 'auto'\n    // },\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    symbol: 'emptyCircle',\n    symbolSize: 4,\n    symbolRotate: null,\n    showSymbol: true,\n    // `false`: follow the label interval strategy.\n    // `true`: show all symbols.\n    // `'auto'`: If possible, show all symbols, otherwise\n    //           follow the label interval strategy.\n    showAllSymbol: 'auto',\n    // Whether to connect break point.\n    connectNulls: false,\n    // Sampling for large data. Can be: 'average', 'max', 'min', 'sum', 'lttb'.\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity,\n    universalTransition: {\n      divideShape: 'clone'\n    },\n    triggerLineEvent: false\n  };\n  return LineSeriesModel;\n}(SeriesModel);\nexport default LineSeriesModel;", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport { createSymbol, normalizeSymbolOffset, normalizeSymbolSize } from '../../util/symbol.js';\nimport * as graphic from '../../util/graphic.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { enterEmphasis, leaveEmphasis, toggleHoverEmphasis } from '../../util/states.js';\nimport { getDefaultLabel } from './labelHelper.js';\nimport { extend } from 'zrender/lib/core/util.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nimport ZRImage from 'zrender/lib/graphic/Image.js';\nimport { saveOldStyle } from '../../animation/basicTransition.js';\nvar Symbol = /** @class */function (_super) {\n  __extends(Symbol, _super);\n  function Symbol(data, idx, seriesScope, opts) {\n    var _this = _super.call(this) || this;\n    _this.updateData(data, idx, seriesScope, opts);\n    return _this;\n  }\n  Symbol.prototype._createSymbol = function (symbolType, data, idx, symbolSize, keepAspect) {\n    // Remove paths created before\n    this.removeAll();\n    // let symbolPath = createSymbol(\n    //     symbolType, -0.5, -0.5, 1, 1, color\n    // );\n    // If width/height are set too small (e.g., set to 1) on ios10\n    // and macOS Sierra, a circle stroke become a rect, no matter what\n    // the scale is set. So we set width/height as 2. See #4150.\n    var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, null, keepAspect);\n    symbolPath.attr({\n      z2: 100,\n      culling: true,\n      scaleX: symbolSize[0] / 2,\n      scaleY: symbolSize[1] / 2\n    });\n    // Rewrite drift method\n    symbolPath.drift = driftSymbol;\n    this._symbolType = symbolType;\n    this.add(symbolPath);\n  };\n  /**\r\n   * Stop animation\r\n   * @param {boolean} toLastFrame\r\n   */\n  Symbol.prototype.stopSymbolAnimation = function (toLastFrame) {\n    this.childAt(0).stopAnimation(null, toLastFrame);\n  };\n  Symbol.prototype.getSymbolType = function () {\n    return this._symbolType;\n  };\n  /**\r\n   * FIXME:\r\n   * Caution: This method breaks the encapsulation of this module,\r\n   * but it indeed brings convenience. So do not use the method\r\n   * unless you detailedly know all the implements of `Symbol`,\r\n   * especially animation.\r\n   *\r\n   * Get symbol path element.\r\n   */\n  Symbol.prototype.getSymbolPath = function () {\n    return this.childAt(0);\n  };\n  /**\r\n   * Highlight symbol\r\n   */\n  Symbol.prototype.highlight = function () {\n    enterEmphasis(this.childAt(0));\n  };\n  /**\r\n   * Downplay symbol\r\n   */\n  Symbol.prototype.downplay = function () {\n    leaveEmphasis(this.childAt(0));\n  };\n  /**\r\n   * @param {number} zlevel\r\n   * @param {number} z\r\n   */\n  Symbol.prototype.setZ = function (zlevel, z) {\n    var symbolPath = this.childAt(0);\n    symbolPath.zlevel = zlevel;\n    symbolPath.z = z;\n  };\n  Symbol.prototype.setDraggable = function (draggable, hasCursorOption) {\n    var symbolPath = this.childAt(0);\n    symbolPath.draggable = draggable;\n    symbolPath.cursor = !hasCursorOption && draggable ? 'move' : symbolPath.cursor;\n  };\n  /**\r\n   * Update symbol properties\r\n   */\n  Symbol.prototype.updateData = function (data, idx, seriesScope, opts) {\n    this.silent = false;\n    var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n    var seriesModel = data.hostModel;\n    var symbolSize = Symbol.getSymbolSize(data, idx);\n    var isInit = symbolType !== this._symbolType;\n    var disableAnimation = opts && opts.disableAnimation;\n    if (isInit) {\n      var keepAspect = data.getItemVisual(idx, 'symbolKeepAspect');\n      this._createSymbol(symbolType, data, idx, symbolSize, keepAspect);\n    } else {\n      var symbolPath = this.childAt(0);\n      symbolPath.silent = false;\n      var target = {\n        scaleX: symbolSize[0] / 2,\n        scaleY: symbolSize[1] / 2\n      };\n      disableAnimation ? symbolPath.attr(target) : graphic.updateProps(symbolPath, target, seriesModel, idx);\n      saveOldStyle(symbolPath);\n    }\n    this._updateCommon(data, idx, symbolSize, seriesScope, opts);\n    if (isInit) {\n      var symbolPath = this.childAt(0);\n      if (!disableAnimation) {\n        var target = {\n          scaleX: this._sizeX,\n          scaleY: this._sizeY,\n          style: {\n            // Always fadeIn. Because it has fadeOut animation when symbol is removed..\n            opacity: symbolPath.style.opacity\n          }\n        };\n        symbolPath.scaleX = symbolPath.scaleY = 0;\n        symbolPath.style.opacity = 0;\n        graphic.initProps(symbolPath, target, seriesModel, idx);\n      }\n    }\n    if (disableAnimation) {\n      // Must stop leave transition manually if don't call initProps or updateProps.\n      this.childAt(0).stopAnimation('leave');\n    }\n  };\n  Symbol.prototype._updateCommon = function (data, idx, symbolSize, seriesScope, opts) {\n    var symbolPath = this.childAt(0);\n    var seriesModel = data.hostModel;\n    var emphasisItemStyle;\n    var blurItemStyle;\n    var selectItemStyle;\n    var focus;\n    var blurScope;\n    var emphasisDisabled;\n    var labelStatesModels;\n    var hoverScale;\n    var cursorStyle;\n    if (seriesScope) {\n      emphasisItemStyle = seriesScope.emphasisItemStyle;\n      blurItemStyle = seriesScope.blurItemStyle;\n      selectItemStyle = seriesScope.selectItemStyle;\n      focus = seriesScope.focus;\n      blurScope = seriesScope.blurScope;\n      labelStatesModels = seriesScope.labelStatesModels;\n      hoverScale = seriesScope.hoverScale;\n      cursorStyle = seriesScope.cursorStyle;\n      emphasisDisabled = seriesScope.emphasisDisabled;\n    }\n    if (!seriesScope || data.hasItemOption) {\n      var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx);\n      var emphasisModel = itemModel.getModel('emphasis');\n      emphasisItemStyle = emphasisModel.getModel('itemStyle').getItemStyle();\n      selectItemStyle = itemModel.getModel(['select', 'itemStyle']).getItemStyle();\n      blurItemStyle = itemModel.getModel(['blur', 'itemStyle']).getItemStyle();\n      focus = emphasisModel.get('focus');\n      blurScope = emphasisModel.get('blurScope');\n      emphasisDisabled = emphasisModel.get('disabled');\n      labelStatesModels = getLabelStatesModels(itemModel);\n      hoverScale = emphasisModel.getShallow('scale');\n      cursorStyle = itemModel.getShallow('cursor');\n    }\n    var symbolRotate = data.getItemVisual(idx, 'symbolRotate');\n    symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n    var symbolOffset = normalizeSymbolOffset(data.getItemVisual(idx, 'symbolOffset'), symbolSize);\n    if (symbolOffset) {\n      symbolPath.x = symbolOffset[0];\n      symbolPath.y = symbolOffset[1];\n    }\n    cursorStyle && symbolPath.attr('cursor', cursorStyle);\n    var symbolStyle = data.getItemVisual(idx, 'style');\n    var visualColor = symbolStyle.fill;\n    if (symbolPath instanceof ZRImage) {\n      var pathStyle = symbolPath.style;\n      symbolPath.useStyle(extend({\n        // TODO other properties like x, y ?\n        image: pathStyle.image,\n        x: pathStyle.x,\n        y: pathStyle.y,\n        width: pathStyle.width,\n        height: pathStyle.height\n      }, symbolStyle));\n    } else {\n      if (symbolPath.__isEmptyBrush) {\n        // fill and stroke will be swapped if it's empty.\n        // So we cloned a new style to avoid it affecting the original style in visual storage.\n        // TODO Better implementation. No empty logic!\n        symbolPath.useStyle(extend({}, symbolStyle));\n      } else {\n        symbolPath.useStyle(symbolStyle);\n      }\n      // Disable decal because symbol scale will been applied on the decal.\n      symbolPath.style.decal = null;\n      symbolPath.setColor(visualColor, opts && opts.symbolInnerColor);\n      symbolPath.style.strokeNoScale = true;\n    }\n    var liftZ = data.getItemVisual(idx, 'liftZ');\n    var z2Origin = this._z2;\n    if (liftZ != null) {\n      if (z2Origin == null) {\n        this._z2 = symbolPath.z2;\n        symbolPath.z2 += liftZ;\n      }\n    } else if (z2Origin != null) {\n      symbolPath.z2 = z2Origin;\n      this._z2 = null;\n    }\n    var useNameLabel = opts && opts.useNameLabel;\n    setLabelStyle(symbolPath, labelStatesModels, {\n      labelFetcher: seriesModel,\n      labelDataIndex: idx,\n      defaultText: getLabelDefaultText,\n      inheritColor: visualColor,\n      defaultOpacity: symbolStyle.opacity\n    });\n    // Do not execute util needed.\n    function getLabelDefaultText(idx) {\n      return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n    }\n    this._sizeX = symbolSize[0] / 2;\n    this._sizeY = symbolSize[1] / 2;\n    var emphasisState = symbolPath.ensureState('emphasis');\n    emphasisState.style = emphasisItemStyle;\n    symbolPath.ensureState('select').style = selectItemStyle;\n    symbolPath.ensureState('blur').style = blurItemStyle;\n    // null / undefined / true means to use default strategy.\n    // 0 / false / negative number / NaN / Infinity means no scale.\n    var scaleRatio = hoverScale == null || hoverScale === true ? Math.max(1.1, 3 / this._sizeY)\n    // PENDING: restrict hoverScale > 1? It seems unreasonable to scale down\n    : isFinite(hoverScale) && hoverScale > 0 ? +hoverScale : 1;\n    // always set scale to allow resetting\n    emphasisState.scaleX = this._sizeX * scaleRatio;\n    emphasisState.scaleY = this._sizeY * scaleRatio;\n    this.setSymbolScale(1);\n    toggleHoverEmphasis(this, focus, blurScope, emphasisDisabled);\n  };\n  Symbol.prototype.setSymbolScale = function (scale) {\n    this.scaleX = this.scaleY = scale;\n  };\n  Symbol.prototype.fadeOut = function (cb, seriesModel, opt) {\n    var symbolPath = this.childAt(0);\n    var dataIndex = getECData(this).dataIndex;\n    var animationOpt = opt && opt.animation;\n    // Avoid mistaken hover when fading out\n    this.silent = symbolPath.silent = true;\n    // Not show text when animating\n    if (opt && opt.fadeLabel) {\n      var textContent = symbolPath.getTextContent();\n      if (textContent) {\n        graphic.removeElement(textContent, {\n          style: {\n            opacity: 0\n          }\n        }, seriesModel, {\n          dataIndex: dataIndex,\n          removeOpt: animationOpt,\n          cb: function () {\n            symbolPath.removeTextContent();\n          }\n        });\n      }\n    } else {\n      symbolPath.removeTextContent();\n    }\n    graphic.removeElement(symbolPath, {\n      style: {\n        opacity: 0\n      },\n      scaleX: 0,\n      scaleY: 0\n    }, seriesModel, {\n      dataIndex: dataIndex,\n      cb: cb,\n      removeOpt: animationOpt\n    });\n  };\n  Symbol.getSymbolSize = function (data, idx) {\n    return normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n  };\n  return Symbol;\n}(graphic.Group);\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\nexport default Symbol;", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport * as graphic from '../../util/graphic.js';\nimport SymbolClz from './Symbol.js';\nimport { isObject } from 'zrender/lib/core/util.js';\nimport { getLabelStatesModels } from '../../label/labelStyle.js';\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx))\n  // We do not set clipShape on group, because it will cut part of\n  // the symbol element shape. We use the same clip shape here as\n  // the line clip.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n  return opt || {};\n}\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  var emphasisModel = seriesModel.getModel('emphasis');\n  return {\n    emphasisItemStyle: emphasisModel.getModel('itemStyle').getItemStyle(),\n    blurItemStyle: seriesModel.getModel(['blur', 'itemStyle']).getItemStyle(),\n    selectItemStyle: seriesModel.getModel(['select', 'itemStyle']).getItemStyle(),\n    focus: emphasisModel.get('focus'),\n    blurScope: emphasisModel.get('blurScope'),\n    emphasisDisabled: emphasisModel.get('disabled'),\n    hoverScale: emphasisModel.get('scale'),\n    labelStatesModels: getLabelStatesModels(seriesModel),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\nvar SymbolDraw = /** @class */function () {\n  function SymbolDraw(SymbolCtor) {\n    this.group = new graphic.Group();\n    this._SymbolCtor = SymbolCtor || SymbolClz;\n  }\n  /**\r\n   * Update symbols draw by new data\r\n   */\n  SymbolDraw.prototype.updateData = function (data, opt) {\n    // Remove progressive els.\n    this._progressiveEls = null;\n    opt = normalizeUpdateOpt(opt);\n    var group = this.group;\n    var seriesModel = data.hostModel;\n    var oldData = this._data;\n    var SymbolCtor = this._SymbolCtor;\n    var disableAnimation = opt.disableAnimation;\n    var seriesScope = makeSeriesScope(data);\n    var symbolUpdateOpt = {\n      disableAnimation: disableAnimation\n    };\n    var getSymbolPoint = opt.getSymbolPoint || function (idx) {\n      return data.getItemLayout(idx);\n    };\n    // There is no oldLineData only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n    if (!oldData) {\n      group.removeAll();\n    }\n    data.diff(oldData).add(function (newIdx) {\n      var point = getSymbolPoint(newIdx);\n      if (symbolNeedsDraw(data, point, newIdx, opt)) {\n        var symbolEl = new SymbolCtor(data, newIdx, seriesScope, symbolUpdateOpt);\n        symbolEl.setPosition(point);\n        data.setItemGraphicEl(newIdx, symbolEl);\n        group.add(symbolEl);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n      var point = getSymbolPoint(newIdx);\n      if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n        group.remove(symbolEl);\n        return;\n      }\n      var newSymbolType = data.getItemVisual(newIdx, 'symbol') || 'circle';\n      var oldSymbolType = symbolEl && symbolEl.getSymbolType && symbolEl.getSymbolType();\n      if (!symbolEl\n      // Create a new if symbol type changed.\n      || oldSymbolType && oldSymbolType !== newSymbolType) {\n        group.remove(symbolEl);\n        symbolEl = new SymbolCtor(data, newIdx, seriesScope, symbolUpdateOpt);\n        symbolEl.setPosition(point);\n      } else {\n        symbolEl.updateData(data, newIdx, seriesScope, symbolUpdateOpt);\n        var target = {\n          x: point[0],\n          y: point[1]\n        };\n        disableAnimation ? symbolEl.attr(target) : graphic.updateProps(symbolEl, target, seriesModel);\n      }\n      // Add back\n      group.add(symbolEl);\n      data.setItemGraphicEl(newIdx, symbolEl);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && el.fadeOut(function () {\n        group.remove(el);\n      }, seriesModel);\n    }).execute();\n    this._getSymbolPoint = getSymbolPoint;\n    this._data = data;\n  };\n  ;\n  SymbolDraw.prototype.updateLayout = function () {\n    var _this = this;\n    var data = this._data;\n    if (data) {\n      // Not use animation\n      data.eachItemGraphicEl(function (el, idx) {\n        var point = _this._getSymbolPoint(idx);\n        el.setPosition(point);\n        el.markRedraw();\n      });\n    }\n  };\n  ;\n  SymbolDraw.prototype.incrementalPrepareUpdate = function (data) {\n    this._seriesScope = makeSeriesScope(data);\n    this._data = null;\n    this.group.removeAll();\n  };\n  ;\n  /**\r\n   * Update symbols draw by new data\r\n   */\n  SymbolDraw.prototype.incrementalUpdate = function (taskParams, data, opt) {\n    // Clear\n    this._progressiveEls = [];\n    opt = normalizeUpdateOpt(opt);\n    function updateIncrementalAndHover(el) {\n      if (!el.isGroup) {\n        el.incremental = true;\n        el.ensureState('emphasis').hoverLayer = true;\n      }\n    }\n    for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n      var point = data.getItemLayout(idx);\n      if (symbolNeedsDraw(data, point, idx, opt)) {\n        var el = new this._SymbolCtor(data, idx, this._seriesScope);\n        el.traverse(updateIncrementalAndHover);\n        el.setPosition(point);\n        this.group.add(el);\n        data.setItemGraphicEl(idx, el);\n        this._progressiveEls.push(el);\n      }\n    }\n  };\n  ;\n  SymbolDraw.prototype.eachRendered = function (cb) {\n    graphic.traverseElements(this._progressiveEls || this.group, cb);\n  };\n  SymbolDraw.prototype.remove = function (enableAnimation) {\n    var group = this.group;\n    var data = this._data;\n    // Incremental model do not have this._data.\n    if (data && enableAnimation) {\n      data.eachItemGraphicEl(function (el) {\n        el.fadeOut(function () {\n          group.remove(el);\n        }, data.hostModel);\n      });\n    } else {\n      group.removeAll();\n    }\n  };\n  ;\n  return SymbolDraw;\n}();\nexport default SymbolDraw;", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { isDimensionStacked } from '../../data/helper/dataStackHelper.js';\nimport { isNumber, map } from 'zrender/lib/core/util.js';\nexport function prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var dims = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  var stacked = false;\n  var stackResultDim = data.getCalculationInfo('stackResultDimension');\n  if (isDimensionStacked(data, dims[0] /* , dims[1] */)) {\n    // jshint ignore:line\n    stacked = true;\n    dims[0] = stackResultDim;\n  }\n  if (isDimensionStacked(data, dims[1] /* , dims[0] */)) {\n    // jshint ignore:line\n    stacked = true;\n    dims[1] = stackResultDim;\n  }\n  return {\n    dataDimsForPoint: dims,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: !!stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  }\n  // If origin is specified as a number, use it as\n  // valueStart directly\n  else if (isNumber(valueOrigin) && !isNaN(valueOrigin)) {\n    valueStart = valueOrigin;\n  }\n  // auto\n  else {\n    // Both positive\n    if (extent[0] > 0) {\n      valueStart = extent[0];\n    }\n    // Both negative\n    else if (extent[1] < 0) {\n      valueStart = extent[1];\n    }\n    // If is one positive, and one negative, onZero shall be true\n  }\n  return valueStart;\n}\nexport function getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { prepareDataCoordInfo, getStackedOnPoint } from './helper.js';\nimport { createFloat32Array } from '../../util/vendor.js';\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\nexport default function lineAnimationDiff(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData);\n  // let newIdList = newData.mapArray(newData.getId);\n  // let oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n  var currPoints = [];\n  var nextPoints = [];\n  // Points for stacking base line\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\n  // const oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n  var oldPoints = oldData.getLayout('points') || [];\n  var newPoints = newData.getLayout('points') || [];\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true;\n    var oldIdx2 = void 0;\n    var newIdx2 = void 0;\n    // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n    switch (diffItem.cmd) {\n      case '=':\n        oldIdx2 = diffItem.idx * 2;\n        newIdx2 = diffItem.idx1 * 2;\n        var currentX = oldPoints[oldIdx2];\n        var currentY = oldPoints[oldIdx2 + 1];\n        var nextX = newPoints[newIdx2];\n        var nextY = newPoints[newIdx2 + 1];\n        // If previous data is NaN, use next point directly\n        if (isNaN(currentX) || isNaN(currentY)) {\n          currentX = nextX;\n          currentY = nextY;\n        }\n        currPoints.push(currentX, currentY);\n        nextPoints.push(nextX, nextY);\n        currStackedPoints.push(oldStackedOnPoints[oldIdx2], oldStackedOnPoints[oldIdx2 + 1]);\n        nextStackedPoints.push(newStackedOnPoints[newIdx2], newStackedOnPoints[newIdx2 + 1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n      case '+':\n        var newIdx = diffItem.idx;\n        var newDataDimsForPoint = newDataOldCoordInfo.dataDimsForPoint;\n        var oldPt = oldCoordSys.dataToPoint([newData.get(newDataDimsForPoint[0], newIdx), newData.get(newDataDimsForPoint[1], newIdx)]);\n        newIdx2 = newIdx * 2;\n        currPoints.push(oldPt[0], oldPt[1]);\n        nextPoints.push(newPoints[newIdx2], newPoints[newIdx2 + 1]);\n        var stackedOnPoint = getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, newIdx);\n        currStackedPoints.push(stackedOnPoint[0], stackedOnPoint[1]);\n        nextStackedPoints.push(newStackedOnPoints[newIdx2], newStackedOnPoints[newIdx2 + 1]);\n        rawIndices.push(newData.getRawIndex(newIdx));\n        break;\n      case '-':\n        pointAdded = false;\n    }\n    // Original indices\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  }\n  // Diff result may be crossed if all items are changed\n  // Sort by data index\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var len = currPoints.length;\n  var sortedCurrPoints = createFloat32Array(len);\n  var sortedNextPoints = createFloat32Array(len);\n  var sortedCurrStackedPoints = createFloat32Array(len);\n  var sortedNextStackedPoints = createFloat32Array(len);\n  var sortedStatus = [];\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    var i2 = i * 2;\n    var idx2 = idx * 2;\n    sortedCurrPoints[i2] = currPoints[idx2];\n    sortedCurrPoints[i2 + 1] = currPoints[idx2 + 1];\n    sortedNextPoints[i2] = nextPoints[idx2];\n    sortedNextPoints[i2 + 1] = nextPoints[idx2 + 1];\n    sortedCurrStackedPoints[i2] = currStackedPoints[idx2];\n    sortedCurrStackedPoints[i2 + 1] = currStackedPoints[idx2 + 1];\n    sortedNextStackedPoints[i2] = nextStackedPoints[idx2];\n    sortedNextStackedPoints[i2 + 1] = nextStackedPoints[idx2 + 1];\n    sortedStatus[i] = status[idx];\n  }\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\n// Poly path support NaN point\nimport Path from 'zrender/lib/graphic/Path.js';\nimport PathProxy from 'zrender/lib/core/PathProxy.js';\nimport { cubicRootAt, cubicAt } from 'zrender/lib/core/curve.js';\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nfunction isPointNull(x, y) {\n  return isNaN(x) || isNaN(y);\n}\n/**\r\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\r\n * situations. This should be used when points are non-monotone neither in x or\r\n * y dimension.\r\n */\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smooth, smoothMonotone, connectNulls) {\n  var prevX;\n  var prevY;\n  var cpx0;\n  var cpy0;\n  var cpx1;\n  var cpy1;\n  var idx = start;\n  var k = 0;\n  for (; k < segLen; k++) {\n    var x = points[idx * 2];\n    var y = points[idx * 2 + 1];\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n    if (isPointNull(x, y)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n      break;\n    }\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](x, y);\n      cpx0 = x;\n      cpy0 = y;\n    } else {\n      var dx = x - prevX;\n      var dy = y - prevY;\n      // Ignore tiny segment.\n      if (dx * dx + dy * dy < 0.5) {\n        idx += dir;\n        continue;\n      }\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextX = points[nextIdx * 2];\n        var nextY = points[nextIdx * 2 + 1];\n        // Ignore duplicate point\n        while (nextX === x && nextY === y && k < segLen) {\n          k++;\n          nextIdx += dir;\n          idx += dir;\n          nextX = points[nextIdx * 2];\n          nextY = points[nextIdx * 2 + 1];\n          x = points[idx * 2];\n          y = points[idx * 2 + 1];\n          dx = x - prevX;\n          dy = y - prevY;\n        }\n        var tmpK = k + 1;\n        if (connectNulls) {\n          // Find next point not null\n          while (isPointNull(nextX, nextY) && tmpK < segLen) {\n            tmpK++;\n            nextIdx += dir;\n            nextX = points[nextIdx * 2];\n            nextY = points[nextIdx * 2 + 1];\n          }\n        }\n        var ratioNextSeg = 0.5;\n        var vx = 0;\n        var vy = 0;\n        var nextCpx0 = void 0;\n        var nextCpy0 = void 0;\n        // Is last point\n        if (tmpK >= segLen || isPointNull(nextX, nextY)) {\n          cpx1 = x;\n          cpy1 = y;\n        } else {\n          vx = nextX - prevX;\n          vy = nextY - prevY;\n          var dx0 = x - prevX;\n          var dx1 = nextX - x;\n          var dy0 = y - prevY;\n          var dy1 = nextY - y;\n          var lenPrevSeg = void 0;\n          var lenNextSeg = void 0;\n          if (smoothMonotone === 'x') {\n            lenPrevSeg = Math.abs(dx0);\n            lenNextSeg = Math.abs(dx1);\n            var dir_1 = vx > 0 ? 1 : -1;\n            cpx1 = x - dir_1 * lenPrevSeg * smooth;\n            cpy1 = y;\n            nextCpx0 = x + dir_1 * lenNextSeg * smooth;\n            nextCpy0 = y;\n          } else if (smoothMonotone === 'y') {\n            lenPrevSeg = Math.abs(dy0);\n            lenNextSeg = Math.abs(dy1);\n            var dir_2 = vy > 0 ? 1 : -1;\n            cpx1 = x;\n            cpy1 = y - dir_2 * lenPrevSeg * smooth;\n            nextCpx0 = x;\n            nextCpy0 = y + dir_2 * lenNextSeg * smooth;\n          } else {\n            lenPrevSeg = Math.sqrt(dx0 * dx0 + dy0 * dy0);\n            lenNextSeg = Math.sqrt(dx1 * dx1 + dy1 * dy1);\n            // Use ratio of seg length\n            ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n            cpx1 = x - vx * smooth * (1 - ratioNextSeg);\n            cpy1 = y - vy * smooth * (1 - ratioNextSeg);\n            // cp0 of next segment\n            nextCpx0 = x + vx * smooth * ratioNextSeg;\n            nextCpy0 = y + vy * smooth * ratioNextSeg;\n            // Smooth constraint between point and next point.\n            // Avoid exceeding extreme after smoothing.\n            nextCpx0 = mathMin(nextCpx0, mathMax(nextX, x));\n            nextCpy0 = mathMin(nextCpy0, mathMax(nextY, y));\n            nextCpx0 = mathMax(nextCpx0, mathMin(nextX, x));\n            nextCpy0 = mathMax(nextCpy0, mathMin(nextY, y));\n            // Reclaculate cp1 based on the adjusted cp0 of next seg.\n            vx = nextCpx0 - x;\n            vy = nextCpy0 - y;\n            cpx1 = x - vx * lenPrevSeg / lenNextSeg;\n            cpy1 = y - vy * lenPrevSeg / lenNextSeg;\n            // Smooth constraint between point and prev point.\n            // Avoid exceeding extreme after smoothing.\n            cpx1 = mathMin(cpx1, mathMax(prevX, x));\n            cpy1 = mathMin(cpy1, mathMax(prevY, y));\n            cpx1 = mathMax(cpx1, mathMin(prevX, x));\n            cpy1 = mathMax(cpy1, mathMin(prevY, y));\n            // Adjust next cp0 again.\n            vx = x - cpx1;\n            vy = y - cpy1;\n            nextCpx0 = x + vx * lenNextSeg / lenPrevSeg;\n            nextCpy0 = y + vy * lenNextSeg / lenPrevSeg;\n          }\n        }\n        ctx.bezierCurveTo(cpx0, cpy0, cpx1, cpy1, x, y);\n        cpx0 = nextCpx0;\n        cpy0 = nextCpy0;\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n    prevX = x;\n    prevY = y;\n    idx += dir;\n  }\n  return k;\n}\nvar ECPolylineShape = /** @class */function () {\n  function ECPolylineShape() {\n    this.smooth = 0;\n    this.smoothConstraint = true;\n  }\n  return ECPolylineShape;\n}();\nvar ECPolyline = /** @class */function (_super) {\n  __extends(ECPolyline, _super);\n  function ECPolyline(opts) {\n    var _this = _super.call(this, opts) || this;\n    _this.type = 'ec-polyline';\n    return _this;\n  }\n  ECPolyline.prototype.getDefaultStyle = function () {\n    return {\n      stroke: '#000',\n      fill: null\n    };\n  };\n  ECPolyline.prototype.getDefaultShape = function () {\n    return new ECPolylineShape();\n  };\n  ECPolyline.prototype.buildPath = function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length / 2;\n    // const result = getBoundingBox(points, shape.smoothConstraint);\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len * 2 - 2], points[len * 2 - 1])) {\n          break;\n        }\n      }\n      for (; i < len; i++) {\n        if (!isPointNull(points[i * 2], points[i * 2 + 1])) {\n          break;\n        }\n      }\n    }\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  };\n  ECPolyline.prototype.getPointOn = function (xOrY, dim) {\n    if (!this.path) {\n      this.createPathProxy();\n      this.buildPath(this.path, this.shape);\n    }\n    var path = this.path;\n    var data = path.data;\n    var CMD = PathProxy.CMD;\n    var x0;\n    var y0;\n    var isDimX = dim === 'x';\n    var roots = [];\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n      var x = void 0;\n      var y = void 0;\n      var x2 = void 0;\n      var y2 = void 0;\n      var x3 = void 0;\n      var y3 = void 0;\n      var t = void 0;\n      switch (cmd) {\n        case CMD.M:\n          x0 = data[i++];\n          y0 = data[i++];\n          break;\n        case CMD.L:\n          x = data[i++];\n          y = data[i++];\n          t = isDimX ? (xOrY - x0) / (x - x0) : (xOrY - y0) / (y - y0);\n          if (t <= 1 && t >= 0) {\n            var val = isDimX ? (y - y0) * t + y0 : (x - x0) * t + x0;\n            return isDimX ? [xOrY, val] : [val, xOrY];\n          }\n          x0 = x;\n          y0 = y;\n          break;\n        case CMD.C:\n          x = data[i++];\n          y = data[i++];\n          x2 = data[i++];\n          y2 = data[i++];\n          x3 = data[i++];\n          y3 = data[i++];\n          var nRoot = isDimX ? cubicRootAt(x0, x, x2, x3, xOrY, roots) : cubicRootAt(y0, y, y2, y3, xOrY, roots);\n          if (nRoot > 0) {\n            for (var i_1 = 0; i_1 < nRoot; i_1++) {\n              var t_1 = roots[i_1];\n              if (t_1 <= 1 && t_1 >= 0) {\n                var val = isDimX ? cubicAt(y0, y, y2, y3, t_1) : cubicAt(x0, x, x2, x3, t_1);\n                return isDimX ? [xOrY, val] : [val, xOrY];\n              }\n            }\n          }\n          x0 = x3;\n          y0 = y3;\n          break;\n      }\n    }\n  };\n  return ECPolyline;\n}(Path);\nexport { ECPolyline };\nvar ECPolygonShape = /** @class */function (_super) {\n  __extends(ECPolygonShape, _super);\n  function ECPolygonShape() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  return ECPolygonShape;\n}(ECPolylineShape);\nvar ECPolygon = /** @class */function (_super) {\n  __extends(ECPolygon, _super);\n  function ECPolygon(opts) {\n    var _this = _super.call(this, opts) || this;\n    _this.type = 'ec-polygon';\n    return _this;\n  }\n  ECPolygon.prototype.getDefaultShape = function () {\n    return new ECPolygonShape();\n  };\n  ECPolygon.prototype.buildPath = function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length / 2;\n    var smoothMonotone = shape.smoothMonotone;\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len * 2 - 2], points[len * 2 - 1])) {\n          break;\n        }\n      }\n      for (; i < len; i++) {\n        if (!isPointNull(points[i * 2], points[i * 2 + 1])) {\n          break;\n        }\n      }\n    }\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  };\n  return ECPolygon;\n}(Path);\nexport { ECPolygon };", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\n// FIXME step not support polar\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport SymbolDraw from '../helper/SymbolDraw.js';\nimport SymbolClz from '../helper/Symbol.js';\nimport lineAnimationDiff from './lineAnimationDiff.js';\nimport * as graphic from '../../util/graphic.js';\nimport * as modelUtil from '../../util/model.js';\nimport { ECPolyline, ECPolygon } from './poly.js';\nimport ChartView from '../../view/Chart.js';\nimport { prepareDataCoordInfo, getStackedOnPoint } from './helper.js';\nimport { createGridClipPath, createPolarClipPath } from '../helper/createClipPathFromCoordSys.js';\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem.js';\nimport { setStatesStylesFromModel, setStatesFlag, toggleHoverEmphasis, SPECIAL_STATES } from '../../util/states.js';\nimport { setLabelStyle, getLabelStatesModels, labelInner } from '../../label/labelStyle.js';\nimport { getDefaultLabel, getDefaultInterpolatedLabel } from '../helper/labelHelper.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { createFloat32Array } from '../../util/vendor.js';\nimport { convertToColorString } from '../../util/format.js';\nimport { lerp } from 'zrender/lib/tool/color.js';\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n  for (var i = 0; i < points1.length; i++) {\n    if (points1[i] !== points2[i]) {\n      return;\n    }\n  }\n  return true;\n}\nfunction bboxFromPoints(points) {\n  var minX = Infinity;\n  var minY = Infinity;\n  var maxX = -Infinity;\n  var maxY = -Infinity;\n  for (var i = 0; i < points.length;) {\n    var x = points[i++];\n    var y = points[i++];\n    if (!isNaN(x)) {\n      minX = Math.min(x, minX);\n      maxX = Math.max(x, maxX);\n    }\n    if (!isNaN(y)) {\n      minY = Math.min(y, minY);\n      maxY = Math.max(y, maxY);\n    }\n  }\n  return [[minX, minY], [maxX, maxY]];\n}\nfunction getBoundingDiff(points1, points2) {\n  var _a = bboxFromPoints(points1),\n    min1 = _a[0],\n    max1 = _a[1];\n  var _b = bboxFromPoints(points2),\n    min2 = _b[0],\n    max2 = _b[1];\n  // Get a max value from each corner of two boundings.\n  return Math.max(Math.abs(min1[0] - min2[0]), Math.abs(min1[1] - min2[1]), Math.abs(max1[0] - max2[0]), Math.abs(max1[1] - max2[1]));\n}\nfunction getSmooth(smooth) {\n  return zrUtil.isNumber(smooth) ? smooth : smooth ? 0.5 : 0;\n}\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n  var len = data.count();\n  var points = createFloat32Array(len * 2);\n  for (var idx = 0; idx < len; idx++) {\n    var pt = getStackedOnPoint(dataCoordInfo, coordSys, data, idx);\n    points[idx * 2] = pt[0];\n    points[idx * 2 + 1] = pt[1];\n  }\n  return points;\n}\n/**\r\n * Filter the null data and extend data for step considering `stepTurnAt`\r\n *\r\n * @param points data to convert, that may containing null\r\n * @param basePoints base data to reference, used only for areaStyle points\r\n * @param coordSys coordinate system\r\n * @param stepTurnAt 'start' | 'end' | 'middle' | true\r\n * @param connectNulls whether to connect nulls\r\n * @returns converted point positions\r\n */\nfunction turnPointsIntoStep(points, basePoints, coordSys, stepTurnAt, connectNulls) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n  var i = 0;\n  var stepPt = [];\n  var pt = [];\n  var nextPt = [];\n  var filteredPoints = [];\n  if (connectNulls) {\n    for (i = 0; i < points.length; i += 2) {\n      /**\r\n       * For areaStyle of stepped lines, `stackedOnPoints` should be\r\n       * filtered the same as `points` so that the base axis values\r\n       * should stay the same as the lines above. See #20021\r\n       */\n      var reference = basePoints || points;\n      if (!isNaN(reference[i]) && !isNaN(reference[i + 1])) {\n        filteredPoints.push(points[i], points[i + 1]);\n      }\n    }\n    points = filteredPoints;\n  }\n  for (i = 0; i < points.length - 2; i += 2) {\n    nextPt[0] = points[i + 2];\n    nextPt[1] = points[i + 3];\n    pt[0] = points[i];\n    pt[1] = points[i + 1];\n    stepPoints.push(pt[0], pt[1]);\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n        break;\n      case 'middle':\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n        stepPoints.push(stepPt2[0], stepPt2[1]);\n        break;\n      default:\n        // default is start\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt[0], stepPt[1]);\n    }\n  }\n  // Last points\n  stepPoints.push(points[i++], points[i++]);\n  return stepPoints;\n}\n/**\r\n * Clip color stops to edge. Avoid creating too large gradients.\r\n * Which may lead to blurry when GPU acceleration is enabled. See #15680\r\n *\r\n * The stops has been sorted from small to large.\r\n */\nfunction clipColorStops(colorStops, maxSize) {\n  var newColorStops = [];\n  var len = colorStops.length;\n  // coord will always < 0 in prevOutOfRangeColorStop.\n  var prevOutOfRangeColorStop;\n  var prevInRangeColorStop;\n  function lerpStop(stop0, stop1, clippedCoord) {\n    var coord0 = stop0.coord;\n    var p = (clippedCoord - coord0) / (stop1.coord - coord0);\n    var color = lerp(p, [stop0.color, stop1.color]);\n    return {\n      coord: clippedCoord,\n      color: color\n    };\n  }\n  for (var i = 0; i < len; i++) {\n    var stop_1 = colorStops[i];\n    var coord = stop_1.coord;\n    if (coord < 0) {\n      prevOutOfRangeColorStop = stop_1;\n    } else if (coord > maxSize) {\n      if (prevInRangeColorStop) {\n        newColorStops.push(lerpStop(prevInRangeColorStop, stop_1, maxSize));\n      } else if (prevOutOfRangeColorStop) {\n        // If there are two stops and coord range is between these two stops\n        newColorStops.push(lerpStop(prevOutOfRangeColorStop, stop_1, 0), lerpStop(prevOutOfRangeColorStop, stop_1, maxSize));\n      }\n      // All following stop will be out of range. So just ignore them.\n      break;\n    } else {\n      if (prevOutOfRangeColorStop) {\n        newColorStops.push(lerpStop(prevOutOfRangeColorStop, stop_1, 0));\n        // Reset\n        prevOutOfRangeColorStop = null;\n      }\n      newColorStops.push(stop_1);\n      prevInRangeColorStop = stop_1;\n    }\n  }\n  return newColorStops;\n}\nfunction getVisualGradient(data, coordSys, api) {\n  var visualMetaList = data.getVisual('visualMeta');\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n  if (coordSys.type !== 'cartesian2d') {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Visual map on line style is only supported on cartesian2d.');\n    }\n    return;\n  }\n  var coordDim;\n  var visualMeta;\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimInfo = data.getDimensionInfo(visualMetaList[i].dimension);\n    coordDim = dimInfo && dimInfo.coordDim;\n    // Can only be x or y\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n  if (!visualMeta) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Visual map on line style only support x or y dimension.');\n    }\n    return;\n  }\n  // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n  var axis = coordSys.getAxis(coordDim);\n  // dataToCoord mapping may not be linear, but must be monotonic.\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    // offset will be calculated later.\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n  var colorStopsInRange = clipColorStops(colorStops, coordDim === 'x' ? api.getWidth() : api.getHeight());\n  var inRangeStopLen = colorStopsInRange.length;\n  if (!inRangeStopLen && stopLen) {\n    // All stops are out of range. All will be the same color.\n    return colorStops[0].coord < 0 ? outerColors[1] ? outerColors[1] : colorStops[stopLen - 1].color : outerColors[0] ? outerColors[0] : colorStops[0].color;\n  }\n  var tinyExtent = 10; // Arbitrary value: 10px\n  var minCoord = colorStopsInRange[0].coord - tinyExtent;\n  var maxCoord = colorStopsInRange[inRangeStopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n  zrUtil.each(colorStopsInRange, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStopsInRange.push({\n    // NOTE: inRangeStopLen may still be 0 if stoplen is zero.\n    offset: inRangeStopLen ? colorStopsInRange[inRangeStopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStopsInRange.unshift({\n    offset: inRangeStopLen ? colorStopsInRange[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  });\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStopsInRange, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n  if (!categoryAxis) {\n    return;\n  }\n  // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n  if (isAuto\n  // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  }\n  // Otherwise follow the label interval strategy on category axis.\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    var ordinalNumber = categoryAxis.scale.getRawOrdinalNumber(labelItem.tickValue);\n    labelMap[ordinalNumber] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In most cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex\n    // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0]\n    // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPointNull(x, y) {\n  return isNaN(x) || isNaN(y);\n}\nfunction getLastIndexNotNull(points) {\n  var len = points.length / 2;\n  for (; len > 0; len--) {\n    if (!isPointNull(points[len * 2 - 2], points[len * 2 - 1])) {\n      break;\n    }\n  }\n  return len - 1;\n}\nfunction getPointAtIndex(points, idx) {\n  return [points[idx * 2], points[idx * 2 + 1]];\n}\nfunction getIndexRange(points, xOrY, dim) {\n  var len = points.length / 2;\n  var dimIdx = dim === 'x' ? 0 : 1;\n  var a;\n  var b;\n  var prevIndex = 0;\n  var nextIndex = -1;\n  for (var i = 0; i < len; i++) {\n    b = points[i * 2 + dimIdx];\n    if (isNaN(b) || isNaN(points[i * 2 + 1 - dimIdx])) {\n      continue;\n    }\n    if (i === 0) {\n      a = b;\n      continue;\n    }\n    if (a <= xOrY && b >= xOrY || a >= xOrY && b <= xOrY) {\n      nextIndex = i;\n      break;\n    }\n    prevIndex = i;\n    a = b;\n  }\n  return {\n    range: [prevIndex, nextIndex],\n    t: (xOrY - a) / (b - a)\n  };\n}\nfunction anyStateShowEndLabel(seriesModel) {\n  if (seriesModel.get(['endLabel', 'show'])) {\n    return true;\n  }\n  for (var i = 0; i < SPECIAL_STATES.length; i++) {\n    if (seriesModel.get([SPECIAL_STATES[i], 'endLabel', 'show'])) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction createLineClipPath(lineView, coordSys, hasAnimation, seriesModel) {\n  if (isCoordinateSystemType(coordSys, 'cartesian2d')) {\n    var endLabelModel_1 = seriesModel.getModel('endLabel');\n    var valueAnimation_1 = endLabelModel_1.get('valueAnimation');\n    var data_1 = seriesModel.getData();\n    var labelAnimationRecord_1 = {\n      lastFrameIndex: 0\n    };\n    var during = anyStateShowEndLabel(seriesModel) ? function (percent, clipRect) {\n      lineView._endLabelOnDuring(percent, clipRect, data_1, labelAnimationRecord_1, valueAnimation_1, endLabelModel_1, coordSys);\n    } : null;\n    var isHorizontal = coordSys.getBaseAxis().isHorizontal();\n    var clipPath = createGridClipPath(coordSys, hasAnimation, seriesModel, function () {\n      var endLabel = lineView._endLabel;\n      if (endLabel && hasAnimation) {\n        if (labelAnimationRecord_1.originalX != null) {\n          endLabel.attr({\n            x: labelAnimationRecord_1.originalX,\n            y: labelAnimationRecord_1.originalY\n          });\n        }\n      }\n    }, during);\n    // Expand clip shape to avoid clipping when line value exceeds axis\n    if (!seriesModel.get('clip', true)) {\n      var rectShape = clipPath.shape;\n      var expandSize = Math.max(rectShape.width, rectShape.height);\n      if (isHorizontal) {\n        rectShape.y -= expandSize;\n        rectShape.height += expandSize * 2;\n      } else {\n        rectShape.x -= expandSize;\n        rectShape.width += expandSize * 2;\n      }\n    }\n    // Set to the final frame. To make sure label layout is right.\n    if (during) {\n      during(1, clipPath);\n    }\n    return clipPath;\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      if (seriesModel.get(['endLabel', 'show'])) {\n        console.warn('endLabel is not supported for lines in polar systems.');\n      }\n    }\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\n  }\n}\nfunction getEndLabelStateSpecified(endLabelModel, coordSys) {\n  var baseAxis = coordSys.getBaseAxis();\n  var isHorizontal = baseAxis.isHorizontal();\n  var isBaseInversed = baseAxis.inverse;\n  var align = isHorizontal ? isBaseInversed ? 'right' : 'left' : 'center';\n  var verticalAlign = isHorizontal ? 'middle' : isBaseInversed ? 'top' : 'bottom';\n  return {\n    normal: {\n      align: endLabelModel.get('align') || align,\n      verticalAlign: endLabelModel.get('verticalAlign') || verticalAlign\n    }\n  };\n}\nvar LineView = /** @class */function (_super) {\n  __extends(LineView, _super);\n  function LineView() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  LineView.prototype.init = function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n    this._changePolyState = zrUtil.bind(this._changePolyState, this);\n  };\n  LineView.prototype.render = function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.getLayout('points') || [];\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = !ecModel.ssr && seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = isAreaChart && getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var connectNulls = seriesModel.get('connectNulls');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys);\n    // Remove temporary symbols\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    // Remove previous created symbols if showSymbol changed to false\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n    group.add(lineGroup);\n    // FIXME step not support polar\n    var step = !isCoordSysPolar ? seriesModel.get('step') : false;\n    var clipShapeForSymbol;\n    if (coordSys && coordSys.getArea && seriesModel.get('clip', true)) {\n      clipShapeForSymbol = coordSys.getArea();\n      // Avoid float number rounding error for symbol on the edge of axis extent.\n      // See #7913 and `test/dataZoom-clip.html`.\n      if (clipShapeForSymbol.width != null) {\n        clipShapeForSymbol.x -= 0.1;\n        clipShapeForSymbol.y -= 0.1;\n        clipShapeForSymbol.width += 0.2;\n        clipShapeForSymbol.height += 0.2;\n      } else if (clipShapeForSymbol.r0) {\n        clipShapeForSymbol.r0 -= 0.5;\n        clipShapeForSymbol.r += 0.5;\n      }\n    }\n    this._clipShapeForSymbol = clipShapeForSymbol;\n    var visualColor = getVisualGradient(data, coordSys, api) || data.getVisual('style')[data.getVisual('drawType')];\n    // Initialization animation or coordinate system changed\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol,\n        disableAnimation: true,\n        getSymbolPoint: function (idx) {\n          return [points[idx * 2], points[idx * 2 + 1]];\n        }\n      });\n      hasAnimation && this._initSymbolLabelAnimation(data, coordSys, clipShapeForSymbol);\n      if (step) {\n        if (stackedOnPoints) {\n          stackedOnPoints = turnPointsIntoStep(stackedOnPoints, points, coordSys, step, connectNulls);\n        }\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, null, coordSys, step, connectNulls);\n      }\n      polyline = this._newPolyline(points);\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints);\n      } // If areaStyle is removed\n      else if (polygon) {\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      }\n      // NOTE: Must update _endLabel before setClipPath.\n      if (!isCoordSysPolar) {\n        this._initOrUpdateEndLabel(seriesModel, coordSys, convertToColorString(visualColor));\n      }\n      lineGroup.setClipPath(createLineClipPath(this, coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      }\n      // NOTE: Must update _endLabel before setClipPath.\n      if (!isCoordSysPolar) {\n        this._initOrUpdateEndLabel(seriesModel, coordSys, convertToColorString(visualColor));\n      }\n      // Update clipPath\n      var oldClipPath = lineGroup.getClipPath();\n      if (oldClipPath) {\n        var newClipPath = createLineClipPath(this, coordSys, false, seriesModel);\n        graphic.initProps(oldClipPath, {\n          shape: newClipPath.shape\n        }, seriesModel);\n      } else {\n        lineGroup.setClipPath(createLineClipPath(this, coordSys, true, seriesModel));\n      }\n      // Always update, or it is wrong in the case turning on legend\n      // because points are not changed.\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol,\n        disableAnimation: true,\n        getSymbolPoint: function (idx) {\n          return [points[idx * 2], points[idx * 2 + 1]];\n        }\n      });\n      // In the case data zoom triggered refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing.\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._doUpdateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin, connectNulls);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            if (stackedOnPoints) {\n              stackedOnPoints = turnPointsIntoStep(stackedOnPoints, points, coordSys, step, connectNulls);\n            }\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, null, coordSys, step, connectNulls);\n          }\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n    var emphasisModel = seriesModel.getModel('emphasis');\n    var focus = emphasisModel.get('focus');\n    var blurScope = emphasisModel.get('blurScope');\n    var emphasisDisabled = emphasisModel.get('disabled');\n    polyline.useStyle(zrUtil.defaults(\n    // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    setStatesStylesFromModel(polyline, seriesModel, 'lineStyle');\n    if (polyline.style.lineWidth > 0 && seriesModel.get(['emphasis', 'lineStyle', 'width']) === 'bolder') {\n      var emphasisLineStyle = polyline.getState('emphasis').style;\n      emphasisLineStyle.lineWidth = +polyline.style.lineWidth + 1;\n    }\n    // Needs seriesIndex for focus\n    getECData(polyline).seriesIndex = seriesModel.seriesIndex;\n    toggleHoverEmphasis(polyline, focus, blurScope, emphasisDisabled);\n    var smooth = getSmooth(seriesModel.get('smooth'));\n    var smoothMonotone = seriesModel.get('smoothMonotone');\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: smoothMonotone,\n      connectNulls: connectNulls\n    });\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel',\n        decal: data.getVisual('style').decal\n      }));\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: smoothMonotone,\n        connectNulls: connectNulls\n      });\n      setStatesStylesFromModel(polygon, seriesModel, 'areaStyle');\n      // Needs seriesIndex for focus\n      getECData(polygon).seriesIndex = seriesModel.seriesIndex;\n      toggleHoverEmphasis(polygon, focus, blurScope, emphasisDisabled);\n    }\n    var changePolyState = this._changePolyState;\n    data.eachItemGraphicEl(function (el) {\n      // Switch polyline / polygon state if element changed its state.\n      el && (el.onHoverStateChange = changePolyState);\n    });\n    this._polyline.onHoverStateChange = changePolyState;\n    this._data = data;\n    // Save the coordinate system for transition animation when data changed\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n    if (seriesModel.get('triggerLineEvent')) {\n      this.packEventData(seriesModel, polyline);\n      polygon && this.packEventData(seriesModel, polygon);\n    }\n  };\n  LineView.prototype.packEventData = function (seriesModel, el) {\n    getECData(el).eventData = {\n      componentType: 'series',\n      componentSubType: 'line',\n      componentIndex: seriesModel.componentIndex,\n      seriesIndex: seriesModel.seriesIndex,\n      seriesName: seriesModel.name,\n      seriesType: 'line'\n    };\n  };\n  LineView.prototype.highlight = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n    this._changePolyState('emphasis');\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var points = data.getLayout('points');\n      var symbol = data.getItemGraphicEl(dataIndex);\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var x = points[dataIndex * 2];\n        var y = points[dataIndex * 2 + 1];\n        if (isNaN(x) || isNaN(y)) {\n          // Null data\n          return;\n        }\n        // fix #11360: shouldn't draw symbol outside clipShapeForSymbol\n        if (this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(x, y)) {\n          return;\n        }\n        var zlevel = seriesModel.get('zlevel') || 0;\n        var z = seriesModel.get('z') || 0;\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.x = x;\n        symbol.y = y;\n        symbol.setZ(zlevel, z);\n        // ensure label text of the temporary symbol is in front of line and area polygon\n        var symbolLabel = symbol.getSymbolPath().getTextContent();\n        if (symbolLabel) {\n          symbolLabel.zlevel = zlevel;\n          symbolLabel.z = z;\n          symbolLabel.z2 = this._polyline.z2 + 1;\n        }\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol);\n        // Stop scale animation\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  };\n  LineView.prototype.downplay = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n    this._changePolyState('normal');\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  };\n  LineView.prototype._changePolyState = function (toState) {\n    var polygon = this._polygon;\n    setStatesFlag(this._polyline, toState);\n    polygon && setStatesFlag(polygon, toState);\n  };\n  LineView.prototype._newPolyline = function (points) {\n    var polyline = this._polyline;\n    // Remove previous created polyline\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n    polyline = new ECPolyline({\n      shape: {\n        points: points\n      },\n      segmentIgnoreThreshold: 2,\n      z2: 10\n    });\n    this._lineGroup.add(polyline);\n    this._polyline = polyline;\n    return polyline;\n  };\n  LineView.prototype._newPolygon = function (points, stackedOnPoints) {\n    var polygon = this._polygon;\n    // Remove previous created polygon\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n    polygon = new ECPolygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      segmentIgnoreThreshold: 2\n    });\n    this._lineGroup.add(polygon);\n    this._polygon = polygon;\n    return polygon;\n  };\n  LineView.prototype._initSymbolLabelAnimation = function (data, coordSys, clipShape) {\n    var isHorizontalOrRadial;\n    var isCoordSysPolar;\n    var baseAxis = coordSys.getBaseAxis();\n    var isAxisInverse = baseAxis.inverse;\n    if (coordSys.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n      isCoordSysPolar = false;\n    } else if (coordSys.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n      isCoordSysPolar = true;\n    }\n    var seriesModel = data.hostModel;\n    var seriesDuration = seriesModel.get('animationDuration');\n    if (zrUtil.isFunction(seriesDuration)) {\n      seriesDuration = seriesDuration(null);\n    }\n    var seriesDelay = seriesModel.get('animationDelay') || 0;\n    var seriesDelayValue = zrUtil.isFunction(seriesDelay) ? seriesDelay(null) : seriesDelay;\n    data.eachItemGraphicEl(function (symbol, idx) {\n      var el = symbol;\n      if (el) {\n        var point = [symbol.x, symbol.y];\n        var start = void 0;\n        var end = void 0;\n        var current = void 0;\n        if (clipShape) {\n          if (isCoordSysPolar) {\n            var polarClip = clipShape;\n            var coord = coordSys.pointToCoord(point);\n            if (isHorizontalOrRadial) {\n              start = polarClip.startAngle;\n              end = polarClip.endAngle;\n              current = -coord[1] / 180 * Math.PI;\n            } else {\n              start = polarClip.r0;\n              end = polarClip.r;\n              current = coord[0];\n            }\n          } else {\n            var gridClip = clipShape;\n            if (isHorizontalOrRadial) {\n              start = gridClip.x;\n              end = gridClip.x + gridClip.width;\n              current = symbol.x;\n            } else {\n              start = gridClip.y + gridClip.height;\n              end = gridClip.y;\n              current = symbol.y;\n            }\n          }\n        }\n        var ratio = end === start ? 0 : (current - start) / (end - start);\n        if (isAxisInverse) {\n          ratio = 1 - ratio;\n        }\n        var delay = zrUtil.isFunction(seriesDelay) ? seriesDelay(idx) : seriesDuration * ratio + seriesDelayValue;\n        var symbolPath = el.getSymbolPath();\n        var text = symbolPath.getTextContent();\n        el.attr({\n          scaleX: 0,\n          scaleY: 0\n        });\n        el.animateTo({\n          scaleX: 1,\n          scaleY: 1\n        }, {\n          duration: 200,\n          setToFinal: true,\n          delay: delay\n        });\n        if (text) {\n          text.animateFrom({\n            style: {\n              opacity: 0\n            }\n          }, {\n            duration: 300,\n            delay: delay\n          });\n        }\n        symbolPath.disableLabelAnimation = true;\n      }\n    });\n  };\n  LineView.prototype._initOrUpdateEndLabel = function (seriesModel, coordSys, inheritColor) {\n    var endLabelModel = seriesModel.getModel('endLabel');\n    if (anyStateShowEndLabel(seriesModel)) {\n      var data_2 = seriesModel.getData();\n      var polyline = this._polyline;\n      // series may be filtered.\n      var points = data_2.getLayout('points');\n      if (!points) {\n        polyline.removeTextContent();\n        this._endLabel = null;\n        return;\n      }\n      var endLabel = this._endLabel;\n      if (!endLabel) {\n        endLabel = this._endLabel = new graphic.Text({\n          z2: 200 // should be higher than item symbol\n        });\n        endLabel.ignoreClip = true;\n        polyline.setTextContent(this._endLabel);\n        polyline.disableLabelAnimation = true;\n      }\n      // Find last non-NaN data to display data\n      var dataIndex = getLastIndexNotNull(points);\n      if (dataIndex >= 0) {\n        setLabelStyle(polyline, getLabelStatesModels(seriesModel, 'endLabel'), {\n          inheritColor: inheritColor,\n          labelFetcher: seriesModel,\n          labelDataIndex: dataIndex,\n          defaultText: function (dataIndex, opt, interpolatedValue) {\n            return interpolatedValue != null ? getDefaultInterpolatedLabel(data_2, interpolatedValue) : getDefaultLabel(data_2, dataIndex);\n          },\n          enableTextSetter: true\n        }, getEndLabelStateSpecified(endLabelModel, coordSys));\n        polyline.textConfig.position = null;\n      }\n    } else if (this._endLabel) {\n      this._polyline.removeTextContent();\n      this._endLabel = null;\n    }\n  };\n  LineView.prototype._endLabelOnDuring = function (percent, clipRect, data, animationRecord, valueAnimation, endLabelModel, coordSys) {\n    var endLabel = this._endLabel;\n    var polyline = this._polyline;\n    if (endLabel) {\n      // NOTE: Don't remove percent < 1. percent === 1 means the first frame during render.\n      // The label is not prepared at this time.\n      if (percent < 1 && animationRecord.originalX == null) {\n        animationRecord.originalX = endLabel.x;\n        animationRecord.originalY = endLabel.y;\n      }\n      var points = data.getLayout('points');\n      var seriesModel = data.hostModel;\n      var connectNulls = seriesModel.get('connectNulls');\n      var precision = endLabelModel.get('precision');\n      var distance = endLabelModel.get('distance') || 0;\n      var baseAxis = coordSys.getBaseAxis();\n      var isHorizontal = baseAxis.isHorizontal();\n      var isBaseInversed = baseAxis.inverse;\n      var clipShape = clipRect.shape;\n      var xOrY = isBaseInversed ? isHorizontal ? clipShape.x : clipShape.y + clipShape.height : isHorizontal ? clipShape.x + clipShape.width : clipShape.y;\n      var distanceX = (isHorizontal ? distance : 0) * (isBaseInversed ? -1 : 1);\n      var distanceY = (isHorizontal ? 0 : -distance) * (isBaseInversed ? -1 : 1);\n      var dim = isHorizontal ? 'x' : 'y';\n      var dataIndexRange = getIndexRange(points, xOrY, dim);\n      var indices = dataIndexRange.range;\n      var diff = indices[1] - indices[0];\n      var value = void 0;\n      if (diff >= 1) {\n        // diff > 1 && connectNulls, which is on the null data.\n        if (diff > 1 && !connectNulls) {\n          var pt = getPointAtIndex(points, indices[0]);\n          endLabel.attr({\n            x: pt[0] + distanceX,\n            y: pt[1] + distanceY\n          });\n          valueAnimation && (value = seriesModel.getRawValue(indices[0]));\n        } else {\n          var pt = polyline.getPointOn(xOrY, dim);\n          pt && endLabel.attr({\n            x: pt[0] + distanceX,\n            y: pt[1] + distanceY\n          });\n          var startValue = seriesModel.getRawValue(indices[0]);\n          var endValue = seriesModel.getRawValue(indices[1]);\n          valueAnimation && (value = modelUtil.interpolateRawValues(data, precision, startValue, endValue, dataIndexRange.t));\n        }\n        animationRecord.lastFrameIndex = indices[0];\n      } else {\n        // If diff <= 0, which is the range is not found(Include NaN)\n        // Choose the first point or last point.\n        var idx = percent === 1 || animationRecord.lastFrameIndex > 0 ? indices[0] : 0;\n        var pt = getPointAtIndex(points, idx);\n        valueAnimation && (value = seriesModel.getRawValue(idx));\n        endLabel.attr({\n          x: pt[0] + distanceX,\n          y: pt[1] + distanceY\n        });\n      }\n      if (valueAnimation) {\n        var inner = labelInner(endLabel);\n        if (typeof inner.setLabelText === 'function') {\n          inner.setLabelText(value);\n        }\n      }\n    }\n  };\n  /**\r\n   * @private\r\n   */\n  // FIXME Two value axis\n  LineView.prototype._doUpdateAnimation = function (data, stackedOnPoints, coordSys, api, step, valueOrigin, connectNulls) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n    if (step) {\n      // TODO If stacked series is not step\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, diff.current, coordSys, step, connectNulls);\n      current = turnPointsIntoStep(diff.current, null, coordSys, step, connectNulls);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, diff.next, coordSys, step, connectNulls);\n      next = turnPointsIntoStep(diff.next, null, coordSys, step, connectNulls);\n    }\n    // Don't apply animation if diff is large.\n    // For better result and avoid memory explosion problems like\n    // https://github.com/apache/incubator-echarts/issues/12229\n    if (getBoundingDiff(current, next) > 3000 || polygon && getBoundingDiff(stackedOnCurrent, stackedOnNext) > 3000) {\n      polyline.stopAnimation();\n      polyline.setShape({\n        points: next\n      });\n      if (polygon) {\n        polygon.stopAnimation();\n        polygon.setShape({\n          points: next,\n          stackedOnPoints: stackedOnNext\n        });\n      }\n      return;\n    }\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    var target = {\n      shape: {\n        points: next\n      }\n    };\n    // Also animate the original points.\n    // If points reference is changed when turning into step line.\n    if (diff.current !== current) {\n      target.shape.__points = diff.next;\n    }\n    // Stop previous animation.\n    polyline.stopAnimation();\n    graphic.updateProps(polyline, target, seriesModel);\n    if (polygon) {\n      polygon.setShape({\n        // Reuse the points with polyline.\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      polygon.stopAnimation();\n      graphic.updateProps(polygon, {\n        shape: {\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n      // If use attr directly in updateProps.\n      if (polyline.shape.points !== polygon.shape.points) {\n        polygon.shape.points = polyline.shape.points;\n      }\n    }\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n          });\n        }\n      }\n    }\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        polygon && polygon.dirtyShape();\n        var points = polyline.shape.__points;\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          var offset = updatedDataInfo[i].ptIdx * 2;\n          el.x = points[offset];\n          el.y = points[offset + 1];\n          el.markRedraw();\n        }\n      });\n    }\n  };\n  LineView.prototype.remove = function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n    this._lineGroup.removeAll();\n    this._symbolDraw.remove(true);\n    // Remove temporary created elements when highlighting\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._endLabel = this._data = null;\n  };\n  LineView.type = 'line';\n  return LineView;\n}(ChartView);\nexport default LineView;", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { map } from 'zrender/lib/core/util.js';\nimport createRenderPlanner from '../chart/helper/createRenderPlanner.js';\nimport { isDimensionStacked } from '../data/helper/dataStackHelper.js';\nimport { createFloat32Array } from '../util/vendor.js';\nexport default function pointsLayout(seriesType, forceStoreInTypedArray) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var useTypedArray = forceStoreInTypedArray || pipelineContext.large;\n      if (!coordSys) {\n        return;\n      }\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }).slice(0, 2);\n      var dimLen = dims.length;\n      var stackResultDim = data.getCalculationInfo('stackResultDimension');\n      if (isDimensionStacked(data, dims[0])) {\n        dims[0] = stackResultDim;\n      }\n      if (isDimensionStacked(data, dims[1])) {\n        dims[1] = stackResultDim;\n      }\n      var store = data.getStore();\n      var dimIdx0 = data.getDimensionIndex(dims[0]);\n      var dimIdx1 = data.getDimensionIndex(dims[1]);\n      return dimLen && {\n        progress: function (params, data) {\n          var segCount = params.end - params.start;\n          var points = useTypedArray && createFloat32Array(segCount * dimLen);\n          var tmpIn = [];\n          var tmpOut = [];\n          for (var i = params.start, offset = 0; i < params.end; i++) {\n            var point = void 0;\n            if (dimLen === 1) {\n              var x = store.get(dimIdx0, i);\n              // NOTE: Make sure the second parameter is null to use default strategy.\n              point = coordSys.dataToPoint(x, null, tmpOut);\n            } else {\n              tmpIn[0] = store.get(dimIdx0, i);\n              tmpIn[1] = store.get(dimIdx1, i);\n              // Let coordinate system to handle the NaN data.\n              point = coordSys.dataToPoint(tmpIn, null, tmpOut);\n            }\n            if (useTypedArray) {\n              points[offset++] = point[0];\n              points[offset++] = point[1];\n            } else {\n              data.setItemLayout(i, point.slice());\n            }\n          }\n          useTypedArray && data.setLayout('points', points);\n        }\n      };\n    }\n  };\n}\n;", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport LineSeries from './LineSeries.js';\nimport LineView from './LineView.js';\n// In case developer forget to include grid component\nimport layoutPoints from '../../layout/points.js';\nimport dataSample from '../../processor/dataSample.js';\nexport function install(registers) {\n  registers.registerChartView(LineView);\n  registers.registerSeriesModel(LineSeries);\n  registers.registerLayout(layoutPoints('line', true));\n  registers.registerVisual({\n    seriesType: 'line',\n    reset: function (seriesModel) {\n      var data = seriesModel.getData();\n      // Visual coding for legend\n      var lineStyle = seriesModel.getModel('lineStyle').getLineStyle();\n      if (lineStyle && !lineStyle.stroke) {\n        // Fill in visual should be palette color if\n        // has color callback\n        lineStyle.stroke = data.getVisual('style').fill;\n      }\n      data.setVisual('legendLineStyle', lineStyle);\n    }\n  });\n  // Down sample after filter\n  registers.registerProcessor(registers.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));\n}"],
  "mappings": "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",
  "names": ["LineSeriesModel", "Symbol", "idx", "SymbolDraw", "el", "ECPolylineShape", "ECPolyline", "ECPolygonShape", "ECPolygon", "isPointNull", "LineView", "dataIndex", "i", "el", "data"]
}
