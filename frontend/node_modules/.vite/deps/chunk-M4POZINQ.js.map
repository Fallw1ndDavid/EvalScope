{
  "version": 3,
  "sources": ["../../echarts/lib/scale/helper.js", "../../echarts/lib/scale/Scale.js", "../../echarts/lib/data/OrdinalMeta.js", "../../echarts/lib/scale/Ordinal.js", "../../echarts/lib/scale/Interval.js", "../../echarts/lib/scale/Time.js", "../../echarts/lib/scale/Log.js", "../../echarts/lib/coord/scaleRawExtentInfo.js", "../../echarts/lib/coord/axisHelper.js"],
  "sourcesContent": ["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { getPrecision, round, nice, quantityExponent } from '../util/number.js';\nexport function isValueNice(val) {\n  var exp10 = Math.pow(10, quantityExponent(Math.abs(val)));\n  var f = Math.abs(val / exp10);\n  return f === 0 || f === 1 || f === 2 || f === 3 || f === 5;\n}\nexport function isIntervalOrLogScale(scale) {\n  return scale.type === 'interval' || scale.type === 'log';\n}\n/**\r\n * @param extent Both extent[0] and extent[1] should be valid number.\r\n *               Should be extent[0] < extent[1].\r\n * @param splitNumber splitNumber should be >= 1.\r\n */\nexport function intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = nice(span / splitNumber, true);\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  }\n  // Tow more digital for tick.\n  var precision = result.intervalPrecision = getIntervalPrecision(interval);\n  // Niced extent inside original extent\n  var niceTickExtent = result.niceTickExtent = [round(Math.ceil(extent[0] / interval) * interval, precision), round(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\nexport function increaseInterval(interval) {\n  var exp10 = Math.pow(10, quantityExponent(interval));\n  // Increase interval\n  var f = interval / exp10;\n  if (!f) {\n    f = 1;\n  } else if (f === 2) {\n    f = 3;\n  } else if (f === 3) {\n    f = 5;\n  } else {\n    // f is 1 or 5\n    f *= 2;\n  }\n  return round(f * exp10);\n}\n/**\r\n * @return interval precision\r\n */\nexport function getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return getPrecision(interval) + 2;\n}\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n}\n// In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\nexport function fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\nexport function contain(val, extent) {\n  return val >= extent[0] && val <= extent[1];\n}\nexport function normalize(val, extent) {\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n  return (val - extent[0]) / (extent[1] - extent[0]);\n}\nexport function scale(val, extent) {\n  return val * (extent[1] - extent[0]) + extent[0];\n}", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport * as clazzUtil from '../util/clazz.js';\nvar Scale = /** @class */function () {\n  function Scale(setting) {\n    this._setting = setting || {};\n    this._extent = [Infinity, -Infinity];\n  }\n  Scale.prototype.getSetting = function (name) {\n    return this._setting[name];\n  };\n  /**\r\n   * Set extent from data\r\n   */\n  Scale.prototype.unionExtent = function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]);\n    // not setExtent because in log axis it may transformed to power\n    // this.setExtent(extent[0], extent[1]);\n  };\n  /**\r\n   * Set extent from data\r\n   */\n  Scale.prototype.unionExtentFromData = function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  };\n  /**\r\n   * Get extent\r\n   *\r\n   * Extent is always in increase order.\r\n   */\n  Scale.prototype.getExtent = function () {\n    return this._extent.slice();\n  };\n  /**\r\n   * Set extent\r\n   */\n  Scale.prototype.setExtent = function (start, end) {\n    var thisExtent = this._extent;\n    if (!isNaN(start)) {\n      thisExtent[0] = start;\n    }\n    if (!isNaN(end)) {\n      thisExtent[1] = end;\n    }\n  };\n  /**\r\n   * If value is in extent range\r\n   */\n  Scale.prototype.isInExtentRange = function (value) {\n    return this._extent[0] <= value && this._extent[1] >= value;\n  };\n  /**\r\n   * When axis extent depends on data and no data exists,\r\n   * axis ticks should not be drawn, which is named 'blank'.\r\n   */\n  Scale.prototype.isBlank = function () {\n    return this._isBlank;\n  };\n  /**\r\n   * When axis extent depends on data and no data exists,\r\n   * axis ticks should not be drawn, which is named 'blank'.\r\n   */\n  Scale.prototype.setBlank = function (isBlank) {\n    this._isBlank = isBlank;\n  };\n  return Scale;\n}();\nclazzUtil.enableClassManagement(Scale);\nexport default Scale;", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { createHashMap, isObject, map, isString } from 'zrender/lib/core/util.js';\nvar uidBase = 0;\nvar OrdinalMeta = /** @class */function () {\n  function OrdinalMeta(opt) {\n    this.categories = opt.categories || [];\n    this._needCollect = opt.needCollect;\n    this._deduplication = opt.deduplication;\n    this.uid = ++uidBase;\n  }\n  OrdinalMeta.createByAxisModel = function (axisModel) {\n    var option = axisModel.option;\n    var data = option.data;\n    var categories = data && map(data, getName);\n    return new OrdinalMeta({\n      categories: categories,\n      needCollect: !categories,\n      // deduplication is default in axis.\n      deduplication: option.dedplication !== false\n    });\n  };\n  ;\n  OrdinalMeta.prototype.getOrdinal = function (category) {\n    // @ts-ignore\n    return this._getOrCreateMap().get(category);\n  };\n  /**\r\n   * @return The ordinal. If not found, return NaN.\r\n   */\n  OrdinalMeta.prototype.parseAndCollect = function (category) {\n    var index;\n    var needCollect = this._needCollect;\n    // The value of category dim can be the index of the given category set.\n    // This feature is only supported when !needCollect, because we should\n    // consider a common case: a value is 2017, which is a number but is\n    // expected to be tread as a category. This case usually happen in dataset,\n    // where it happent to be no need of the index feature.\n    if (!isString(category) && !needCollect) {\n      return category;\n    }\n    // Optimize for the scenario:\n    // category is ['2012-01-01', '2012-01-02', ...], where the input\n    // data has been ensured not duplicate and is large data.\n    // Notice, if a dataset dimension provide categroies, usually echarts\n    // should remove duplication except user tell echarts dont do that\n    // (set axis.deduplication = false), because echarts do not know whether\n    // the values in the category dimension has duplication (consider the\n    // parallel-aqi example)\n    if (needCollect && !this._deduplication) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      return index;\n    }\n    var map = this._getOrCreateMap();\n    // @ts-ignore\n    index = map.get(category);\n    if (index == null) {\n      if (needCollect) {\n        index = this.categories.length;\n        this.categories[index] = category;\n        // @ts-ignore\n        map.set(category, index);\n      } else {\n        index = NaN;\n      }\n    }\n    return index;\n  };\n  // Consider big data, do not create map until needed.\n  OrdinalMeta.prototype._getOrCreateMap = function () {\n    return this._map || (this._map = createHashMap(this.categories));\n  };\n  return OrdinalMeta;\n}();\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\nexport default OrdinalMeta;", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\n/**\r\n * Linear continuous scale\r\n * http://en.wikipedia.org/wiki/Level_of_measurement\r\n */\n// FIXME only one data\nimport Scale from './Scale.js';\nimport OrdinalMeta from '../data/OrdinalMeta.js';\nimport * as scaleHelper from './helper.js';\nimport { isArray, map, isObject, isString } from 'zrender/lib/core/util.js';\nvar OrdinalScale = /** @class */function (_super) {\n  __extends(OrdinalScale, _super);\n  function OrdinalScale(setting) {\n    var _this = _super.call(this, setting) || this;\n    _this.type = 'ordinal';\n    var ordinalMeta = _this.getSetting('ordinalMeta');\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta) {\n      ordinalMeta = new OrdinalMeta({});\n    }\n    if (isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: map(ordinalMeta, function (item) {\n          return isObject(item) ? item.value : item;\n        })\n      });\n    }\n    _this._ordinalMeta = ordinalMeta;\n    _this._extent = _this.getSetting('extent') || [0, ordinalMeta.categories.length - 1];\n    return _this;\n  }\n  OrdinalScale.prototype.parse = function (val) {\n    // Caution: Math.round(null) will return `0` rather than `NaN`\n    if (val == null) {\n      return NaN;\n    }\n    return isString(val) ? this._ordinalMeta.getOrdinal(val)\n    // val might be float.\n    : Math.round(val);\n  };\n  OrdinalScale.prototype.contain = function (rank) {\n    rank = this.parse(rank);\n    return scaleHelper.contain(rank, this._extent) && this._ordinalMeta.categories[rank] != null;\n  };\n  /**\r\n   * Normalize given rank or name to linear [0, 1]\r\n   * @param val raw ordinal number.\r\n   * @return normalized value in [0, 1].\r\n   */\n  OrdinalScale.prototype.normalize = function (val) {\n    val = this._getTickNumber(this.parse(val));\n    return scaleHelper.normalize(val, this._extent);\n  };\n  /**\r\n   * @param val normalized value in [0, 1].\r\n   * @return raw ordinal number.\r\n   */\n  OrdinalScale.prototype.scale = function (val) {\n    val = Math.round(scaleHelper.scale(val, this._extent));\n    return this.getRawOrdinalNumber(val);\n  };\n  OrdinalScale.prototype.getTicks = function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n    while (rank <= extent[1]) {\n      ticks.push({\n        value: rank\n      });\n      rank++;\n    }\n    return ticks;\n  };\n  OrdinalScale.prototype.getMinorTicks = function (splitNumber) {\n    // Not support.\n    return;\n  };\n  /**\r\n   * @see `Ordinal['_ordinalNumbersByTick']`\r\n   */\n  OrdinalScale.prototype.setSortInfo = function (info) {\n    if (info == null) {\n      this._ordinalNumbersByTick = this._ticksByOrdinalNumber = null;\n      return;\n    }\n    var infoOrdinalNumbers = info.ordinalNumbers;\n    var ordinalsByTick = this._ordinalNumbersByTick = [];\n    var ticksByOrdinal = this._ticksByOrdinalNumber = [];\n    // Unnecessary support negative tick in `realtimeSort`.\n    var tickNum = 0;\n    var allCategoryLen = this._ordinalMeta.categories.length;\n    for (var len = Math.min(allCategoryLen, infoOrdinalNumbers.length); tickNum < len; ++tickNum) {\n      var ordinalNumber = infoOrdinalNumbers[tickNum];\n      ordinalsByTick[tickNum] = ordinalNumber;\n      ticksByOrdinal[ordinalNumber] = tickNum;\n    }\n    // Handle that `series.data` only covers part of the `axis.category.data`.\n    var unusedOrdinal = 0;\n    for (; tickNum < allCategoryLen; ++tickNum) {\n      while (ticksByOrdinal[unusedOrdinal] != null) {\n        unusedOrdinal++;\n      }\n      ;\n      ordinalsByTick.push(unusedOrdinal);\n      ticksByOrdinal[unusedOrdinal] = tickNum;\n    }\n  };\n  OrdinalScale.prototype._getTickNumber = function (ordinal) {\n    var ticksByOrdinalNumber = this._ticksByOrdinalNumber;\n    // also support ordinal out of range of `ordinalMeta.categories.length`,\n    // where ordinal numbers are used as tick value directly.\n    return ticksByOrdinalNumber && ordinal >= 0 && ordinal < ticksByOrdinalNumber.length ? ticksByOrdinalNumber[ordinal] : ordinal;\n  };\n  /**\r\n   * @usage\r\n   * ```js\r\n   * const ordinalNumber = ordinalScale.getRawOrdinalNumber(tickVal);\r\n   *\r\n   * // case0\r\n   * const rawOrdinalValue = axisModel.getCategories()[ordinalNumber];\r\n   * // case1\r\n   * const rawOrdinalValue = this._ordinalMeta.categories[ordinalNumber];\r\n   * // case2\r\n   * const coord = axis.dataToCoord(ordinalNumber);\r\n   * ```\r\n   *\r\n   * @param {OrdinalNumber} tickNumber index of display\r\n   */\n  OrdinalScale.prototype.getRawOrdinalNumber = function (tickNumber) {\n    var ordinalNumbersByTick = this._ordinalNumbersByTick;\n    // tickNumber may be out of range, e.g., when axis max is larger than `ordinalMeta.categories.length`.,\n    // where ordinal numbers are used as tick value directly.\n    return ordinalNumbersByTick && tickNumber >= 0 && tickNumber < ordinalNumbersByTick.length ? ordinalNumbersByTick[tickNumber] : tickNumber;\n  };\n  /**\r\n   * Get item on tick\r\n   */\n  OrdinalScale.prototype.getLabel = function (tick) {\n    if (!this.isBlank()) {\n      var ordinalNumber = this.getRawOrdinalNumber(tick.value);\n      var cateogry = this._ordinalMeta.categories[ordinalNumber];\n      // Note that if no data, ordinalMeta.categories is an empty array.\n      // Return empty if it's not exist.\n      return cateogry == null ? '' : cateogry + '';\n    }\n  };\n  OrdinalScale.prototype.count = function () {\n    return this._extent[1] - this._extent[0] + 1;\n  };\n  OrdinalScale.prototype.unionExtentFromData = function (data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  };\n  /**\r\n   * @override\r\n   * If value is in extent range\r\n   */\n  OrdinalScale.prototype.isInExtentRange = function (value) {\n    value = this._getTickNumber(value);\n    return this._extent[0] <= value && this._extent[1] >= value;\n  };\n  OrdinalScale.prototype.getOrdinalMeta = function () {\n    return this._ordinalMeta;\n  };\n  OrdinalScale.prototype.calcNiceTicks = function () {};\n  OrdinalScale.prototype.calcNiceExtent = function () {};\n  OrdinalScale.type = 'ordinal';\n  return OrdinalScale;\n}(Scale);\nScale.registerClass(OrdinalScale);\nexport default OrdinalScale;", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport * as numberUtil from '../util/number.js';\nimport * as formatUtil from '../util/format.js';\nimport Scale from './Scale.js';\nimport * as helper from './helper.js';\nvar roundNumber = numberUtil.round;\nvar IntervalScale = /** @class */function (_super) {\n  __extends(IntervalScale, _super);\n  function IntervalScale() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'interval';\n    // Step is calculated in adjustExtent.\n    _this._interval = 0;\n    _this._intervalPrecision = 2;\n    return _this;\n  }\n  IntervalScale.prototype.parse = function (val) {\n    return val;\n  };\n  IntervalScale.prototype.contain = function (val) {\n    return helper.contain(val, this._extent);\n  };\n  IntervalScale.prototype.normalize = function (val) {\n    return helper.normalize(val, this._extent);\n  };\n  IntervalScale.prototype.scale = function (val) {\n    return helper.scale(val, this._extent);\n  };\n  IntervalScale.prototype.setExtent = function (start, end) {\n    var thisExtent = this._extent;\n    // start,end may be a Number like '25',so...\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  };\n  IntervalScale.prototype.unionExtent = function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]);\n    // unionExtent may called by it's sub classes\n    this.setExtent(extent[0], extent[1]);\n  };\n  IntervalScale.prototype.getInterval = function () {\n    return this._interval;\n  };\n  IntervalScale.prototype.setInterval = function (interval) {\n    this._interval = interval;\n    // Dropped auto calculated niceExtent and use user-set extent.\n    // We assume user wants to set both interval, min, max to get a better result.\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  };\n  /**\r\n   * @param expandToNicedExtent Whether expand the ticks to niced extent.\r\n   */\n  IntervalScale.prototype.getTicks = function (expandToNicedExtent) {\n    var interval = this._interval;\n    var extent = this._extent;\n    var niceTickExtent = this._niceExtent;\n    var intervalPrecision = this._intervalPrecision;\n    var ticks = [];\n    // If interval is 0, return [];\n    if (!interval) {\n      return ticks;\n    }\n    // Consider this case: using dataZoom toolbox, zoom and zoom.\n    var safeLimit = 10000;\n    if (extent[0] < niceTickExtent[0]) {\n      if (expandToNicedExtent) {\n        ticks.push({\n          value: roundNumber(niceTickExtent[0] - interval, intervalPrecision)\n        });\n      } else {\n        ticks.push({\n          value: extent[0]\n        });\n      }\n    }\n    var tick = niceTickExtent[0];\n    while (tick <= niceTickExtent[1]) {\n      ticks.push({\n        value: tick\n      });\n      // Avoid rounding error\n      tick = roundNumber(tick + interval, intervalPrecision);\n      if (tick === ticks[ticks.length - 1].value) {\n        // Consider out of safe float point, e.g.,\n        // -3711126.9907707 + 2e-10 === -3711126.9907707\n        break;\n      }\n      if (ticks.length > safeLimit) {\n        return [];\n      }\n    }\n    // Consider this case: the last item of ticks is smaller\n    // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n    var lastNiceTick = ticks.length ? ticks[ticks.length - 1].value : niceTickExtent[1];\n    if (extent[1] > lastNiceTick) {\n      if (expandToNicedExtent) {\n        ticks.push({\n          value: roundNumber(lastNiceTick + interval, intervalPrecision)\n        });\n      } else {\n        ticks.push({\n          value: extent[1]\n        });\n      }\n    }\n    return ticks;\n  };\n  IntervalScale.prototype.getMinorTicks = function (splitNumber) {\n    var ticks = this.getTicks(true);\n    var minorTicks = [];\n    var extent = this.getExtent();\n    for (var i = 1; i < ticks.length; i++) {\n      var nextTick = ticks[i];\n      var prevTick = ticks[i - 1];\n      var count = 0;\n      var minorTicksGroup = [];\n      var interval = nextTick.value - prevTick.value;\n      var minorInterval = interval / splitNumber;\n      while (count < splitNumber - 1) {\n        var minorTick = roundNumber(prevTick.value + (count + 1) * minorInterval);\n        // For the first and last interval. The count may be less than splitNumber.\n        if (minorTick > extent[0] && minorTick < extent[1]) {\n          minorTicksGroup.push(minorTick);\n        }\n        count++;\n      }\n      minorTicks.push(minorTicksGroup);\n    }\n    return minorTicks;\n  };\n  /**\r\n   * @param opt.precision If 'auto', use nice presision.\r\n   * @param opt.pad returns 1.50 but not 1.5 if precision is 2.\r\n   */\n  IntervalScale.prototype.getLabel = function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n    var precision = opt && opt.precision;\n    if (precision == null) {\n      precision = numberUtil.getPrecision(data.value) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    }\n    // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n    var dataNum = roundNumber(data.value, precision, true);\n    return formatUtil.addCommas(dataNum);\n  };\n  /**\r\n   * @param splitNumber By default `5`.\r\n   */\n  IntervalScale.prototype.calcNiceTicks = function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    if (!isFinite(span)) {\n      return;\n    }\n    // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  };\n  IntervalScale.prototype.calcNiceExtent = function (opt) {\n    var extent = this._extent;\n    // If extent start and end are same, expand them\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        // Note that extents can be both negative. See #13154\n        var expandSize = Math.abs(extent[0]);\n        // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n    var span = extent[1] - extent[0];\n    // If there are no data and extent are [Infinity, -Infinity]\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n    this.calcNiceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n    // let extent = this._extent;\n    var interval = this._interval;\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  };\n  IntervalScale.prototype.setNiceExtent = function (min, max) {\n    this._niceExtent = [min, max];\n  };\n  IntervalScale.type = 'interval';\n  return IntervalScale;\n}(Scale);\nScale.registerClass(IntervalScale);\nexport default IntervalScale;", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\n/*\r\n* A third-party license is embedded for some of the code in this file:\r\n* The \"scaleLevels\" was originally copied from \"d3.js\" with some\r\n* modifications made for this project.\r\n* (See more details in the comment on the definition of \"scaleLevels\" below.)\r\n* The use of the source code of this file is also subject to the terms\r\n* and consitions of the license of \"d3.js\" (BSD-3Clause, see\r\n* </licenses/LICENSE-d3>).\r\n*/\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design has\n// considered these common cases:\n// (1) Time that is persistent in server is in UTC, but it is needed to be displayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nimport * as numberUtil from '../util/number.js';\nimport { ONE_SECOND, ONE_MINUTE, ONE_HOUR, ONE_DAY, ONE_YEAR, format, leveledFormat, getUnitValue, timeUnits, fullLeveledFormatter, getPrimaryTimeUnit, isPrimaryTimeUnit, getDefaultFormatPrecisionOfInterval, fullYearGetterName, monthSetterName, fullYearSetterName, dateSetterName, hoursGetterName, hoursSetterName, minutesSetterName, secondsSetterName, millisecondsSetterName, monthGetterName, dateGetterName, minutesGetterName, secondsGetterName, millisecondsGetterName } from '../util/time.js';\nimport * as scaleHelper from './helper.js';\nimport IntervalScale from './Interval.js';\nimport Scale from './Scale.js';\nimport { warn } from '../util/log.js';\nimport { filter, isNumber, map } from 'zrender/lib/core/util.js';\n// FIXME \u516C\u7528\uFF1F\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n  return lo;\n};\nvar TimeScale = /** @class */function (_super) {\n  __extends(TimeScale, _super);\n  function TimeScale(settings) {\n    var _this = _super.call(this, settings) || this;\n    _this.type = 'time';\n    return _this;\n  }\n  /**\r\n   * Get label is mainly for other components like dataZoom, tooltip.\r\n   */\n  TimeScale.prototype.getLabel = function (tick) {\n    var useUTC = this.getSetting('useUTC');\n    return format(tick.value, fullLeveledFormatter[getDefaultFormatPrecisionOfInterval(getPrimaryTimeUnit(this._minLevelUnit))] || fullLeveledFormatter.second, useUTC, this.getSetting('locale'));\n  };\n  TimeScale.prototype.getFormattedLabel = function (tick, idx, labelFormatter) {\n    var isUTC = this.getSetting('useUTC');\n    var lang = this.getSetting('locale');\n    return leveledFormat(tick, idx, labelFormatter, lang, isUTC);\n  };\n  /**\r\n   * @override\r\n   */\n  TimeScale.prototype.getTicks = function () {\n    var interval = this._interval;\n    var extent = this._extent;\n    var ticks = [];\n    // If interval is 0, return [];\n    if (!interval) {\n      return ticks;\n    }\n    ticks.push({\n      value: extent[0],\n      level: 0\n    });\n    var useUTC = this.getSetting('useUTC');\n    var innerTicks = getIntervalTicks(this._minLevelUnit, this._approxInterval, useUTC, extent);\n    ticks = ticks.concat(innerTicks);\n    ticks.push({\n      value: extent[1],\n      level: 0\n    });\n    return ticks;\n  };\n  TimeScale.prototype.calcNiceExtent = function (opt) {\n    var extent = this._extent;\n    // If extent start and end are same, expand them\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    }\n    // If there are no data and extent are [Infinity, -Infinity]\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n    this.calcNiceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval);\n  };\n  TimeScale.prototype.calcNiceTicks = function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    this._approxInterval = span / approxTickNum;\n    if (minInterval != null && this._approxInterval < minInterval) {\n      this._approxInterval = minInterval;\n    }\n    if (maxInterval != null && this._approxInterval > maxInterval) {\n      this._approxInterval = maxInterval;\n    }\n    var scaleIntervalsLen = scaleIntervals.length;\n    var idx = Math.min(bisect(scaleIntervals, this._approxInterval, 0, scaleIntervalsLen), scaleIntervalsLen - 1);\n    // Interval that can be used to calculate ticks\n    this._interval = scaleIntervals[idx][1];\n    // Min level used when picking ticks from top down.\n    // We check one more level to avoid the ticks are to sparse in some case.\n    this._minLevelUnit = scaleIntervals[Math.max(idx - 1, 0)][0];\n  };\n  TimeScale.prototype.parse = function (val) {\n    // val might be float.\n    return isNumber(val) ? val : +numberUtil.parseDate(val);\n  };\n  TimeScale.prototype.contain = function (val) {\n    return scaleHelper.contain(this.parse(val), this._extent);\n  };\n  TimeScale.prototype.normalize = function (val) {\n    return scaleHelper.normalize(this.parse(val), this._extent);\n  };\n  TimeScale.prototype.scale = function (val) {\n    return scaleHelper.scale(val, this._extent);\n  };\n  TimeScale.type = 'time';\n  return TimeScale;\n}(IntervalScale);\n/**\r\n * This implementation was originally copied from \"d3.js\"\r\n * <https://github.com/d3/d3/blob/b516d77fb8566b576088e73410437494717ada26/src/time/scale.js>\r\n * with some modifications made for this program.\r\n * See the license statement at the head of this file.\r\n */\nvar scaleIntervals = [\n// Format                           interval\n['second', ONE_SECOND], ['minute', ONE_MINUTE], ['hour', ONE_HOUR], ['quarter-day', ONE_HOUR * 6], ['half-day', ONE_HOUR * 12], ['day', ONE_DAY * 1.2], ['half-week', ONE_DAY * 3.5], ['week', ONE_DAY * 7], ['month', ONE_DAY * 31], ['quarter', ONE_DAY * 95], ['half-year', ONE_YEAR / 2], ['year', ONE_YEAR] // 1Y\n];\nfunction isUnitValueSame(unit, valueA, valueB, isUTC) {\n  var dateA = numberUtil.parseDate(valueA);\n  var dateB = numberUtil.parseDate(valueB);\n  var isSame = function (unit) {\n    return getUnitValue(dateA, unit, isUTC) === getUnitValue(dateB, unit, isUTC);\n  };\n  var isSameYear = function () {\n    return isSame('year');\n  };\n  // const isSameHalfYear = () => isSameYear() && isSame('half-year');\n  // const isSameQuater = () => isSameYear() && isSame('quarter');\n  var isSameMonth = function () {\n    return isSameYear() && isSame('month');\n  };\n  var isSameDay = function () {\n    return isSameMonth() && isSame('day');\n  };\n  // const isSameHalfDay = () => isSameDay() && isSame('half-day');\n  var isSameHour = function () {\n    return isSameDay() && isSame('hour');\n  };\n  var isSameMinute = function () {\n    return isSameHour() && isSame('minute');\n  };\n  var isSameSecond = function () {\n    return isSameMinute() && isSame('second');\n  };\n  var isSameMilliSecond = function () {\n    return isSameSecond() && isSame('millisecond');\n  };\n  switch (unit) {\n    case 'year':\n      return isSameYear();\n    case 'month':\n      return isSameMonth();\n    case 'day':\n      return isSameDay();\n    case 'hour':\n      return isSameHour();\n    case 'minute':\n      return isSameMinute();\n    case 'second':\n      return isSameSecond();\n    case 'millisecond':\n      return isSameMilliSecond();\n  }\n}\n// const primaryUnitGetters = {\n//     year: fullYearGetterName(),\n//     month: monthGetterName(),\n//     day: dateGetterName(),\n//     hour: hoursGetterName(),\n//     minute: minutesGetterName(),\n//     second: secondsGetterName(),\n//     millisecond: millisecondsGetterName()\n// };\n// const primaryUnitUTCGetters = {\n//     year: fullYearGetterName(true),\n//     month: monthGetterName(true),\n//     day: dateGetterName(true),\n//     hour: hoursGetterName(true),\n//     minute: minutesGetterName(true),\n//     second: secondsGetterName(true),\n//     millisecond: millisecondsGetterName(true)\n// };\n// function moveTick(date: Date, unitName: TimeUnit, step: number, isUTC: boolean) {\n//     step = step || 1;\n//     switch (getPrimaryTimeUnit(unitName)) {\n//         case 'year':\n//             date[fullYearSetterName(isUTC)](date[fullYearGetterName(isUTC)]() + step);\n//             break;\n//         case 'month':\n//             date[monthSetterName(isUTC)](date[monthGetterName(isUTC)]() + step);\n//             break;\n//         case 'day':\n//             date[dateSetterName(isUTC)](date[dateGetterName(isUTC)]() + step);\n//             break;\n//         case 'hour':\n//             date[hoursSetterName(isUTC)](date[hoursGetterName(isUTC)]() + step);\n//             break;\n//         case 'minute':\n//             date[minutesSetterName(isUTC)](date[minutesGetterName(isUTC)]() + step);\n//             break;\n//         case 'second':\n//             date[secondsSetterName(isUTC)](date[secondsGetterName(isUTC)]() + step);\n//             break;\n//         case 'millisecond':\n//             date[millisecondsSetterName(isUTC)](date[millisecondsGetterName(isUTC)]() + step);\n//             break;\n//     }\n//     return date.getTime();\n// }\n// const DATE_INTERVALS = [[8, 7.5], [4, 3.5], [2, 1.5]];\n// const MONTH_INTERVALS = [[6, 5.5], [3, 2.5], [2, 1.5]];\n// const MINUTES_SECONDS_INTERVALS = [[30, 30], [20, 20], [15, 15], [10, 10], [5, 5], [2, 2]];\nfunction getDateInterval(approxInterval, daysInMonth) {\n  approxInterval /= ONE_DAY;\n  return approxInterval > 16 ? 16\n  // Math.floor(daysInMonth / 2) + 1  // In this case we only want one tick between two months.\n  : approxInterval > 7.5 ? 7 // TODO week 7 or day 8?\n  : approxInterval > 3.5 ? 4 : approxInterval > 1.5 ? 2 : 1;\n}\nfunction getMonthInterval(approxInterval) {\n  var APPROX_ONE_MONTH = 30 * ONE_DAY;\n  approxInterval /= APPROX_ONE_MONTH;\n  return approxInterval > 6 ? 6 : approxInterval > 3 ? 3 : approxInterval > 2 ? 2 : 1;\n}\nfunction getHourInterval(approxInterval) {\n  approxInterval /= ONE_HOUR;\n  return approxInterval > 12 ? 12 : approxInterval > 6 ? 6 : approxInterval > 3.5 ? 4 : approxInterval > 2 ? 2 : 1;\n}\nfunction getMinutesAndSecondsInterval(approxInterval, isMinutes) {\n  approxInterval /= isMinutes ? ONE_MINUTE : ONE_SECOND;\n  return approxInterval > 30 ? 30 : approxInterval > 20 ? 20 : approxInterval > 15 ? 15 : approxInterval > 10 ? 10 : approxInterval > 5 ? 5 : approxInterval > 2 ? 2 : 1;\n}\nfunction getMillisecondsInterval(approxInterval) {\n  return numberUtil.nice(approxInterval, true);\n}\nfunction getFirstTimestampOfUnit(date, unitName, isUTC) {\n  var outDate = new Date(date);\n  switch (getPrimaryTimeUnit(unitName)) {\n    case 'year':\n    case 'month':\n      outDate[monthSetterName(isUTC)](0);\n    case 'day':\n      outDate[dateSetterName(isUTC)](1);\n    case 'hour':\n      outDate[hoursSetterName(isUTC)](0);\n    case 'minute':\n      outDate[minutesSetterName(isUTC)](0);\n    case 'second':\n      outDate[secondsSetterName(isUTC)](0);\n      outDate[millisecondsSetterName(isUTC)](0);\n  }\n  return outDate.getTime();\n}\nfunction getIntervalTicks(bottomUnitName, approxInterval, isUTC, extent) {\n  var safeLimit = 10000;\n  var unitNames = timeUnits;\n  var iter = 0;\n  function addTicksInSpan(interval, minTimestamp, maxTimestamp, getMethodName, setMethodName, isDate, out) {\n    var date = new Date(minTimestamp);\n    var dateTime = minTimestamp;\n    var d = date[getMethodName]();\n    // if (isDate) {\n    //     d -= 1; // Starts with 0;   PENDING\n    // }\n    while (dateTime < maxTimestamp && dateTime <= extent[1]) {\n      out.push({\n        value: dateTime\n      });\n      d += interval;\n      date[setMethodName](d);\n      dateTime = date.getTime();\n    }\n    // This extra tick is for calcuating ticks of next level. Will not been added to the final result\n    out.push({\n      value: dateTime,\n      notAdd: true\n    });\n  }\n  function addLevelTicks(unitName, lastLevelTicks, levelTicks) {\n    var newAddedTicks = [];\n    var isFirstLevel = !lastLevelTicks.length;\n    if (isUnitValueSame(getPrimaryTimeUnit(unitName), extent[0], extent[1], isUTC)) {\n      return;\n    }\n    if (isFirstLevel) {\n      lastLevelTicks = [{\n        // TODO Optimize. Not include so may ticks.\n        value: getFirstTimestampOfUnit(new Date(extent[0]), unitName, isUTC)\n      }, {\n        value: extent[1]\n      }];\n    }\n    for (var i = 0; i < lastLevelTicks.length - 1; i++) {\n      var startTick = lastLevelTicks[i].value;\n      var endTick = lastLevelTicks[i + 1].value;\n      if (startTick === endTick) {\n        continue;\n      }\n      var interval = void 0;\n      var getterName = void 0;\n      var setterName = void 0;\n      var isDate = false;\n      switch (unitName) {\n        case 'year':\n          interval = Math.max(1, Math.round(approxInterval / ONE_DAY / 365));\n          getterName = fullYearGetterName(isUTC);\n          setterName = fullYearSetterName(isUTC);\n          break;\n        case 'half-year':\n        case 'quarter':\n        case 'month':\n          interval = getMonthInterval(approxInterval);\n          getterName = monthGetterName(isUTC);\n          setterName = monthSetterName(isUTC);\n          break;\n        case 'week': // PENDING If week is added. Ignore day.\n        case 'half-week':\n        case 'day':\n          interval = getDateInterval(approxInterval, 31); // Use 32 days and let interval been 16\n          getterName = dateGetterName(isUTC);\n          setterName = dateSetterName(isUTC);\n          isDate = true;\n          break;\n        case 'half-day':\n        case 'quarter-day':\n        case 'hour':\n          interval = getHourInterval(approxInterval);\n          getterName = hoursGetterName(isUTC);\n          setterName = hoursSetterName(isUTC);\n          break;\n        case 'minute':\n          interval = getMinutesAndSecondsInterval(approxInterval, true);\n          getterName = minutesGetterName(isUTC);\n          setterName = minutesSetterName(isUTC);\n          break;\n        case 'second':\n          interval = getMinutesAndSecondsInterval(approxInterval, false);\n          getterName = secondsGetterName(isUTC);\n          setterName = secondsSetterName(isUTC);\n          break;\n        case 'millisecond':\n          interval = getMillisecondsInterval(approxInterval);\n          getterName = millisecondsGetterName(isUTC);\n          setterName = millisecondsSetterName(isUTC);\n          break;\n      }\n      addTicksInSpan(interval, startTick, endTick, getterName, setterName, isDate, newAddedTicks);\n      if (unitName === 'year' && levelTicks.length > 1 && i === 0) {\n        // Add nearest years to the left extent.\n        levelTicks.unshift({\n          value: levelTicks[0].value - interval\n        });\n      }\n    }\n    for (var i = 0; i < newAddedTicks.length; i++) {\n      levelTicks.push(newAddedTicks[i]);\n    }\n    // newAddedTicks.length && console.log(unitName, newAddedTicks);\n    return newAddedTicks;\n  }\n  var levelsTicks = [];\n  var currentLevelTicks = [];\n  var tickCount = 0;\n  var lastLevelTickCount = 0;\n  for (var i = 0; i < unitNames.length && iter++ < safeLimit; ++i) {\n    var primaryTimeUnit = getPrimaryTimeUnit(unitNames[i]);\n    if (!isPrimaryTimeUnit(unitNames[i])) {\n      // TODO\n      continue;\n    }\n    addLevelTicks(unitNames[i], levelsTicks[levelsTicks.length - 1] || [], currentLevelTicks);\n    var nextPrimaryTimeUnit = unitNames[i + 1] ? getPrimaryTimeUnit(unitNames[i + 1]) : null;\n    if (primaryTimeUnit !== nextPrimaryTimeUnit) {\n      if (currentLevelTicks.length) {\n        lastLevelTickCount = tickCount;\n        // Remove the duplicate so the tick count can be precisely.\n        currentLevelTicks.sort(function (a, b) {\n          return a.value - b.value;\n        });\n        var levelTicksRemoveDuplicated = [];\n        for (var i_1 = 0; i_1 < currentLevelTicks.length; ++i_1) {\n          var tickValue = currentLevelTicks[i_1].value;\n          if (i_1 === 0 || currentLevelTicks[i_1 - 1].value !== tickValue) {\n            levelTicksRemoveDuplicated.push(currentLevelTicks[i_1]);\n            if (tickValue >= extent[0] && tickValue <= extent[1]) {\n              tickCount++;\n            }\n          }\n        }\n        var targetTickNum = (extent[1] - extent[0]) / approxInterval;\n        // Added too much in this level and not too less in last level\n        if (tickCount > targetTickNum * 1.5 && lastLevelTickCount > targetTickNum / 1.5) {\n          break;\n        }\n        // Only treat primary time unit as one level.\n        levelsTicks.push(levelTicksRemoveDuplicated);\n        if (tickCount > targetTickNum || bottomUnitName === unitNames[i]) {\n          break;\n        }\n      }\n      // Reset if next unitName is primary\n      currentLevelTicks = [];\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (iter >= safeLimit) {\n      warn('Exceed safe limit.');\n    }\n  }\n  var levelsTicksInExtent = filter(map(levelsTicks, function (levelTicks) {\n    return filter(levelTicks, function (tick) {\n      return tick.value >= extent[0] && tick.value <= extent[1] && !tick.notAdd;\n    });\n  }), function (levelTicks) {\n    return levelTicks.length > 0;\n  });\n  var ticks = [];\n  var maxLevel = levelsTicksInExtent.length - 1;\n  for (var i = 0; i < levelsTicksInExtent.length; ++i) {\n    var levelTicks = levelsTicksInExtent[i];\n    for (var k = 0; k < levelTicks.length; ++k) {\n      ticks.push({\n        value: levelTicks[k].value,\n        level: maxLevel - i\n      });\n    }\n  }\n  ticks.sort(function (a, b) {\n    return a.value - b.value;\n  });\n  // Remove duplicates\n  var result = [];\n  for (var i = 0; i < ticks.length; ++i) {\n    if (i === 0 || ticks[i].value !== ticks[i - 1].value) {\n      result.push(ticks[i]);\n    }\n  }\n  return result;\n}\nScale.registerClass(TimeScale);\nexport default TimeScale;", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport Scale from './Scale.js';\nimport * as numberUtil from '../util/number.js';\nimport * as scaleHelper from './helper.js';\n// Use some method of IntervalScale\nimport IntervalScale from './Interval.js';\nvar scaleProto = Scale.prototype;\n// FIXME:TS refactor: not good to call it directly with `this`?\nvar intervalScaleProto = IntervalScale.prototype;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = /** @class */function (_super) {\n  __extends(LogScale, _super);\n  function LogScale() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'log';\n    _this.base = 10;\n    _this._originalScale = new IntervalScale();\n    // FIXME:TS actually used by `IntervalScale`\n    _this._interval = 0;\n    return _this;\n  }\n  /**\r\n   * @param Whether expand the ticks to niced extent.\r\n   */\n  LogScale.prototype.getTicks = function (expandToNicedExtent) {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    var ticks = intervalScaleProto.getTicks.call(this, expandToNicedExtent);\n    return zrUtil.map(ticks, function (tick) {\n      var val = tick.value;\n      var powVal = numberUtil.round(mathPow(this.base, val));\n      // Fix #4158\n      powVal = val === extent[0] && this._fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && this._fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return {\n        value: powVal\n      };\n    }, this);\n  };\n  LogScale.prototype.setExtent = function (start, end) {\n    var base = mathLog(this.base);\n    // log(-Infinity) is NaN, so safe guard here\n    start = mathLog(Math.max(0, start)) / base;\n    end = mathLog(Math.max(0, end)) / base;\n    intervalScaleProto.setExtent.call(this, start, end);\n  };\n  /**\r\n   * @return {number} end\r\n   */\n  LogScale.prototype.getExtent = function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]);\n    // Fix #4158\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    this._fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    this._fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  };\n  LogScale.prototype.unionExtent = function (extent) {\n    this._originalScale.unionExtent(extent);\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  };\n  LogScale.prototype.unionExtentFromData = function (data, dim) {\n    // TODO\n    // filter value that <= 0\n    this.unionExtent(data.getApproximateExtent(dim));\n  };\n  /**\r\n   * Update interval and extent of intervals for nice ticks\r\n   * @param approxTickNum default 10 Given approx tick number\r\n   */\n  LogScale.prototype.calcNiceTicks = function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval;\n    // Filter ticks to get closer to the desired count.\n    if (err <= 0.5) {\n      interval *= 10;\n    }\n    // Interval should be integer\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  };\n  LogScale.prototype.calcNiceExtent = function (opt) {\n    intervalScaleProto.calcNiceExtent.call(this, opt);\n    this._fixMin = opt.fixMin;\n    this._fixMax = opt.fixMax;\n  };\n  LogScale.prototype.parse = function (val) {\n    return val;\n  };\n  LogScale.prototype.contain = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleHelper.contain(val, this._extent);\n  };\n  LogScale.prototype.normalize = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleHelper.normalize(val, this._extent);\n  };\n  LogScale.prototype.scale = function (val) {\n    val = scaleHelper.scale(val, this._extent);\n    return mathPow(this.base, val);\n  };\n  LogScale.type = 'log';\n  return LogScale;\n}(Scale);\nvar proto = LogScale.prototype;\nproto.getMinorTicks = intervalScaleProto.getMinorTicks;\nproto.getLabel = intervalScaleProto.getLabel;\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, numberUtil.getPrecision(originalVal));\n}\nScale.registerClass(LogScale);\nexport default LogScale;", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { assert, isArray, eqNaN, isFunction } from 'zrender/lib/core/util.js';\nimport { parsePercent } from 'zrender/lib/contain/text.js';\nvar ScaleRawExtentInfo = /** @class */function () {\n  function ScaleRawExtentInfo(scale, model,\n  // Usually: data extent from all series on this axis.\n  originalExtent) {\n    this._prepareParams(scale, model, originalExtent);\n  }\n  /**\r\n   * Parameters depending on outside (like model, user callback)\r\n   * are prepared and fixed here.\r\n   */\n  ScaleRawExtentInfo.prototype._prepareParams = function (scale, model,\n  // Usually: data extent from all series on this axis.\n  dataExtent) {\n    if (dataExtent[1] < dataExtent[0]) {\n      dataExtent = [NaN, NaN];\n    }\n    this._dataMin = dataExtent[0];\n    this._dataMax = dataExtent[1];\n    var isOrdinal = this._isOrdinal = scale.type === 'ordinal';\n    this._needCrossZero = scale.type === 'interval' && model.getNeedCrossZero && model.getNeedCrossZero();\n    var axisMinValue = model.get('min', true);\n    if (axisMinValue == null) {\n      axisMinValue = model.get('startValue', true);\n    }\n    var modelMinRaw = this._modelMinRaw = axisMinValue;\n    if (isFunction(modelMinRaw)) {\n      // This callback always provides users the full data extent (before data is filtered).\n      this._modelMinNum = parseAxisModelMinMax(scale, modelMinRaw({\n        min: dataExtent[0],\n        max: dataExtent[1]\n      }));\n    } else if (modelMinRaw !== 'dataMin') {\n      this._modelMinNum = parseAxisModelMinMax(scale, modelMinRaw);\n    }\n    var modelMaxRaw = this._modelMaxRaw = model.get('max', true);\n    if (isFunction(modelMaxRaw)) {\n      // This callback always provides users the full data extent (before data is filtered).\n      this._modelMaxNum = parseAxisModelMinMax(scale, modelMaxRaw({\n        min: dataExtent[0],\n        max: dataExtent[1]\n      }));\n    } else if (modelMaxRaw !== 'dataMax') {\n      this._modelMaxNum = parseAxisModelMinMax(scale, modelMaxRaw);\n    }\n    if (isOrdinal) {\n      // FIXME: there is a flaw here: if there is no \"block\" data processor like `dataZoom`,\n      // and progressive rendering is using, here the category result might just only contain\n      // the processed chunk rather than the entire result.\n      this._axisDataLen = model.getCategories().length;\n    } else {\n      var boundaryGap = model.get('boundaryGap');\n      var boundaryGapArr = isArray(boundaryGap) ? boundaryGap : [boundaryGap || 0, boundaryGap || 0];\n      if (typeof boundaryGapArr[0] === 'boolean' || typeof boundaryGapArr[1] === 'boolean') {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn('Boolean type for boundaryGap is only ' + 'allowed for ordinal axis. Please use string in ' + 'percentage instead, e.g., \"20%\". Currently, ' + 'boundaryGap is set to be 0.');\n        }\n        this._boundaryGapInner = [0, 0];\n      } else {\n        this._boundaryGapInner = [parsePercent(boundaryGapArr[0], 1), parsePercent(boundaryGapArr[1], 1)];\n      }\n    }\n  };\n  /**\r\n   * Calculate extent by prepared parameters.\r\n   * This method has no external dependency and can be called duplicatedly,\r\n   * getting the same result.\r\n   * If parameters changed, should call this method to recalcuate.\r\n   */\n  ScaleRawExtentInfo.prototype.calculate = function () {\n    // Notice: When min/max is not set (that is, when there are null/undefined,\n    // which is the most common case), these cases should be ensured:\n    // (1) For 'ordinal', show all axis.data.\n    // (2) For others:\n    //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n    //      disabled).\n    //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n    //      be the result that originalExtent enlarged by boundaryGap.\n    // (3) If no data, it should be ensured that `scale.setBlank` is set.\n    var isOrdinal = this._isOrdinal;\n    var dataMin = this._dataMin;\n    var dataMax = this._dataMax;\n    var axisDataLen = this._axisDataLen;\n    var boundaryGapInner = this._boundaryGapInner;\n    var span = !isOrdinal ? dataMax - dataMin || Math.abs(dataMin) : null;\n    // Currently if a `'value'` axis model min is specified as 'dataMin'/'dataMax',\n    // `boundaryGap` will not be used. It's the different from specifying as `null`/`undefined`.\n    var min = this._modelMinRaw === 'dataMin' ? dataMin : this._modelMinNum;\n    var max = this._modelMaxRaw === 'dataMax' ? dataMax : this._modelMaxNum;\n    // If `_modelMinNum`/`_modelMaxNum` is `null`/`undefined`, should not be fixed.\n    var minFixed = min != null;\n    var maxFixed = max != null;\n    if (min == null) {\n      min = isOrdinal ? axisDataLen ? 0 : NaN : dataMin - boundaryGapInner[0] * span;\n    }\n    if (max == null) {\n      max = isOrdinal ? axisDataLen ? axisDataLen - 1 : NaN : dataMax + boundaryGapInner[1] * span;\n    }\n    (min == null || !isFinite(min)) && (min = NaN);\n    (max == null || !isFinite(max)) && (max = NaN);\n    var isBlank = eqNaN(min) || eqNaN(max) || isOrdinal && !axisDataLen;\n    // If data extent modified, need to recalculated to ensure cross zero.\n    if (this._needCrossZero) {\n      // Axis is over zero and min is not set\n      if (min > 0 && max > 0 && !minFixed) {\n        min = 0;\n        // minFixed = true;\n      }\n      // Axis is under zero and max is not set\n      if (min < 0 && max < 0 && !maxFixed) {\n        max = 0;\n        // maxFixed = true;\n      }\n      // PENDING:\n      // When `needCrossZero` and all data is positive/negative, should it be ensured\n      // that the results processed by boundaryGap are positive/negative?\n      // If so, here `minFixed`/`maxFixed` need to be set.\n    }\n    var determinedMin = this._determinedMin;\n    var determinedMax = this._determinedMax;\n    if (determinedMin != null) {\n      min = determinedMin;\n      minFixed = true;\n    }\n    if (determinedMax != null) {\n      max = determinedMax;\n      maxFixed = true;\n    }\n    // Ensure min/max be finite number or NaN here. (not to be null/undefined)\n    // `NaN` means min/max axis is blank.\n    return {\n      min: min,\n      max: max,\n      minFixed: minFixed,\n      maxFixed: maxFixed,\n      isBlank: isBlank\n    };\n  };\n  ScaleRawExtentInfo.prototype.modifyDataMinMax = function (minMaxName, val) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(!this.frozen);\n    }\n    this[DATA_MIN_MAX_ATTR[minMaxName]] = val;\n  };\n  ScaleRawExtentInfo.prototype.setDeterminedMinMax = function (minMaxName, val) {\n    var attr = DETERMINED_MIN_MAX_ATTR[minMaxName];\n    if (process.env.NODE_ENV !== 'production') {\n      assert(!this.frozen\n      // Earse them usually means logic flaw.\n      && this[attr] == null);\n    }\n    this[attr] = val;\n  };\n  ScaleRawExtentInfo.prototype.freeze = function () {\n    // @ts-ignore\n    this.frozen = true;\n  };\n  return ScaleRawExtentInfo;\n}();\nexport { ScaleRawExtentInfo };\nvar DETERMINED_MIN_MAX_ATTR = {\n  min: '_determinedMin',\n  max: '_determinedMax'\n};\nvar DATA_MIN_MAX_ATTR = {\n  min: '_dataMin',\n  max: '_dataMax'\n};\n/**\r\n * Get scale min max and related info only depends on model settings.\r\n * This method can be called after coordinate system created.\r\n * For example, in data processing stage.\r\n *\r\n * Scale extent info probably be required multiple times during a workflow.\r\n * For example:\r\n * (1) `dataZoom` depends it to get the axis extent in \"100%\" state.\r\n * (2) `processor/extentCalculator` depends it to make sure whether axis extent is specified.\r\n * (3) `coordSys.update` use it to finally decide the scale extent.\r\n * But the callback of `min`/`max` should not be called multiple times.\r\n * The code below should not be implemented repeatedly either.\r\n * So we cache the result in the scale instance, which will be recreated at the beginning\r\n * of the workflow (because `scale` instance will be recreated each round of the workflow).\r\n */\nexport function ensureScaleRawExtentInfo(scale, model,\n// Usually: data extent from all series on this axis.\noriginalExtent) {\n  // Do not permit to recreate.\n  var rawExtentInfo = scale.rawExtentInfo;\n  if (rawExtentInfo) {\n    return rawExtentInfo;\n  }\n  rawExtentInfo = new ScaleRawExtentInfo(scale, model, originalExtent);\n  // @ts-ignore\n  scale.rawExtentInfo = rawExtentInfo;\n  return rawExtentInfo;\n}\nexport function parseAxisModelMinMax(scale, minMax) {\n  return minMax == null ? null : eqNaN(minMax) ? NaN : scale.parse(minMax);\n}", "\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport OrdinalScale from '../scale/Ordinal.js';\nimport IntervalScale from '../scale/Interval.js';\nimport Scale from '../scale/Scale.js';\nimport { prepareLayoutBarSeries, makeColumnLayout, retrieveColumnLayout } from '../layout/barGrid.js';\nimport BoundingRect from 'zrender/lib/core/BoundingRect.js';\nimport TimeScale from '../scale/Time.js';\nimport LogScale from '../scale/Log.js';\nimport { getStackedDimension } from '../data/helper/dataStackHelper.js';\nimport { ensureScaleRawExtentInfo } from './scaleRawExtentInfo.js';\n/**\r\n * Get axis scale extent before niced.\r\n * Item of returned array can only be number (including Infinity and NaN).\r\n *\r\n * Caution:\r\n * Precondition of calling this method:\r\n * The scale extent has been initialized using series data extent via\r\n * `scale.setExtent` or `scale.unionExtentFromData`;\r\n */\nexport function getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var rawExtentResult = ensureScaleRawExtentInfo(scale, model, scale.getExtent()).calculate();\n  scale.setBlank(rawExtentResult.isBlank);\n  var min = rawExtentResult.min;\n  var max = rawExtentResult.max;\n  // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n  // FIXME\n  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\n  // (2) Refactor the logic with `barGrid`. Is it not need to `makeBarWidthAndOffsetInfo` twice with different extent?\n  //     Should not depend on series type `bar`?\n  // (3) Fix that might overlap when using dataZoom.\n  // (4) Consider other chart types using `barGrid`?\n  // See #6728, #4862, `test/bar-overflow-time-plot.html`\n  var ecModel = model.ecModel;\n  if (ecModel && scaleType === 'time' /* || scaleType === 'interval' */) {\n    var barSeriesModels = prepareLayoutBarSeries('bar', ecModel);\n    var isBaseAxisAndHasBarSeries_1 = false;\n    zrUtil.each(barSeriesModels, function (seriesModel) {\n      isBaseAxisAndHasBarSeries_1 = isBaseAxisAndHasBarSeries_1 || seriesModel.getBaseAxis() === model.axis;\n    });\n    if (isBaseAxisAndHasBarSeries_1) {\n      // Calculate placement of bars on axis. TODO should be decoupled\n      // with barLayout\n      var barWidthAndOffset = makeColumnLayout(barSeriesModels);\n      // Adjust axis min and max to account for overflow\n      var adjustedScale = adjustScaleForOverflow(min, max, model, barWidthAndOffset);\n      min = adjustedScale.min;\n      max = adjustedScale.max;\n    }\n  }\n  return {\n    extent: [min, max],\n    // \"fix\" means \"fixed\", the value should not be\n    // changed in the subsequent steps.\n    fixMin: rawExtentResult.minFixed,\n    fixMax: rawExtentResult.maxFixed\n  };\n}\nfunction adjustScaleForOverflow(min, max, model,\n// Only support cartesian coord yet.\nbarWidthAndOffset) {\n  // Get Axis Length\n  var axisExtent = model.axis.getExtent();\n  var axisLength = Math.abs(axisExtent[1] - axisExtent[0]);\n  // Get bars on current base axis and calculate min and max overflow\n  var barsOnCurrentAxis = retrieveColumnLayout(barWidthAndOffset, model.axis);\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  minOverflow = Math.abs(minOverflow);\n  maxOverflow = Math.abs(maxOverflow);\n  var totalOverFlow = minOverflow + maxOverflow;\n  // Calculate required buffer based on old range and overflow\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n// Precondition of calling this method:\n// The scale extent has been initialized using series data extent via\n// `scale.setExtent` or `scale.unionExtentFromData`;\nexport function niceScaleExtent(scale, inModel) {\n  var model = inModel;\n  var extentInfo = getScaleExtent(scale, model);\n  var extent = extentInfo.extent;\n  var splitNumber = model.get('splitNumber');\n  if (scale instanceof LogScale) {\n    scale.base = model.get('logBase');\n  }\n  var scaleType = scale.type;\n  var interval = model.get('interval');\n  var isIntervalOrTime = scaleType === 'interval' || scaleType === 'time';\n  scale.setExtent(extent[0], extent[1]);\n  scale.calcNiceExtent({\n    splitNumber: splitNumber,\n    fixMin: extentInfo.fixMin,\n    fixMax: extentInfo.fixMax,\n    minInterval: isIntervalOrTime ? model.get('minInterval') : null,\n    maxInterval: isIntervalOrTime ? model.get('maxInterval') : null\n  });\n  // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\r\n * @param axisType Default retrieve from model.type\r\n */\nexport function createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale({\n          ordinalMeta: model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(),\n          extent: [Infinity, -Infinity]\n        });\n      case 'time':\n        return new TimeScale({\n          locale: model.ecModel.getLocaleModel(),\n          useUTC: model.ecModel.get('useUTC')\n        });\n      default:\n        // case 'value'/'interval', 'log', or others.\n        return new (Scale.getClass(axisType) || IntervalScale)();\n    }\n  }\n}\n/**\r\n * Check if the axis cross 0\r\n */\nexport function ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\r\n * @param axis\r\n * @return Label formatter function.\r\n *         param: {number} tickValue,\r\n *         param: {number} idx, the index in all ticks.\r\n *                         If category axis, this param is not required.\r\n *         return: {string} label string.\r\n */\nexport function makeLabelFormatter(axis) {\n  var labelFormatter = axis.getLabelModel().get('formatter');\n  var categoryTickStart = axis.type === 'category' ? axis.scale.getExtent()[0] : null;\n  if (axis.scale.type === 'time') {\n    return function (tpl) {\n      return function (tick, idx) {\n        return axis.scale.getFormattedLabel(tick, idx, tpl);\n      };\n    }(labelFormatter);\n  } else if (zrUtil.isString(labelFormatter)) {\n    return function (tpl) {\n      return function (tick) {\n        // For category axis, get raw value; for numeric axis,\n        // get formatted label like '1,333,444'.\n        var label = axis.scale.getLabel(tick);\n        var text = tpl.replace('{value}', label != null ? label : '');\n        return text;\n      };\n    }(labelFormatter);\n  } else if (zrUtil.isFunction(labelFormatter)) {\n    return function (cb) {\n      return function (tick, idx) {\n        // The original intention of `idx` is \"the index of the tick in all ticks\".\n        // But the previous implementation of category axis do not consider the\n        // `axisLabel.interval`, which cause that, for example, the `interval` is\n        // `1`, then the ticks \"name5\", \"name7\", \"name9\" are displayed, where the\n        // corresponding `idx` are `0`, `2`, `4`, but not `0`, `1`, `2`. So we keep\n        // the definition here for back compatibility.\n        if (categoryTickStart != null) {\n          idx = tick.value - categoryTickStart;\n        }\n        return cb(getAxisRawValue(axis, tick), idx, tick.level != null ? {\n          level: tick.level\n        } : null);\n      };\n    }(labelFormatter);\n  } else {\n    return function (tick) {\n      return axis.scale.getLabel(tick);\n    };\n  }\n}\nexport function getAxisRawValue(axis, tick) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(tick) : tick.value;\n}\n/**\r\n * @param axis\r\n * @return Be null/undefined if no labels.\r\n */\nexport function estimateLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var scale = axis.scale;\n  if (!axisModel.get(['axisLabel', 'show']) || scale.isBlank()) {\n    return;\n  }\n  var realNumberScaleTicks;\n  var tickCount;\n  var categoryScaleExtent = scale.getExtent();\n  // Optimize for large category data, avoid call `getTicks()`.\n  if (scale instanceof OrdinalScale) {\n    tickCount = scale.count();\n  } else {\n    realNumberScaleTicks = scale.getTicks();\n    tickCount = realNumberScaleTicks.length;\n  }\n  var axisLabelModel = axis.getLabelModel();\n  var labelFormatter = makeLabelFormatter(axis);\n  var rect;\n  var step = 1;\n  // Simple optimization for large amount of labels\n  if (tickCount > 40) {\n    step = Math.ceil(tickCount / 40);\n  }\n  for (var i = 0; i < tickCount; i += step) {\n    var tick = realNumberScaleTicks ? realNumberScaleTicks[i] : {\n      value: categoryScaleExtent[0] + i\n    };\n    var label = labelFormatter(tick, i);\n    var unrotatedSingleRect = axisLabelModel.getTextRect(label);\n    var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n    rect ? rect.union(singleRect) : rect = singleRect;\n  }\n  return rect;\n}\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var beforeWidth = textRect.width;\n  var beforeHeight = textRect.height;\n  var afterWidth = beforeWidth * Math.abs(Math.cos(rotateRadians)) + Math.abs(beforeHeight * Math.sin(rotateRadians));\n  var afterHeight = beforeWidth * Math.abs(Math.sin(rotateRadians)) + Math.abs(beforeHeight * Math.cos(rotateRadians));\n  var rotatedRect = new BoundingRect(textRect.x, textRect.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n/**\r\n * @param model axisLabelModel or axisTickModel\r\n * @return {number|String} Can be null|'auto'|number|function\r\n */\nexport function getOptionCategoryInterval(model) {\n  var interval = model.get('interval');\n  return interval == null ? 'auto' : interval;\n}\n/**\r\n * Set `categoryInterval` as 0 implicitly indicates that\r\n * show all labels regardless of overlap.\r\n * @param {Object} axis axisModel.axis\r\n */\nexport function shouldShowAllLabels(axis) {\n  return axis.type === 'category' && getOptionCategoryInterval(axis.getLabelModel()) === 0;\n}\nexport function getDataDimensionsOnAxis(data, axisDim) {\n  // Remove duplicated dat dimensions caused by `getStackedDimension`.\n  var dataDimMap = {};\n  // Currently `mapDimensionsAll` will contain stack result dimension ('__\\0ecstackresult').\n  // PENDING: is it reasonable? Do we need to remove the original dim from \"coord dim\" since\n  // there has been stacked result dim?\n  zrUtil.each(data.mapDimensionsAll(axisDim), function (dataDim) {\n    // For example, the extent of the original dimension\n    // is [0.1, 0.5], the extent of the `stackResultDimension`\n    // is [7, 9], the final extent should NOT include [0.1, 0.5],\n    // because there is no graphic corresponding to [0.1, 0.5].\n    // See the case in `test/area-stack.html` `main1`, where area line\n    // stack needs `yAxis` not start from 0.\n    dataDimMap[getStackedDimension(data, dataDim)] = true;\n  });\n  return zrUtil.keys(dataDimMap);\n}\nexport function unionAxisExtentFromData(dataExtent, data, axisDim) {\n  if (data) {\n    zrUtil.each(getDataDimensionsOnAxis(data, axisDim), function (dim) {\n      var seriesExtent = data.getApproximateExtent(dim);\n      seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n      seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n    });\n  }\n}"],
  "mappings": "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",
  "names": ["scale", "Scale", "OrdinalMeta", "map", "OrdinalScale", "IntervalScale", "TimeScale", "unit", "levelTicks", "i", "LogScale", "ScaleRawExtentInfo", "scale", "scale", "scale"]
}
